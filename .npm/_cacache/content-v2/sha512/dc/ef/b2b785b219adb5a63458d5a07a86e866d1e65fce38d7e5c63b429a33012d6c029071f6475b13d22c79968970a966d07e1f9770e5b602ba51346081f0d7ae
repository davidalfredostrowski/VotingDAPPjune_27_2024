{"_id":"web3-validator","_rev":"271-5715ef8c9092975048292c89f699e9a6","name":"web3-validator","description":"JSON-Schema compatible validator for web3","dist-tags":{"rc":"2.0.0-rc.0","latest":"2.0.6","dev":"2.0.7-dev.9086b98.0"},"versions":{"0.1.0-alpha.0":{"name":"web3-validator","version":"0.1.0-alpha.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@0.1.0-alpha.0","maintainers":[{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"882e1d3b41b2be12dace8f8f45f2fba5c20d351b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-0.1.0-alpha.0.tgz","fileCount":110,"integrity":"sha512-Is5/oSPBvhvM4XZL4ILlxPk7DYL7KRhqOWXlkm1v6GWGfEiBK81giyEl0Ynfou+LPjA1FS7Hxs6jil4WjUMwKw==","signatures":[{"sig":"MEUCICQ+MSFxU1lFR0pOOOR1b7DZv/4bVOegJKDVRwsdXUYTAiEA7CGq8ZguSi0KFrxwzC/hcMM2dhDglvGho6eUui65eD0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":1045643,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjBo/WACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoOEw//b2I5oJhvWnS59F45yHS8a0vNxPS1GMk7aNQ0RyyjziSjkcho\r\nmVDzPghfeMH3Hhcbq7v6I9H4zOKMH4K0P7f/ksgqaMN77ZqAE6NI2Kc6/Glg\r\nVnOADOITwV2S3tPxYTHAMap9Arhdl2KLZ2BQjrTjLyLbUIqCGPGb+3x9vz6W\r\njSLZjLT8i7M3JAKpQJ2zgum8IpPRoTP2KYxV8TfWLs79x1DHrwAs7QCk6Rp4\r\nhXILLlCS4C6LDPIYjNp2B+QCSfnr0SJlWKx/Lx3V0v9OG//DID7BXaWwhZcn\r\nnR6p2+3s9sOqCYVI9Re55gDwUOV89Tf9ubQbfIiNLExgrheILKSBAmA4M58S\r\nfpp9jp7e/Pf/DvVDOYRAis9RLWRN96890GJuppRfi99pBQAnICWOyF/exgkt\r\njHZcBZ3vbTbDJI0vnnmq3ATXBjY6x80ErBWL7ANIw10KitjpuMJPbgjGg3qL\r\nBaIvIifhk8UIo+GYsqA/wuXRnLNwnFd7sQKDKlTHdHJGU3JonIAKNPXqoXwK\r\n/uvbYh4wthf5dbFOYR3Ad8/ee6emLbyXv3sXm9AvrVkWYw3pGF027O/JwPM9\r\nij3Zpd5FZfvO0TIDLOpMzJpKhVFwkRCpZTMVoxpwhB+Y12hZJE4tY2OZDizL\r\nnCAPUHxH12oGPHPrnmIejK7x+4VSpiiLCYY=\r\n=TbCF\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/index.js","types":"./dist/index.d.ts","browser":"dist/index.min.js","gitHead":"e6e512ac51fdf20529003a984c087c00b2027ecc","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"tsc --build","clean":"rimraf dist","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"rimraf dist","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./dist')\"","test:coverage":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:integration":"jest --config=./test/integration/jest.config.js --runInBand --passWithNoTests"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/5.4.3/node@v14.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"14.20.0","dependencies":{"ajv":"^8.11.0","web3-types":"^0.1.0-alpha.0","web3-errors":"^0.1.0-alpha.0","ethereum-cryptography":"^1.1.2"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_0.1.0-alpha.0_1661374422624_0.8652446006010259","host":"s3://npm-registry-packages"}},"0.1.1-alpha.0":{"name":"web3-validator","version":"0.1.1-alpha.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@0.1.1-alpha.0","maintainers":[{"name":"spacesailor","email":"signup@wyatt.email"},{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"dccc5fcf24a6f1b09c979615db23715409eae3e8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-0.1.1-alpha.0.tgz","fileCount":110,"integrity":"sha512-9TbUWf+oDsjRcrjZIMdqDPz+HTWQIB7EH3Xik+R+vEHnwghIBuZewXs3K536Fqhyej3NHrPBvhdrP4FQ8P2PJw==","signatures":[{"sig":"MEYCIQDSfoj/2O/EAlnDKB6AiQFGmvbD9Z3V8MWLeXkWwd4fYwIhALTi3UWI0r1FYQN43yMD134FNPA5WN/lSmLgZJaW2ukv","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":1045643,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjB9g8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq73A/+I81uCaQxpWUZDZ5e2CxlDsmZQprShO0lLH5x9ggcQlEHAZcn\r\nL+BDKolJP+fvKxVsXEWSdZXao+WLimBALH8fK6GrF7FBin7Ws/EJB22yCRAr\r\nhzsRUZIQOtrupvnEG5Az8BndP0XtX/RniGBQ+vutnR20KlIJwsWgltc/J5/M\r\nHdjxiNuK+kGhZgLEny8y9lKwr3ds6Z4YYQnze59umBvu7UA7CojUb0D06ZWl\r\nRrch7XO5EKvX96ZIKLWX3pEWejvCu9IrGjv0y7+DOVyMjDAbSwIzb23W7/Lu\r\nQm3XGboquVMuC3oIYlQtFOkY2NJN2Xa0BQgq+DUVvLy+AMbH5zXaTiofRR1L\r\nrpwNGQKT6IiX85c/yDQi2VdYrjbVby+ckklPjzz2k/xFavmVdVRLUA8C+1Y0\r\nW7dmsW6xFAmcoUNtuwg6MQkWEdRh2YI43PabozcqZbL5e68DWPeUtcOt6H/x\r\n1JG5aNHUxQ/yiOLXfdBxw3gj6s8zLl3dMOLjamNVNN9ZQhNNuv0xKpEXWk81\r\nV6jpIGu4HcSFlWD455jWIqgCDbha+xS9n0pYA1SYkmnwfogw4h1lnhopv11G\r\nMpgkdpMPjXW2xSfSvUG2gtUHGGTuTO4Z2lCgdqWMxyy8OUXt+LPNW7T546xX\r\nI8gBEv1vhsIBS12wypqGuQ9NyXHabQxpAEM=\r\n=XkuM\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/index.js","types":"./dist/index.d.ts","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Dependency Status][deps-image]][deps-url]\n[![Dev Dependency Status][deps-dev-image]][deps-dev-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n###### Get it from the NPM Registry\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Buffer`           | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: http://web3js.readthedocs.io/en/4.0/\n[repo]: https://github.com/ChainSafe/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/npm/v/web3-core-method.svg\n[npm-url]: https://npmjs.com/package/web3-validator\n[deps-image]: https://david-dm.org/ethereum/web3.js/4.x/status.svg?path=tools/web3-validator\n[deps-url]: https://david-dm.org/ethereum/web3.js/4.x?path=tools/web3-validator\n[deps-dev-image]: https://david-dm.org/ethereum/web3.js/4.x/dev-status.svg?path=tools/web3-validator\n[deps-dev-url]: https://david-dm.org/ethereum/web3.js/4.x?type=dev&path=tools/web3-validator\n","browser":"dist/index.min.js","gitHead":"766ebd976ef71458eaebf7a6108b268881e30552","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"tsc --build","clean":"rimraf dist","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"rimraf dist","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./dist')\"","test:coverage":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:integration":"jest --config=./test/integration/jest.config.js --runInBand --passWithNoTests"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/5.4.3/node@v14.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"14.20.0","dependencies":{"ajv":"^8.11.0","web3-types":"^0.1.1-alpha.0","web3-errors":"^0.1.1-alpha.0","ethereum-cryptography":"^1.1.2"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_0.1.1-alpha.0_1661458492047_0.4281886735374356","host":"s3://npm-registry-packages"}},"0.1.1-alpha.1":{"name":"web3-validator","version":"0.1.1-alpha.1","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@0.1.1-alpha.1","maintainers":[{"name":"spacesailor","email":"signup@wyatt.email"},{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7b91b536064a36ee3685cebd1acbe30631174aae","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-0.1.1-alpha.1.tgz","fileCount":110,"integrity":"sha512-eMJ1CpJAnYFscEUOM6RiXUKy8E7kX57d/G5CxhbIb3XDMjdd1r4MmKOLYt0w7NvVZmR736yrKOAqagiBdWu/Pg==","signatures":[{"sig":"MEYCIQCiqnaLqojSk1Z+jI7hC77xFv+s0PZT91P3iQxBks5ipQIhAPunDvNY9OaW/jSgQN+MPhMt3Co9+Fg2mmskq+PCVMxA","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":1115995,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjY/LVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqpDQ/+NwnSgXidTSnYLvH1rpVEw2jkPkxt4Nf+rXttyStyP6WdSNoH\r\nmMZ7qGab/pj7djNsDwAsRxeZjEE8MNMPW0EM6s9V56T8nvfkMvbokYbFaDXI\r\nApR9oIwrSGfq5q4Px02OAFOlefJUWVU5+O48WLvzZESl+GaNDS3Kb1CrqcSw\r\nGb60qC7vcstS0rQe5AfzEwqA8sf/Kc4+veOynJk0pHZlfXF2LD9OSWm2POBl\r\nTIerId22XwgV746Z9sTCDLFFMh9KNvYVKNnNaUzFSJRc9SPC+rbjMaiIFAex\r\nJVg0D+OgmfJPdhfUvnApH6CtcUWckMqMjvVo6dHDLPeQW90+HKtaPPmxq3O1\r\nfcfmP7te65MPGeHijW8CzxH3BsmM/msr3YCviJvxDT9ni5G2zcENOAgKw6P/\r\nUAzwzahDuFsWFsrD/emjs59a7Fn7Id7Do99VRPW7Wt7lidVKz35gkNy/AxK2\r\nZqn3v34+0AHY2dwxlAh0RoI54ny8sHBM6tXmKBUQttjnNZii2RGPdDlNGqya\r\nSoxLOcuyKzNbDHCeAWtYrLQOBAFbmLbJ2WHNK/6ndT1/iI2YVme3gutDt4dj\r\n8aM1HIfo34uDwHn+sRfrX5xPV3xr9C2ToK/Dnmh4z/HgiS04MgR/CvEO/y2f\r\njod9DPrxWAK7x1eb0Q25U7lJ/vcUs7qF1rc=\r\n=UtsR\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/index.js","types":"./dist/index.d.ts","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Dependency Status][deps-image]][deps-url]\n[![Dev Dependency Status][deps-dev-image]][deps-dev-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Buffer`           | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: http://web3js.readthedocs.io/en/4.0/\n[repo]: https://github.com/ChainSafe/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/npm/v/web3-core-method.svg\n[npm-url]: https://npmjs.com/package/web3-validator\n[deps-image]: https://david-dm.org/ethereum/web3.js/4.x/status.svg?path=tools/web3-validator\n[deps-url]: https://david-dm.org/ethereum/web3.js/4.x?path=tools/web3-validator\n[deps-dev-image]: https://david-dm.org/ethereum/web3.js/4.x/dev-status.svg?path=tools/web3-validator\n[deps-dev-url]: https://david-dm.org/ethereum/web3.js/4.x?type=dev&path=tools/web3-validator\n","browser":"dist/index.min.js","gitHead":"a754e3a965c30f42a6e639df27462650062833ee","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"tsc --build","clean":"rimraf dist","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"rimraf dist","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./dist')\"","test:coverage":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/5.4.3/node@v14.20.0+x64 (darwin)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"14.20.0","dependencies":{"ajv":"^8.11.0","web3-types":"^0.1.1-alpha.1","web3-errors":"^0.1.1-alpha.1","ethereum-cryptography":"^1.1.2"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_0.1.1-alpha.1_1667494612851_0.9510918671584425","host":"s3://npm-registry-packages"}},"0.1.1-alpha.2":{"name":"web3-validator","version":"0.1.1-alpha.2","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@0.1.1-alpha.2","maintainers":[{"name":"spacesailor","email":"signup@wyatt.email"},{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"3c652cf03413031af49613d7e10d77cce6df8519","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-0.1.1-alpha.2.tgz","fileCount":110,"integrity":"sha512-my2VeVYzM5YV1GB5o/Qd9UbzzhQrCWT3si43GvgIrZSG+69a3/hoBRHsPJykZT1Asg7oZ8X09arp3y7YYdfw9g==","signatures":[{"sig":"MEYCIQCXK1rVg/5+FosSyjElEK+n/Y+qzk8Ja6Vm0jpv7bNSWQIhANTqXfvJUaPyzK3z61d2rp/h5x9W0TrrGEt3gX1vvuno","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":1117144,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkjoFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqY2w/+NEtJ/JQ9pZ4jdRQRR2YYhZRjpWkoCBEAoV9Tm0/f7Oy9vFUz\r\nAafHGQdO3mNrzomYSYrH/BMDMBbt4h4mokZ+dWOWbMHtOmDPGzObOP69Hpkr\r\nTByuIDm+0PFWNkO2lunbVEyWJ7KSqqTRQi8SCniKruX0q0gI2F+vUh6YisOi\r\nVpVH39jW3PYVK3rvtXmOQblwp3jbFbTFiathOLkn4GO9gR1b6VMEc1yMiEvk\r\nJP/epcEr39tKzUxzib6I8mfKGSfkusfL80KAETdx5KCUX7LioS7mvoEIPbwN\r\nJ9b/UY0rWPXk9j78/kTUQJvMkCIAouOm5gssgUGtoEazpsauXcPCzwQopIvM\r\nJHGxlc0tazvm5vFChRcdxurWDQYQzAD3l5B76ixKGawGmiAM6r4a/6pG+hIE\r\nRPjjkGbPRrM7S7q06l3Pt/HAJ2U56PCrGlATfMA9cxEF7+DzXj1KwbjeR4E/\r\nbqSiYjyf/+gOMbK82cDlnFALYW1iuwHpdmC0N+aX4jHQQv+Lmw1sRkz587gu\r\nWNElU1E4OTbwNO824Q2PSMBEU5l5Hk9tSuSAKGX0dZN7Tm64UjSKEwYIxwt1\r\n8eVtLoXZHw34rMcqbAGiLfp1xASB2zIXbjQLyN+fppgSixuT23G6SEWMVfXn\r\n+Wxn+vti91dod8+ayqQ3ZkOpcDy2p6NbMAE=\r\n=SrhH\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/index.js","types":"./dist/index.d.ts","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Dependency Status][deps-image]][deps-url]\n[![Dev Dependency Status][deps-dev-image]][deps-dev-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Buffer`           | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: http://web3js.readthedocs.io/en/4.0/\n[repo]: https://github.com/ChainSafe/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/npm/v/web3-core-method.svg\n[npm-url]: https://npmjs.com/package/web3-validator\n[deps-image]: https://david-dm.org/ethereum/web3.js/4.x/status.svg?path=tools/web3-validator\n[deps-url]: https://david-dm.org/ethereum/web3.js/4.x?path=tools/web3-validator\n[deps-dev-image]: https://david-dm.org/ethereum/web3.js/4.x/dev-status.svg?path=tools/web3-validator\n[deps-dev-url]: https://david-dm.org/ethereum/web3.js/4.x?type=dev&path=tools/web3-validator\n","browser":"dist/index.min.js","gitHead":"7d5de3b049bf7929669c89e474387b16bd27c612","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"tsc --build","clean":"rimraf dist","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"rimraf dist","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./dist')\"","test:coverage":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests"},"_npmUser":{"name":"spacesailor","email":"signup@wyatt.email"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/5.4.3/node@v18.12.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.12.1","dependencies":{"ajv":"^8.11.0","web3-types":"^0.1.1-alpha.2","web3-errors":"^0.1.1-alpha.2","ethereum-cryptography":"^1.1.2"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_0.1.1-alpha.2_1670527493195_0.5079586579635742","host":"s3://npm-registry-packages"}},"0.1.1-alpha.3":{"name":"web3-validator","version":"0.1.1-alpha.3","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@0.1.1-alpha.3","maintainers":[{"name":"spacesailor","email":"signup@wyatt.email"},{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"67c5a7fb82feaf6c7185c4b9dfc7cef83763b70b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-0.1.1-alpha.3.tgz","fileCount":110,"integrity":"sha512-GcEbD1y2zXSJE1fj1v6tfMzi7NTbaquIHsxN9tywlgnByl6Y6nKqbpkyBS6GlcEkrV07unWySmBbCKRWivN1NA==","signatures":[{"sig":"MEUCIHHJoXFVExC/ZNx6HlFnDqZ+zEXEM68sifnx2mgZxJmzAiEA40DMlfKX31yta9CznJd8COfJl1AdvB225ipI3uQw8CM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":1117234,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjthfRACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqBAw/7BZbB2HWfIKT1awqlph+I7sxR3mRTq+VbC2cKpS8xagL5yOHi\r\nQa8vc2/ay29Itc2Lp2Z+R8otO2LI04CaexTqDEwkeMQ0DgcxGSvRAb4UWOjb\r\nvBlaPE1i8MSM/VgMhkCqKgrR+y2oTfzZbZY9su9L0s05nblt5hpsQdRCd9U0\r\nxTVp7OcRhLN5YRd56VWbaVaeLxyY52NIN/WJ2x8A0lv4RQv2wsJBHjnRj7h0\r\nVIgHTZb6UHZpAKVdxpPC+XMD5h/ejh4gGcv92iR/Np0FkZ9o4aDyNrtjNVpE\r\n99uP8mYxn9qKR1zc5yN4EBtzVQCaCVPycc7NVtShcL21WAU9KSgZ9F6cm/vS\r\nlx2q1je/ECbOxqW6zbkD5EvSHWcEighoCyz227iI3fvxCKyMil/B2u78Z6fL\r\ndr8+umKjzU82/5S/FHSzCgo9ECE4jwqWqXB+XePZm2O7pnWcDURJgwaUI5jM\r\nCKXhj8KFlOVb8GhHhE4ELmkXUx0r1wS1g4AhmrfsDuVFvy5m2YT1deFnX6KB\r\nZ+AeeG1OK1sclDYtqg9wgK7EfYdeNubm5lWr3Mdvrzg0rj2gqw1jXXUej52y\r\nz1lQC9PMjLUm59XqIEl4FyCKeX6xRMJyM3mJApTiWDVdyfDSjCOZczf61D2f\r\nLl/00leDFHBPS32kmIlWlbF9sLbEgEPo+7E=\r\n=h/+8\r\n-----END PGP SIGNATURE-----\r\n"},"main":"dist/index.js","types":"./dist/index.d.ts","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Dependency Status][deps-image]][deps-url]\n[![Dev Dependency Status][deps-dev-image]][deps-dev-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Buffer`           | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: http://web3js.readthedocs.io/en/4.0/\n[repo]: https://github.com/ChainSafe/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/npm/v/web3-core-method.svg\n[npm-url]: https://npmjs.com/package/web3-validator\n[deps-image]: https://david-dm.org/ethereum/web3.js/4.x/status.svg?path=tools/web3-validator\n[deps-url]: https://david-dm.org/ethereum/web3.js/4.x?path=tools/web3-validator\n[deps-dev-image]: https://david-dm.org/ethereum/web3.js/4.x/dev-status.svg?path=tools/web3-validator\n[deps-dev-url]: https://david-dm.org/ethereum/web3.js/4.x?type=dev&path=tools/web3-validator\n","browser":"dist/web3-validator.min.js","gitHead":"65cdda8caf5484229ac73f26557a8f50eba0c11c","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"tsc --build","clean":"rimraf dist","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"rimraf dist","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./dist')\"","test:coverage":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests"},"_npmUser":{"name":"spacesailor","email":"signup@wyatt.email"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/5.4.3/node@v18.12.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.12.1","dependencies":{"ajv":"^8.11.0","web3-types":"^0.1.1-alpha.2","web3-errors":"^0.1.1-alpha.2","ethereum-cryptography":"^1.1.2"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_0.1.1-alpha.3_1672878033557_0.09778771343918646","host":"s3://npm-registry-packages"}},"0.1.1-alpha.4":{"name":"web3-validator","version":"0.1.1-alpha.4","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@0.1.1-alpha.4","maintainers":[{"name":"spacesailor","email":"signup@wyatt.email"},{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"56fa053d5aead751a422ddad4b0e54a5c0f2c457","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-0.1.1-alpha.4.tgz","fileCount":110,"integrity":"sha512-f8S//Jcxz7RsAG5svQySK222wiO8XJqGFrDlz+k9RwoxpYejdYet91gMC88JFk3uGOomy880sHHhMRXxq3Sr2g==","signatures":[{"sig":"MEUCIQCq8UcYHNlDDE2CWfv8hI61crPSE3DGEfVhl9K+49rF2QIgLhfkW9D1zFX3sLuY7IiZ0uKKI/3S7f9lFqWTzVnleHU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":1117239,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjv2N5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp5dg//VTLBgzf0omUXmlSeJGzHCQX2VI0nYGTs742XaHJAOw5l2D9b\r\nJq9+YeSrkp42FphNyNboVA48A9lUSxFCFm+l9WCaHIXzE7AQTJrI/MTCUI9y\r\nzYPnyaLQocD19CRAr8hab3ahCIBJL+fADx/N4iD7S0CBzpwitaDN+hNj94Lm\r\nGihtD8GKBVh4BXALIBb9SYoR5VpSV+QxizQvZ094Fef8GW5JVGY4/nAZZWtV\r\no2LT+nl5M/O7EHEY705K/wpyIrhklzvRSZiRtgIXOOEq2bzpCK+6iS85gdO7\r\nO8JIY2pmIa6MR3tF8kNhY0FNLrJUtzUTYy+EA4xPYPD4oj2R3MBDpROurrgg\r\nZsTIVFWk3YYraYqTtxwflf+LM6nFZP4dwm7OmTC+SHYXBBYkVqxASrk/oTiO\r\ngKPGMY7qmdx2CEFvswPAUc1ULbJAYBrogwcpFCrGzDCuyt/15XG/nYk2zipk\r\nZeKTohfN8Yh2r01FqmdsJZ5zhZ7M3dx8aBed9E1N2iOjKTU/RKccKIzIF8Ab\r\ns0XdwsQvmLCfTqvunEBKBJEpH5FAuFV6sPUcOsX8QJEgAA7388ALHKlKKG3q\r\nz0zQJE9vOuYHM1LfhsDwKWEiN60BSAcOEufoTx+ye7doG+g2tQNaiWjgPKTa\r\ni2Pfb0PE5gFVxIoA29lUcRkdrhrZzxCPGbA=\r\n=RnwM\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","types":"./lib/index.d.ts","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Dependency Status][deps-image]][deps-url]\n[![Dev Dependency Status][deps-dev-image]][deps-dev-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Buffer`           | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: http://web3js.readthedocs.io/en/4.0/\n[repo]: https://github.com/ChainSafe/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/npm/v/web3-core-method.svg\n[npm-url]: https://npmjs.com/package/web3-validator\n[deps-image]: https://david-dm.org/ethereum/web3.js/4.x/status.svg?path=tools/web3-validator\n[deps-url]: https://david-dm.org/ethereum/web3.js/4.x?path=tools/web3-validator\n[deps-dev-image]: https://david-dm.org/ethereum/web3.js/4.x/dev-status.svg?path=tools/web3-validator\n[deps-dev-url]: https://david-dm.org/ethereum/web3.js/4.x?type=dev&path=tools/web3-validator\n","browser":"dist/web3-validator.min.js","gitHead":"9f0deb7273dd3e4d4b877ddb2d70805afb040586","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"tsc --build","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","test:coverage":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests"},"_npmUser":{"name":"spacesailor","email":"signup@wyatt.email"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/5.4.3/node@v18.12.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.12.1","dependencies":{"ajv":"^8.11.0","web3-types":"^0.1.1-alpha.3","web3-errors":"^0.1.1-alpha.3","ethereum-cryptography":"^1.1.2"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_0.1.1-alpha.4_1673487224905_0.1310338466167944","host":"s3://npm-registry-packages"}},"0.1.1-alpha.5":{"name":"web3-validator","version":"0.1.1-alpha.5","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@0.1.1-alpha.5","maintainers":[{"name":"spacesailor","email":"signup@wyatt.email"},{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a7e18af41003ed5cc338d9a7546c200a121f6060","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-0.1.1-alpha.5.tgz","fileCount":110,"integrity":"sha512-k927/FJHUghwg+pce+QdgQtvilNyQ2sQw3uMsF75YI57sB2i3xESwj1JNHt6iEACwNIAmFMJpYqEX1AbmnJ2sA==","signatures":[{"sig":"MEYCIQDxhMPCcm1gA7/xcig9TgYTgbjfZSqY3IxmPPFsZQltgQIhAKyUKuLVFrNGierNsRA62vBShBtwGWNM9bH1aBTsznxd","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":1118123,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjwg7OACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqs4g/+KSi8N+lj70EvSqRLLX/AbAtXxte4IHeCUFJNGLPE7l3hYpNh\r\nk8hSarBumrRNiuYjGYcBgVIlvN0JQ0w6PBv7HsQ+2GMheQGsi98owQ7lkR7U\r\n8EMp2sqDbeIPEMDOmqIeN83V3Tob/vzMIhW6sVKwYEcNrgC0O1divfHonH1v\r\noDVKJ8nl70lD9oEk3eNf9O5husrhG6S0yl3xGJVkEmNNpJR/Xzg0/jaVgXWu\r\nBjft/ZpC2iVjLZsdpeMQEpP9FvOjaQ76ytb+PtREd1YpuCcZEKtjGF7yw1Zp\r\n21D5V8m0VH8MJfdwVbb7ThltmmKWm5g/uE881AJUZovp3akZ7vuEkLWDXjDq\r\nJUbrRChEPSWWSIX+yS+WFUkDWEiwY6jvwDC4W1hWnno09gGP0AA81JmVt4yX\r\ny7PiicObLe62zzpFWh8X2h2IrEtfLFFCTWFMO8M49UPoBmYLPTsd6HD3ZtBG\r\nvE7muAo1MSqpn4Tn4JNKcm6bS6n2LRU8nZSTaDFhjC55WXm9Ii58pc6icoBu\r\niZO6BeKLtBL+wpIEa4tZDtN9JukMX1tapi8/e5MApdghEJ/r3GS8pv/bSGWg\r\n06UGSLVxV9OGQUNFy5yTAcDShmp0KG942kcF1KWpa7RkE4ifPEZ8g9lA38c+\r\nGig/5qxVN3NOH/3y8ggX+XGtvyAij7uOlJM=\r\n=M7UQ\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","types":"./lib/index.d.ts","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Dependency Status][deps-image]][deps-url]\n[![Dev Dependency Status][deps-dev-image]][deps-dev-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Buffer`           | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: http://web3js.readthedocs.io/en/4.0/\n[repo]: https://github.com/ChainSafe/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/npm/v/web3-core-method.svg\n[npm-url]: https://npmjs.com/package/web3-validator\n[deps-image]: https://david-dm.org/ethereum/web3.js/4.x/status.svg?path=tools/web3-validator\n[deps-url]: https://david-dm.org/ethereum/web3.js/4.x?path=tools/web3-validator\n[deps-dev-image]: https://david-dm.org/ethereum/web3.js/4.x/dev-status.svg?path=tools/web3-validator\n[deps-dev-url]: https://david-dm.org/ethereum/web3.js/4.x?type=dev&path=tools/web3-validator\n","gitHead":"ae1ae53c9192ddef32931c3cbf68c2a7e2946ec5","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"tsc --build","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","test:coverage":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests"},"_npmUser":{"name":"spacesailor","email":"signup@wyatt.email"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/5.4.3/node@v18.12.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.12.1","dependencies":{"ajv":"^8.11.0","web3-types":"^0.1.1-alpha.4","web3-errors":"^0.1.1-alpha.4","ethereum-cryptography":"^1.1.2"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_0.1.1-alpha.5_1673662158253_0.07681729618962274","host":"s3://npm-registry-packages"}},"1.0.0-rc.0":{"name":"web3-validator","version":"1.0.0-rc.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.0-rc.0","maintainers":[{"name":"spacesailor","email":"signup@wyatt.email"},{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bd49eb217284b814efbad7318332f69f64ddb4f8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.0-rc.0.tgz","fileCount":107,"integrity":"sha512-AT54Jw3yXcLvEtc1/4/8agnilnVZSuiSNDrqLWLO0v9Ppu+xL/kpdCQTkprvTxDvhytSkR3N+IQie5THpED0Wg==","signatures":[{"sig":"MEYCIQDzCt/8tWUIqOJMDQyNsERIML0nxd+7ggywQBMrpjjzLwIhALsxADugkIpkpgTkb+rYL/aD92W0ADZZsdptyauwZBw7","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":100036,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkC15EACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpy9w//edR2NcM/r8fJbPUUW78yZWM5EGavAC7LHdmFjJ2gg5BFjK8+\r\nezVkJnm8RS9RhbgGb4FFNQSjQwrmj00xo/ZuiJLk8OLpSKQD8MThoTuhA+Ah\r\n59NIZnvBqrFIU0qZnV+hJKCh/Oes0eWNSrRFDjdXBpDPGtOtotj7T73z5Prt\r\nmMYTVNRIAFv1wBOgiHE+Clb2qp03qxoqc7ka8hGiApiTmkqRXa96UeUZgLkm\r\nv/UkeekszB0T9zm+vW2+BujeOAHEGoVMomcJzUvq8+IGasuosDTjKohv8DxQ\r\nHuSdS6D1sLkCnGoz523O7aDAXbb97UfnLTlkuT0aTblr6svn31GXdNBY0bRa\r\n/yo061fJhMevhsFIFdiSFBMl6olbnuDvQSTfYUMqqHhYDpVc3DkDk7ZLDKVv\r\njdk2GlQ/jY3wTliEO3UIPh6mpzLRY+ltclDJG+NruwjzDyFdf1UJNfm6IVKO\r\nlQagxdrTkGKaDuKM5XS62JFMclltSnOy7+Wa9R+/uwtPt9GIGUm1EAApwp/q\r\ngrwSXb3bY6RmXxu4QxEkFMIbEn3pJDtm9XMAuwqFvOBbaPSnR3wEzsKdpkCt\r\nJpXlif60JTK6+xccgAWwynGB/Q8WnGjIb1x83gDwynXvMVPr60C2kfMPa1r5\r\ncj1zP8AZVRFm9kAKlQBCY2zlX/5wfRL97fI=\r\n=qaBv\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","types":"./lib/index.d.ts","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Dependency Status][deps-image]][deps-url]\n[![Dev Dependency Status][deps-dev-image]][deps-dev-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Buffer`           | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: http://web3js.readthedocs.io/en/4.0/\n[repo]: https://github.com/ChainSafe/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/npm/v/web3-core-method.svg\n[npm-url]: https://npmjs.com/package/web3-validator\n[deps-image]: https://david-dm.org/ethereum/web3.js/4.x/status.svg?path=tools/web3-validator\n[deps-url]: https://david-dm.org/ethereum/web3.js/4.x?path=tools/web3-validator\n[deps-dev-image]: https://david-dm.org/ethereum/web3.js/4.x/dev-status.svg?path=tools/web3-validator\n[deps-dev-url]: https://david-dm.org/ethereum/web3.js/4.x?type=dev&path=tools/web3-validator\n","engines":{"npm":">=6.12.0","node":">=14"},"gitHead":"e7d290c6921755dde95a029dec4d98aef05d4929","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"tsc --build","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/5.4.3/node@v14.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"14.20.0","dependencies":{"ajv":"^8.11.0","web3-types":"^1.0.0-rc.0","web3-errors":"^1.0.0-rc.0","ethereum-cryptography":"^1.1.2"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.0-rc.0_1678466628664_0.1278911668649636","host":"s3://npm-registry-packages"}},"1.0.0-rc.1":{"name":"web3-validator","version":"1.0.0-rc.1","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.0-rc.1","maintainers":[{"name":"spacesailor","email":"signup@wyatt.email"},{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e07266b0efbfb5014c6ca015bbad05c009229dcc","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.0-rc.1.tgz","fileCount":213,"integrity":"sha512-a6hgW4ZXkDzy22axDPnD8eW0RwYVWHedw0Un+uLsGcvZxqIh5+EKFPmo57wK6wPq+8/OgdVzxQtzDwX5S43Kmg==","signatures":[{"sig":"MEUCIQDfywTd6jadyRA2it4fi9MYsr9TFt08u9NdUTWVFCWZgQIgctQ1vrk1eJGqU2iwGJuHltBufUe9YDgM5spwqB++lUw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":285098,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkQR+7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmotbg/+OwM3YtWGvimkVU9Fgi7cIzAppzwIWz80nJbctZwvNBKGlhs9\r\n1aVJfSaBMxKyNtjXzfi0cJpfz3l3Z8PSgiPKB4RoMqrDP2r9VINqvDHb2GzQ\r\n5r8kKziXVJv+dDyvOiv2jJ3ooTN3mTY4F61xCbwb7Koy2nMmoYLWDT+gIEZV\r\ns2ejre1TSrhsCTwQdYsvSINPtvdxtVxAjEAvN80rWDyPLytFSAKPPk1j8bQE\r\nGEE9BuwVIX47wXjVVzlYeueh/67uJNusCilW88k509fJvHqALZ2n4TCn4meB\r\nInGxTCL8v7JzfHUH3PDGF17kM5VVgib94QM2zPJB0AwGyEz6dAfs5VLkY/W4\r\nte81632Y3AioYq7UJjoRp5z5VAIH1aqq1ND+MgigUf480RKhMVQ74mnQPyRD\r\nCI8NO+ekBuoabCFgq+CxFwTtM9nBrcBjovhul0eEO3EEiiLN7l3+vIhz5GmN\r\nKLxg/G+N8yF539Lh9N7Nen+7bIEB/PrqlTVhvjcioXBCATDOMP+yQOQqFP//\r\nqDg8FY40EtZjtOowQ8yT+Qe2bYL/NXI6vujESed5a8/ZKd7LiFaXlj9aicro\r\nofLYhYJqv2FEIsKRYRPgMD8vJDBOZB6jlVIm+fRbaSsJlst8JOu+e8eL16u1\r\nqcwIEqNAkhpkYbr/58eFO498tw8GDjJfWko=\r\n=LI/t\r\n-----END PGP SIGNATURE-----\r\n"},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Buffer`           | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"8bd3de3f1dece95a0f026aa226a7dfe0dad55541","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/5.4.3/node@v14.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"14.20.0","dependencies":{"ajv":"^8.11.0","web3-types":"^1.0.0-rc.1","web3-errors":"^1.0.0-rc.1","ethereum-cryptography":"^1.1.2"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.0-rc.1_1681989563680_0.08369365932608064","host":"s3://npm-registry-packages"}},"1.0.0-rc.2":{"name":"web3-validator","version":"1.0.0-rc.2","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.0-rc.2","maintainers":[{"name":"spacesailor","email":"signup@wyatt.email"},{"name":"jdevcs","email":"junaid@chainsafe.io"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0f570ab17b0239a83e73c929144c5cd37af6d37b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.0-rc.2.tgz","fileCount":184,"integrity":"sha512-2XyYNgyJzqK/tMGLyXOchLx6zrQq0rVYta65Krvas9YJnvrqOcI64UTSxWSg7ciRfnFlys5eD/OvRb7bESncxA==","signatures":[{"sig":"MEUCIQDyJ5vFuCT7zFAqDShWxjsYYiPOo/DXHAQV0RrDfzJLKQIgVE7n2Nxj1hIPjfmwHtt+IOxyKBz/+dolWc+u/ysHP6c=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891385},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e0c1aaca24b51ee6ac5975291170d97229f26910","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.10.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.10.0","dependencies":{"util":"^0.12.5","web3-types":"^1.0.0-rc.2","web3-errors":"^1.0.0-rc.2","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.0-rc.2_1685968574278_0.8716073592077376","host":"s3://npm-registry-packages"}},"1.0.0":{"name":"web3-validator","version":"1.0.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"65860fd735b77c20927f53c2a0a0bb5776460585","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.0.tgz","fileCount":184,"integrity":"sha512-WShojVeF7hcaPGzO9vgZukqxd6NWL5A9sIv5uhZzK0mGPvPvc0wqSdKeiwby0cFDH09AW2Q1Qz6knKhXDe7CzA==","signatures":[{"sig":"MEQCICbRxd+m2ZhFetFT5tUot77D9sr+97j6aSHUJQZHcakLAiAIXyzB4xFsytqLVVd1yz1+iF3pT8KQBdAcXjgRSv+Fqg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891370},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"5b5bf8765ab01946d8af215e5ecd343f321fbe2a","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.10.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.10.0","dependencies":{"util":"^0.12.5","web3-types":"^1.0.0","web3-errors":"^1.0.0","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.0_1686146885159_0.4669053932728413","host":"s3://npm-registry-packages"}},"1.0.1-dev.af57eae.0":{"name":"web3-validator","version":"1.0.1-dev.af57eae.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.af57eae.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"58ae55810ddb87da0d0bf1c3bb03f7bbc24dd669","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.af57eae.0.tgz","fileCount":184,"integrity":"sha512-9eiDzrBp5PrOOOpIlkkLKuWR1C0J4ea6/7WPQ9JOw4xvDeIShRKYujtxozxIYTETM8gq2Fx1wAkWUwvtAF9cHA==","signatures":[{"sig":"MEUCIHAU9j33WwRR4AtJxIJw47UD89aEEcjs6mvhYK/L8/+UAiEAxrva8JDuZGodi+JRVMzguknJ+cGU+Qo9a9LRFFlOiIA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"af57eae46c5ce0c350708138c6d83dbee54ced45","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.af57eae.0+af57eae","web3-errors":"1.0.1-dev.af57eae.0+af57eae","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.af57eae.0_1686300371388_0.22419750956018292","host":"s3://npm-registry-packages"}},"1.0.1-dev.f8a2533.0":{"name":"web3-validator","version":"1.0.1-dev.f8a2533.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.f8a2533.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"4dae75ac3fc1818945cdcdec428f77be92f45462","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.f8a2533.0.tgz","fileCount":184,"integrity":"sha512-zYTF/RQLWTwcpVR/TUEKD6NHH9RaA/nNx2F1e72R+vS7imgXOsW78NgQGFaGN3Agb9DnKvHEHmKI27dtpMbSbA==","signatures":[{"sig":"MEUCIHhmYbog2BmlHI5pBjz3IXrs19UiYrT5CxUfDH0iGFavAiEA7XKA12mt1+uatLrs9dB16+PtwvMyZf/AnHhOaq8Xs6c=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f8a2533c2b09ce0a62f8414f2f6eed83ab78ca1f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.f8a2533.0+f8a2533","web3-errors":"1.0.1-dev.f8a2533.0+f8a2533","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.f8a2533.0_1686410707559_0.43291045209253554","host":"s3://npm-registry-packages"}},"1.0.1-dev.2130d22.0":{"name":"web3-validator","version":"1.0.1-dev.2130d22.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.2130d22.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"70030c8033c5e9f35b3f5577f818c701dcf98f89","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.2130d22.0.tgz","fileCount":184,"integrity":"sha512-DBYnIjZHyvFXQm/TuEDGcoB2gugP5fSWOGz2f/FgNMxCxv8uUOt3X9dqunO9sa0tyH1CriPxOZ5NocN1cr5GxA==","signatures":[{"sig":"MEQCIDabxFSUHBtQw3iBQXXQuWuWXa0C3utGxD1DBu2UXfbRAiAZzuZpSzjJQ+wE+QeU1mBpYchA5Tve9mXAC8S2mRGLbA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"2130d229b13f9ff138304a9cea9ea3051fab2a76","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.2130d22.0+2130d22","web3-errors":"1.0.1-dev.2130d22.0+2130d22","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.2130d22.0_1686825132559_0.7164914998774687","host":"s3://npm-registry-packages"}},"1.0.1-dev.ab0f4cb.0":{"name":"web3-validator","version":"1.0.1-dev.ab0f4cb.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.ab0f4cb.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"62da89cc05d17576d8a8922de1d64dd61d496da4","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.ab0f4cb.0.tgz","fileCount":184,"integrity":"sha512-OBxbC7L6NFjWEedMoL9Qx+SkuYmyBPj5SjxA4aW3Tg7rpoALBGlJfzZkDZcUQJcipSS9hBKwxYjjo/Evz7ln1A==","signatures":[{"sig":"MEUCIDK5zJJayjJkbAvXWJPk5G4Q4j21B+Kek66mJNGpeNBaAiEAwx8tbORYLnEXcN/TW9O8V1WsboPCICbUL2nXRJP58tk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ab0f4cb5fe08512282ae3434906fc9e9327d1786","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.ab0f4cb.0+ab0f4cb","web3-errors":"1.0.1-dev.ab0f4cb.0+ab0f4cb","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.ab0f4cb.0_1687252062129_0.2490763864871932","host":"s3://npm-registry-packages"}},"1.0.1-dev.023f02d.0":{"name":"web3-validator","version":"1.0.1-dev.023f02d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.023f02d.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"17bef7ca30af704da1c5eaf72a66faca218589b5","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.023f02d.0.tgz","fileCount":184,"integrity":"sha512-UiLw6acHIbgEMjPvjiJ6EJIiVk+R8nZqRSYjzJGz5QBgBikG6hGQyQ4YV5+uYGAjcDs5Orw4Lp7bub0N1wBSRg==","signatures":[{"sig":"MEQCIEz2/LK8Ia/maVxeL89tJF0VYrUb/cpTKbD5YR+htludAiAUKbO3Hb+oJzxkKNvXEQa/C/IJWlX4SddW6yrjZjIOMg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"023f02d890a623ba800c3033074d553fe5346971","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.023f02d.0+023f02d","web3-errors":"1.0.1-dev.023f02d.0+023f02d","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.023f02d.0_1687252142052_0.9940685582059952","host":"s3://npm-registry-packages"}},"1.0.1-dev.a2a232f.0":{"name":"web3-validator","version":"1.0.1-dev.a2a232f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.a2a232f.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7c1fd302dc436bb6899bd1c5a89464b3de369168","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.a2a232f.0.tgz","fileCount":184,"integrity":"sha512-m9osYQOtbZBCW3l5tidQJFMxrHLQqdY6mgzNeQKgwGfSQsLZpXbEHszO80p3YVZqpzOmW8DQ4VuTVSPbzGVKNQ==","signatures":[{"sig":"MEUCIFv+rCelY4mxl1p+DzvGKUywloU+8Z3fLPAviuK1is3TAiEA7mufeokh1OQJLOF/gnr/JFsKUehRpdL9cUZ9LXK6mIE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a2a232fe306636da05868039a934ee491e957d8a","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.a2a232f.0+a2a232f","web3-errors":"1.0.1-dev.a2a232f.0+a2a232f","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.a2a232f.0_1687316938719_0.1768249599919718","host":"s3://npm-registry-packages"}},"1.0.1-dev.51a59f9.0":{"name":"web3-validator","version":"1.0.1-dev.51a59f9.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.51a59f9.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f96b6997a6de368f0ccaa93da9488cb845be2826","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.51a59f9.0.tgz","fileCount":184,"integrity":"sha512-R/yYkIpMDG+o+o6uZPzb1WEgr34t03YVrcwdH/+1iZ/DJZ8bZSS+507YLEEUd1clS2yxupDB1U5t9FEjOY9fKw==","signatures":[{"sig":"MEQCIG0C26B/i83fw8AzfSKQv+656CZdfQHPHInd7WG1DKrYAiBjrosN6Dmxbn5/jYRY42//eUIp79L0xjzobDPesJKc9A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"51a59f952f1d535be864b0c85966ecc571b451b3","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.51a59f9.0+51a59f9","web3-errors":"1.0.1-dev.51a59f9.0+51a59f9","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.51a59f9.0_1687363411295_0.3276422726753163","host":"s3://npm-registry-packages"}},"1.0.1-dev.3f49e18.0":{"name":"web3-validator","version":"1.0.1-dev.3f49e18.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.3f49e18.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7d1181d5ade5ed688f0429162f45a4328112ac5f","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.3f49e18.0.tgz","fileCount":184,"integrity":"sha512-H2SUqc+Yib2a230HvJTASfiXv1QlwklPBot/KoKVFUNh3bIrQugOaxf+W2xwB23kQD89CV38qzAwTONxP8x7mw==","signatures":[{"sig":"MEUCIQDfIVOY5WkBCgA3xcN13ZnZoR2BGg9MnhCq//pE3J581gIgb7cpR4Nq2/mhezYEIOKe32Kb8cXKR4Q413AwM6tN8xk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"3f49e18d24af3dffe2ed47bf65dcf97c0204fc87","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.3f49e18.0+3f49e18","web3-errors":"1.0.1-dev.3f49e18.0+3f49e18","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.3f49e18.0_1687568944685_0.0226809814117106","host":"s3://npm-registry-packages"}},"1.0.1-dev.e8d579c.0":{"name":"web3-validator","version":"1.0.1-dev.e8d579c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.e8d579c.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f58150dc9f480c1343e03543b11d890f9b25910c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.e8d579c.0.tgz","fileCount":184,"integrity":"sha512-UKoqNu78ftFpVsQVT5N46+jZmpG0jrm2MjuS1MSc9PDKsCnMktr+f+uXWfsMOj8tgKvX8XAjGSly2/dqQx7ldg==","signatures":[{"sig":"MEYCIQDRnWmEZcBoPU4Ycy03RkW90lQVxvGASMSBw1nPFrk5agIhAO5jHt/CPT22iwaDNPpmb8nopqUwNP1NdFRv0I9eBUbX","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e8d579ce6b82a3ae4184d925d1b9cfd87629717d","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.e8d579c.0+e8d579c","web3-errors":"1.0.1-dev.e8d579c.0+e8d579c","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.e8d579c.0_1687569073447_0.791652476965859","host":"s3://npm-registry-packages"}},"1.0.1-dev.60b8ba9.0":{"name":"web3-validator","version":"1.0.1-dev.60b8ba9.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1-dev.60b8ba9.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"cd64eaf8567defa6562443dfae9ca3f3cb628688","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1-dev.60b8ba9.0.tgz","fileCount":184,"integrity":"sha512-olMDY4TZa+P6IMVBTaWR7rHzBYdO6tVEs8AoqndCYFi8HeWRasxNVr6Ci/ef8KKxqZSxX6vBNtFcYDrKjJ3swg==","signatures":[{"sig":"MEUCIF5DBQwm3S0hWxxBTeOAbO0MpS2SAOWvg+YPkORXX+7QAiEAq89aEOAI+wvQHuXgulPtyILGMVmoihWwgn4Q5N+zqo4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"60b8ba922f1ffbb9726c4eee35b5b50150ccb155","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.1-dev.60b8ba9.0+60b8ba9","web3-errors":"1.0.1-dev.60b8ba9.0+60b8ba9","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1-dev.60b8ba9.0_1687831536031_0.2955575972440727","host":"s3://npm-registry-packages"}},"1.0.1":{"name":"web3-validator","version":"1.0.1","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.1","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5e95a7515fc2cc6b0409050499ab32acb512cd4a","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.1.tgz","fileCount":184,"integrity":"sha512-hsT8hFhYia5tlTIf08TDjBYjJ2sgUoh9WehpNrYB8UIaFA0QB7mv06fASXU3ukjiKF9V8MeDZnJPit6JRmQj6A==","signatures":[{"sig":"MEQCIAqcBpFl+DH8LH6xOxh5decqmu+GPDt5qNfLqRtdUpljAiB99tCZ+1ftxsVqmD9Dkn0TfEvcAk1R2V7qZ66USyixgA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891370},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"47583e7c1500ab087f922370293aa25dbce0d5af","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.16.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.16.0","dependencies":{"util":"^0.12.5","web3-types":"^1.0.1","web3-errors":"^1.0.1","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.1_1687867234042_0.1127529672267853","host":"s3://npm-registry-packages"}},"1.0.2-dev.a26a888.0":{"name":"web3-validator","version":"1.0.2-dev.a26a888.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.2-dev.a26a888.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e2ca5eb2dd8d55d67cacc9e16802c81f28266716","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.2-dev.a26a888.0.tgz","fileCount":184,"integrity":"sha512-b8tjAg3oYQo0MMIjD1bH/xREWaYUiF1vU7fQRslFRwtQAz2u6b5J/OrOIWQlpgmS8VifgcN4SlOSfQtK+Fu2dQ==","signatures":[{"sig":"MEUCIFY7TerY/QGckCjYYjBsRLrDdcavMdR3A9+XNGaaxc8sAiEAg1ckeW/+5t+Sw96NdHBx/zINl9OIfBpYQ8shNL+K7Tk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891434},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a26a888bf3adad4f012980a95f45a49e5096443f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.2-dev.a26a888.0+a26a888","web3-errors":"1.0.2-dev.a26a888.0+a26a888","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.2-dev.a26a888.0_1687868253172_0.7549090937706482","host":"s3://npm-registry-packages"}},"1.0.2-dev.d12dc7e.0":{"name":"web3-validator","version":"1.0.2-dev.d12dc7e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.2-dev.d12dc7e.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"6b9a086d16c8055186a743601abcd751f1a12b47","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.2-dev.d12dc7e.0.tgz","fileCount":184,"integrity":"sha512-5OQ+XoZjpLoKrRsBnB33MHevhK9v/xyKPeDtOBEZgbZn9drAbfq3LiHfGpZcoir8zecqDbUH+PTjkjUVQliudg==","signatures":[{"sig":"MEUCICyMRjZzbp34FeGqQdHUlvjImqz8VBtUbS7XRM1a5XXmAiEAwtT3AEIk5AW0cekyX28GkjghFlwfmJBlpYXaxGdBGYY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891546},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"d12dc7e3c7d5ed56c38a5a300e769a9c205f3ddc","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.0","dependencies":{"util":"^0.12.5","web3-types":"1.0.2-dev.d12dc7e.0+d12dc7e","web3-errors":"1.0.2-dev.d12dc7e.0+d12dc7e","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.2-dev.d12dc7e.0_1687893400599_0.4158497760408857","host":"s3://npm-registry-packages"}},"1.0.2-dev.602dada.0":{"name":"web3-validator","version":"1.0.2-dev.602dada.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.2-dev.602dada.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b4295f71d5e0aca54eae86313bbc19c41bdfcd06","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.2-dev.602dada.0.tgz","fileCount":184,"integrity":"sha512-6/56ExiJ5D4bK+xk0pcO4Jg5KFVahelSCitQTwUw4XoMBWUNrgbKURy+9Orxx02RFocapoT8/7VMQ0w9tox4WQ==","signatures":[{"sig":"MEQCIFhYrO90GqtxzeV56nW+/FozVV9POvr2Mx+KpOjncLVKAiBpQveE22mh4diurGiXgBhBrrMG+DA95PwNIdMFuVBOwg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891546},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"602dadaca529afa8f4a04f789b64a4ec5b12a695","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"util":"^0.12.5","web3-types":"1.0.2-dev.602dada.0+602dada","web3-errors":"1.0.2-dev.602dada.0+602dada","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.2-dev.602dada.0_1688380975103_0.029319430372681365","host":"s3://npm-registry-packages"}},"1.0.2":{"name":"web3-validator","version":"1.0.2","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.2","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"ca7d247b49f4f690db86e5b953272a627dc5950a","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.2.tgz","fileCount":184,"integrity":"sha512-orx1CQAEnwJUnl/8iF2II2zSA4wiooNJvFmVE0Dbmt/kE370SugIDViQP76snhxtouG2AXzz4GyKbPCMlLGh/A==","signatures":[{"sig":"MEUCIHCESwcubBhWy30oAoGAzvzbf1PDfRmMKdaYAzqd022UAiEA5P/KNWMyhYZCfO+Vj49LDNlZdtc9xrJYbQRljzqEBZw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891482},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"bce9a8b87a24ac3ced0c3e79da04aa30b9fe0086","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.16.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.16.0","dependencies":{"util":"^0.12.5","web3-types":"^1.0.2","web3-errors":"^1.0.2","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.2_1689086670384_0.7068263829792243","host":"s3://npm-registry-packages"}},"1.0.3-dev.ebd0c57.0":{"name":"web3-validator","version":"1.0.3-dev.ebd0c57.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.ebd0c57.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0c30d03a524802e6f03d8e9f856b5f4e029b7a02","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.ebd0c57.0.tgz","fileCount":184,"integrity":"sha512-vr5JuCWJBtW32IqOwYR9CGAF7SdvHsPfaRCW6egXD5+brnAcmaaueQfXc4A6Abm0bm9bSYkliB6X9+JUBKK9jA==","signatures":[{"sig":"MEUCIAutzaKPjhxRo0K9bVO/GbPh8BoHKa1RkI3kpyEx15LEAiEAhwmDs9WAb4TIPmzrUzWyXZ+NxkVgcv+Rq2hhySYHSJw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":891546},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ebd0c578d34795d7d5a2e3d1cedd3ae1c3031c68","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"util":"^0.12.5","web3-types":"1.0.3-dev.ebd0c57.0+ebd0c57","web3-errors":"1.0.3-dev.ebd0c57.0+ebd0c57","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.ebd0c57.0_1689087577322_0.4511353578269566","host":"s3://npm-registry-packages"}},"1.0.3-dev.51bc03d.0":{"name":"web3-validator","version":"1.0.3-dev.51bc03d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.51bc03d.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"1002749ba033558926bc10c17d75da35a62781fa","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.51bc03d.0.tgz","fileCount":184,"integrity":"sha512-7tZaOtnNUEcmA4sgZzbaB4JcbgDP1z5+yTHfhceQsD49Ajjx1zNxiKsXXhWT/r9P7ciB4xV537/lnpFNK3JM2w==","signatures":[{"sig":"MEUCIHk8qgvRMkqetEyCVbXUxVDGfsd+VCQ9/u+DjL774Hh4AiEAgaKRx/utrw29rDK4RG/zdXgso0K97ehizrYde5eW87s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":911885},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"51bc03dd15dbb9619e77b81c474ab251f9afcfec","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"util":"^0.12.5","web3-types":"1.0.3-dev.51bc03d.0+51bc03d","web3-errors":"1.0.3-dev.51bc03d.0+51bc03d","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.51bc03d.0_1689188234715_0.1530953179962693","host":"s3://npm-registry-packages"}},"1.0.3-dev.e143157.0":{"name":"web3-validator","version":"1.0.3-dev.e143157.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.e143157.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5759502babdc3c8b4692062aece8e3542d8f9daa","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.e143157.0.tgz","fileCount":184,"integrity":"sha512-g+A9QY9ywsj4OjcSHVWowrfOLgG60Qynuy/kwETcVpsKpnXS6G5ezqy9KZiQj6j1mN2/2uPxKomQ2lCwI9fz6A==","signatures":[{"sig":"MEYCIQCTManVYd1PA0OBlKD0r5xbF1rkYCm7JqoVGIBAWLOloAIhAJgvH3DI+L0wdpfB3jPumAtba5a1wtOEa3CjbrGMr9PS","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":911885},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e14315748429e266715e185800808c51c81ab9e3","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"util":"^0.12.5","web3-types":"1.0.3-dev.e143157.0+e143157","web3-errors":"1.0.3-dev.e143157.0+e143157","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.e143157.0_1689347323282_0.5943650045402369","host":"s3://npm-registry-packages"}},"1.0.3-dev.8958413.0":{"name":"web3-validator","version":"1.0.3-dev.8958413.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.8958413.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f3ab740143fecfcd38df641fe88c7dc2b0509d09","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.8958413.0.tgz","fileCount":184,"integrity":"sha512-1h83iCAVrPpxIC/klR7lDR2WKajgI+q5ztlsGawauJVRIOT9uztvllfU2jQfWfd8I73ZPKjPUq5l1SocKFIsQQ==","signatures":[{"sig":"MEUCIC1zYaVvFDKZnN0dKSXVsWcwp3YPdx8OyArT2O2pLwk1AiEAvGN2r3R3MGDLEOelhG4PlwgW1IPJWKCu3IbdvQCBjPk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":911885},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"895841323e561518b6b90b4bddcfa536d56df1a3","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"util":"^0.12.5","web3-types":"1.0.3-dev.8958413.0+8958413","web3-errors":"1.0.3-dev.8958413.0+8958413","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.8958413.0_1689350126310_0.5370980816847233","host":"s3://npm-registry-packages"}},"1.0.3-dev.ad377d1.0":{"name":"web3-validator","version":"1.0.3-dev.ad377d1.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.ad377d1.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"aba1bd57f70004c4cabb30e5dbe8699114f35dab","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.ad377d1.0.tgz","fileCount":184,"integrity":"sha512-dM8y6XUHLohkwHYDOkg9YY9MVDbnAefNORymJYnoP9dEFopwWBo3W1Ycw0r3VZXPHflnt+2GpEpK0C3SET6bCQ==","signatures":[{"sig":"MEQCIEHXi2JkQgb0IlAhT8j55hqA2lFCvu2CeDqLXvRiJecaAiAW8+fkOrkznJqD4mRZOkXdpQDQWfdhzQAOuVkkTvQa9Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":911885},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ad377d16a7e9a8e82857d6102bb4efd95c543e4f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"util":"^0.12.5","web3-types":"1.0.3-dev.ad377d1.0+ad377d1","web3-errors":"1.0.3-dev.ad377d1.0+ad377d1","is-my-json-valid":"^2.20.6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.ad377d1.0_1689350507923_0.012800209784095351","host":"s3://npm-registry-packages"}},"1.0.3-dev.b93934a.0":{"name":"web3-validator","version":"1.0.3-dev.b93934a.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.b93934a.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b876ec76110dfc2b0a062b504adc8ed53c754109","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.b93934a.0.tgz","fileCount":184,"integrity":"sha512-hvJanPJt3+XlQAOWa351JYRqP5+nxFFfoxT1gGaRyLrg9uI+hM9/cX1T/fuI8A9HXj8HJwFzt2eWogpeZn+sSA==","signatures":[{"sig":"MEUCIQD55vhXviD80RpMS17PwnhDw2oni/F81+sneojhwciGKgIgUDioBqbTWIfgKe45qlUVb2RiNXDM5UaXW2XLzu2oN3c=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":922621},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b93934a62277a85a616b55d45356ec5f0c5f71ea","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.b93934a.0+b93934a","web3-errors":"1.0.3-dev.b93934a.0+b93934a","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.b93934a.0_1689633339672_0.9987467699882919","host":"s3://npm-registry-packages"}},"1.0.3-dev.1361787.0":{"name":"web3-validator","version":"1.0.3-dev.1361787.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.1361787.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"2481d5569a79510d789270b00590db3af8ec6762","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.1361787.0.tgz","fileCount":184,"integrity":"sha512-/v6XoYD5owdSnLNuoUhrXz1n14ZDqffxetW/dIsL2V2Mf01A9h8M4yfhMD117X1nLYcLiRbYnkcGPgrgjMI/YA==","signatures":[{"sig":"MEUCIQCUhp5vnJ79b6/KW2xAGvOjyOvXrsLKaY1s2XyVCkiwXQIgUYl470gCEQNr02UoVeKgWTglFdvnTznNAqhfdaV4N5s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":922621},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"1361787fe87a0d4b8458e34760ef7e699989afde","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.1361787.0+1361787","web3-errors":"1.0.3-dev.1361787.0+1361787","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.1361787.0_1689673793357_0.14349529267229655","host":"s3://npm-registry-packages"}},"1.0.3-dev.7d0a91d.0":{"name":"web3-validator","version":"1.0.3-dev.7d0a91d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.7d0a91d.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"6b0e3794046706bbb07bb8ce05cce52907bc05ea","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.7d0a91d.0.tgz","fileCount":184,"integrity":"sha512-8C06JJUXwA1/pcG17dHdJp+nIXnSBQwlXXEyTYEVovkr08qfG2goZOC9ZXLH9AbbyMnYAIn1wIFK/exiAtccxQ==","signatures":[{"sig":"MEUCIQCZEpkAbzzDqByYfdr69hpH6KGpI//ttyLm5VS3t2EYDAIgXpSXaC9bKqz3dxWZGwwBAXlG2VbFWlv+eKO0k2ayWMs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":922621},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7d0a91d7011d5fd08f4d72193bd799fec2e30f2f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.7d0a91d.0+7d0a91d","web3-errors":"1.0.3-dev.7d0a91d.0+7d0a91d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.7d0a91d.0_1689731072723_0.09918314708238185","host":"s3://npm-registry-packages"}},"1.0.3-dev.933ef51.0":{"name":"web3-validator","version":"1.0.3-dev.933ef51.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.933ef51.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a18d97d6547b3381d4fe3308bb3f9ac5d926584e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.933ef51.0.tgz","fileCount":184,"integrity":"sha512-UNBVOT91ejEV01g78tgblFfcctUlkcYTqAF1vxxpWSWVz+aObtEW45MMQ6TktunZSlvMy1/sTwxLegE774NarQ==","signatures":[{"sig":"MEUCIQCSWm9vr5qKFcmeyJH25F4740cjOmQ48H1YutX9wV6q3AIgYY0bNvlkfBx+nyMN4IUui8bN8WnL7ynYZhneyALwYtQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":922621},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"933ef512d5c10cf092b21ab82da38c29cde575f8","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.933ef51.0+933ef51","web3-errors":"1.0.3-dev.933ef51.0+933ef51","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.933ef51.0_1689813270169_0.826484094150495","host":"s3://npm-registry-packages"}},"1.0.3-dev.f5b4d7d.0":{"name":"web3-validator","version":"1.0.3-dev.f5b4d7d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.f5b4d7d.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e0a05ac27a2b46f2504c3a146ff3db430b7fe7ac","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.f5b4d7d.0.tgz","fileCount":184,"integrity":"sha512-yDyiJiVcqbQGhzYg2N/i09SOFY8KrusGtrwM9X4+ia2U/Rq0/M/bdPhznv3bAcX5e92tOuQY16oJUf4jfBrxPQ==","signatures":[{"sig":"MEUCIQCZnl1UrjYR54GAVlxHWxFE3Il4vHq+yA7P/k6eQS4EggIgHcSd1EABq1Y74L7Vq1HTNCqTOVvAQTEYHXJ17F04r2I=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":922621},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f5b4d7d0f14e721380e4c9249a063a3dc982a540","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.f5b4d7d.0+f5b4d7d","web3-errors":"1.0.3-dev.f5b4d7d.0+f5b4d7d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.f5b4d7d.0_1689864303289_0.12780315440007373","host":"s3://npm-registry-packages"}},"1.0.3-dev.6da17e1.0":{"name":"web3-validator","version":"1.0.3-dev.6da17e1.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.6da17e1.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b54c7050d344bbeed092ef5f576efd2a87be3ab1","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.6da17e1.0.tgz","fileCount":184,"integrity":"sha512-c+rXNAQ07pM4sPCOh+lhj+8ngIL//CAZ0P1CZ5S4IrTGdXf72HWQIJjtsjYmiOpdElJKFiIBQEUljs8mPdCCDg==","signatures":[{"sig":"MEUCIQD+DNY5r0a5VZX9okcz1AsYfWimE9rMcOGi94m4VLTS1QIgf73NdvPDO/Y5b6+tz9OLpDNrqaEzMaLX+E4G1XMcPJs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":922621},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"6da17e177a1e606191545558e180a0c5fb4d18f5","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.6da17e1.0+6da17e1","web3-errors":"1.0.3-dev.6da17e1.0+6da17e1","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.6da17e1.0_1690187433102_0.019502411784913853","host":"s3://npm-registry-packages"}},"1.0.3-dev.ed2770c.0":{"name":"web3-validator","version":"1.0.3-dev.ed2770c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.ed2770c.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"629acd21f7c9cd2f9225a88b23cd557e489002ea","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.ed2770c.0.tgz","fileCount":184,"integrity":"sha512-ux7c9OZcWXLhSTA1/Go+l/37kgLgDEy3sdhcSq+ztHT8chpt8Mzw04jUmqcjTgq2B2haJ9D4Z71mGHo4x7+g8g==","signatures":[{"sig":"MEUCIFGqEz7LVcoFOTHJ084hV4VoKNzmKuqfHzDsGX0EBjrRAiEArbCw4n9/5ACbid7s2VugMwVOaFAPaBfQ252Zrm6NDDk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925274},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ed2770c8e9dade23b3577612201269a0b004aac0","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.ed2770c.0+ed2770c","web3-errors":"1.0.3-dev.ed2770c.0+ed2770c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.ed2770c.0_1690219441202_0.8053413226356563","host":"s3://npm-registry-packages"}},"1.0.3-dev.0ee9bb4.0":{"name":"web3-validator","version":"1.0.3-dev.0ee9bb4.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.0ee9bb4.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e89ddce59d837978fa9f28e2128cda6cdbea78d8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.0ee9bb4.0.tgz","fileCount":184,"integrity":"sha512-lyKsHp1lJOI/jWUghRp62nzsYOhzOX/ijxRKt9zHxKB1tkfH5IO09f8gdVV+vsV7XuHRC1S70/rn30v2yFHLJQ==","signatures":[{"sig":"MEUCIQDwqB4qzCaf9HjIlBnsoFvKwSa9IJtCj6qtdPQeWUEPvAIgX1XuJktS6PnTz6Vp8NSDja0E3ta8Tx3O4yDOt/ma3ME=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925274},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"0ee9bb46dc5f401abeaf19c43c5e952d26981e21","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.0ee9bb4.0+0ee9bb4","web3-errors":"1.0.3-dev.0ee9bb4.0+0ee9bb4","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.0ee9bb4.0_1690298938596_0.4716568522972566","host":"s3://npm-registry-packages"}},"1.0.3-dev.4310419.0":{"name":"web3-validator","version":"1.0.3-dev.4310419.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.4310419.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"eaaa89b2306b093fab58e3fff4ef08fcbe7366b2","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.4310419.0.tgz","fileCount":184,"integrity":"sha512-1KayUkNOHGfsLpQkVQddFBUAshe/6qPacEEWC4zMSEYRfzgQ4la+UZdHvYpcvY+tb5h52M18LfX8Iudr7BVG5g==","signatures":[{"sig":"MEQCIGDQ8v1CcgSI6OiDTpdnESonGO4L0ksY1z+Rhc5ZCLLYAiB/YzbPB5nCn3bEV4nMsHK3tPAUwWkuQHufVi0pSIw8Cg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925274},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"431041995fe0f5900000d03fa8c97cc79d956b47","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.4310419.0+4310419","web3-errors":"1.0.3-dev.4310419.0+4310419","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.4310419.0_1690878305370_0.44710854161321856","host":"s3://npm-registry-packages"}},"1.0.3-dev.b771112.0":{"name":"web3-validator","version":"1.0.3-dev.b771112.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.b771112.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"3d8eeee7db5d45448a4d331aa4e47c6d3425c332","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.b771112.0.tgz","fileCount":184,"integrity":"sha512-16Dd9HE6+5hm4fS9ziyMkZyFLg2jgFdoKzURXWg1uIsy6nvGGJCSyBK/YF3amyDFM/TgsiMnpSWJxXhOI2yzIg==","signatures":[{"sig":"MEUCIQD6ZxY7fwfOSVbeIlV/tIo0XxxJuk0sOcL/8CxhmC082AIge11ivZNBL2C/5xWbutgK0Vp00wJJ8t6bMS8OjZcoNaQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925274},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b77111264dbdacf34d0c9ebe803efddf372ce3f1","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.b771112.0+b771112","web3-errors":"1.0.3-dev.b771112.0+b771112","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.b771112.0_1690884401904_0.2386742432060862","host":"s3://npm-registry-packages"}},"1.0.3-dev.0e5c53c.0":{"name":"web3-validator","version":"1.0.3-dev.0e5c53c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.0e5c53c.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"ed09d58d5229075b8484865ccc3128be4dcecf8e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.0e5c53c.0.tgz","fileCount":184,"integrity":"sha512-SS6IpbGv5MHV/HCptstV49VPaKZEMShKGb73K58Zj2dUQYViCZCzUkWtjMSp3Ti9A3KBobtXWLuLPORCdErANQ==","signatures":[{"sig":"MEUCIDP+Y7Gku/zF5QB8+RN8WT1hfnX88DyQLCkVsZkpOmf/AiEAt3cbd1UKStTKy5bXTfA2DkVeqg1SlJL15sH4cU292kY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925274},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"0e5c53c77156eb2797f08aa78196b7ff4d95ee56","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.0e5c53c.0+0e5c53c","web3-errors":"1.0.3-dev.0e5c53c.0+0e5c53c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.0e5c53c.0_1690973400667_0.906459407459627","host":"s3://npm-registry-packages"}},"1.0.3-dev.51d087e.0":{"name":"web3-validator","version":"1.0.3-dev.51d087e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@1.0.3-dev.51d087e.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b37571d424170e4463066354c6f3b8de3ae16215","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-1.0.3-dev.51d087e.0.tgz","fileCount":184,"integrity":"sha512-L2fMJVC30v5L/y+CvkFDIG9iUkDOIXZKK6TnsX71cUs1aVxg22KB4iAlqJ13e44ghtq0wReyknjp9E4ManDR/Q==","signatures":[{"sig":"MEYCIQDQpjlw5rXGbEU2LZhcWP8A5y4el0dZXgzPbnkLP7fHGgIhALNAzK79Z1Iy1H84Kkahl2XpUfFPU8Sb8TJ0ZYzdtnsL","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925274},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"51d087e79ffb6c15345836376514a02bbb2af717","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.0.3-dev.51d087e.0+51d087e","web3-errors":"1.0.3-dev.51d087e.0+51d087e","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_1.0.3-dev.51d087e.0_1691075354687_0.22198243070587043","host":"s3://npm-registry-packages"}},"2.0.0-rc.0":{"name":"web3-validator","version":"2.0.0-rc.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.0-rc.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b04d11640a1e9b0cc0b564b08e9c59b077f5843e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.0-rc.0.tgz","fileCount":184,"integrity":"sha512-VoIwIez7iRsuuFGS9y6iLZqXciC8fc0J0JKSPRbI02LDNbqunxF5vsHBRIBtfvbCRcKaARGYM+bGvmAvR88ddQ==","signatures":[{"sig":"MEQCIELbuRjoKdUWFQW3eMXmVEvWok3IuziJE+gmuvmACanYAiBTFZY09cwSxxvXbGAd5pa9DN4FUukmBZ72JQSNjpSshA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925225},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"2eacd4ba3f1b67967824c0f9c11b87fc155564a9","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.16.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.16.0","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"^1.1.0-rc.0","web3-errors":"^1.1.0-rc.0","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.0-rc.0_1691594054263_0.6888295335508121","host":"s3://npm-registry-packages"}},"2.0.0":{"name":"web3-validator","version":"2.0.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"ac5bcc176c0e7833d7ac9eb418f1887b6f3432e0","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.0.tgz","fileCount":184,"integrity":"sha512-JGOuJFX4mjBMaR7e0VI1xrBXDHz1Z6+824eJiJZFaGOt1kjMsrbYX/z4cHJ8rgv+DdZqIFjOlxsAVJV5T8ODXQ==","signatures":[{"sig":"MEYCIQDkmJyHLZGTgPASXLKdMRGX5igFA5FBzDJTO4L0R7hzvgIhAJXd5V+OqK9I6ZYptC0K5Tuox3MUm6HSdM3+ASj9j8vM","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925210},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"af3bad15061c7615f7e2ce75509acf624c9d567b","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.16.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.16.0","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"^1.1.0","web3-errors":"^1.1.0","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.0_1692087144980_0.8302397505838199","host":"s3://npm-registry-packages"}},"2.0.1-dev.c41d356.0":{"name":"web3-validator","version":"2.0.1-dev.c41d356.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1-dev.c41d356.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"38f13820a542f30741420c6ab66edf7bc8383186","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1-dev.c41d356.0.tgz","fileCount":184,"integrity":"sha512-NbXBeMqGzqKFuklTiNoIrdU5zNx1x8xKP94xvk5rYo+p3Yd03tK+XBIdD4YQGTU7W0PODleEAWg/q7YbWv0NJw==","signatures":[{"sig":"MEUCIQCxQ22cSI71HwK2WbRXcwkLF+8oJKQHkUlv7pgDbZZqwQIgXIK+aGXeAyasRVzcInVJajbf/WVa7IdQIlhUPMBnZg8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925274},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"c41d35621baba8082d15455f1dc21fcfc0ead0dc","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.1-dev.c41d356.0+c41d356","web3-errors":"1.1.1-dev.c41d356.0+c41d356","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1-dev.c41d356.0_1692088303292_0.27168299731117984","host":"s3://npm-registry-packages"}},"2.0.1-dev.f4fd498.0":{"name":"web3-validator","version":"2.0.1-dev.f4fd498.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1-dev.f4fd498.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"07055381c1b7f0ead17e2c644b8d0fb1b9eba239","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1-dev.f4fd498.0.tgz","fileCount":184,"integrity":"sha512-K+D1LsZYBLBgVnQmH3IvwKFh59vwHnl34wtS86qTkFIBBB5NwNVUTHAuhrKE6z+luHmoHFSDD7cH1V/PCkeVwQ==","signatures":[{"sig":"MEYCIQDki5Rs5cMPwN2PKHgIBiYUt6uqafkwaBtEeRUW/Jx69gIhAKMqoDj7q30txJ/NAukKAl0DRxO+pvHmrANG8geVvIZn","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925274},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f4fd4980ea6ecf70e9918153ade12a15444fc2ae","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.1-dev.f4fd498.0+f4fd498","web3-errors":"1.1.1-dev.f4fd498.0+f4fd498","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1-dev.f4fd498.0_1692088378230_0.3464910222217008","host":"s3://npm-registry-packages"}},"2.0.1-dev.a4cae6f.0":{"name":"web3-validator","version":"2.0.1-dev.a4cae6f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1-dev.a4cae6f.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5d4f9df5c3bdd18dad067d2827e79a5b3c25b371","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1-dev.a4cae6f.0.tgz","fileCount":184,"integrity":"sha512-QoKzQLUQZw14CPmN2kLCvyZOVt0lZOYjW/6eHc0K+ZL1oxbhtntcDCN46BJEDMl0UdxGlW/1lRS2OeTd2nDTfQ==","signatures":[{"sig":"MEUCIFCAF7IwaDWEJaYIDSb18dmiippTA1kbwKFi/Ph3jMXTAiEAx3PHw7zvNdZQJGgPIMkFvWm2eHjwDPS/N7gxJ51PqdI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925274},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a4cae6fd49f57ea75995ca762f321158d4c04c25","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.1-dev.a4cae6f.0+a4cae6f","web3-errors":"1.1.1-dev.a4cae6f.0+a4cae6f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1-dev.a4cae6f.0_1692088548803_0.8299916728138226","host":"s3://npm-registry-packages"}},"2.0.1-dev.622174c.0":{"name":"web3-validator","version":"2.0.1-dev.622174c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1-dev.622174c.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0fc861dbbd2b6190ea7122ab3fec7951af953e68","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1-dev.622174c.0.tgz","fileCount":184,"integrity":"sha512-Iqzm3F67Se122IXE0zuD0O5H5z/pMFAJzAUND8WRPtlvmSGCxeWD+Xc2sJ+Kig8UbEzNUmtjtPW1OKlf+rlrOg==","signatures":[{"sig":"MEUCIQDKXzIqg4rW2SgvN1nfbxIb6PfGEQiU5PYCR3OkrlU37QIgB4IX/Qzfegxm97trGEXkD/kZ/M0zDTOwTa7XoVsyrIQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925772},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"622174c770a91612516c53aa4fabf174ec21defc","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.1-dev.622174c.0+622174c","web3-errors":"1.1.1-dev.622174c.0+622174c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1-dev.622174c.0_1692115099637_0.5709531868034861","host":"s3://npm-registry-packages"}},"2.0.1-dev.7a38fee.0":{"name":"web3-validator","version":"2.0.1-dev.7a38fee.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1-dev.7a38fee.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"8102021bf54418b7c981623ffabb7877faa1a162","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1-dev.7a38fee.0.tgz","fileCount":184,"integrity":"sha512-1HywsbYwwYm0JJLfIhs6o1LHKovl+Pv/hxUXOyvX5LLMo2CkDBX4zQ7bktGDLSAorgWHAZwZWrLiAyV1U5fWqA==","signatures":[{"sig":"MEYCIQC3M+cwizQt2uDavDAUO2Jzkr6EbEqATu07DaAqL/TMDgIhAO8gKQBoKRNLAwORsCxiFPYPm1kMBDeL3Rn+1LBPrEAz","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925772},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7a38fee406f926ca8dad9a46ed86cd35b742e9ca","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.1-dev.7a38fee.0+7a38fee","web3-errors":"1.1.1-dev.7a38fee.0+7a38fee","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1-dev.7a38fee.0_1692286106669_0.9362863657385283","host":"s3://npm-registry-packages"}},"2.0.1-dev.d41a49e.0":{"name":"web3-validator","version":"2.0.1-dev.d41a49e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1-dev.d41a49e.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c21ca61fa012ec26173bb8b3aafe46859e1c778b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1-dev.d41a49e.0.tgz","fileCount":184,"integrity":"sha512-fuwQ/58ncDePImw+7J2Df+o7CYByFAqUPvQgMdex+7YN1Z6AQM+Fm805+4Mrl5JbPZLNb5RITSw/MjHcvOIANw==","signatures":[{"sig":"MEUCIFqa907YnrBMahlvByscoiI8W/Lxjx3WTb9VG/vFpqFzAiEAsiJUOcYmvHnIWNbO6ZUD4Lm4sscEKCkuqqBWjP3N3mg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925772},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"d41a49eea2221cc5e42303bd5f6637ac78817687","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.1-dev.d41a49e.0+d41a49e","web3-errors":"1.1.1-dev.d41a49e.0+d41a49e","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1-dev.d41a49e.0_1692302740888_0.28777273420341487","host":"s3://npm-registry-packages"}},"2.0.1-dev.ec6e117.0":{"name":"web3-validator","version":"2.0.1-dev.ec6e117.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1-dev.ec6e117.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"075d81530add074dcf0874efe46b345c68d365d7","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1-dev.ec6e117.0.tgz","fileCount":184,"integrity":"sha512-sGWrm9+lKDXhgbK5tEO9x8kciSTuCs1BfHc5wTVwaG62DY3oAOUe6PskDyivc4VVnQ/hwPk6kF+J+d99dknhNA==","signatures":[{"sig":"MEQCIFhK5jtdj7ZnvdMPUcJLqUSun/Ck7wO9VdfL5Vr0ZvXRAiB1TsEwov3OCqFhWZrmviGuUWBsHCByICrOfhuIj3XkIQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925772},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ec6e1176fdd8367c897ecfa216940432c21d2f43","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.1-dev.ec6e117.0+ec6e117","web3-errors":"1.1.1-dev.ec6e117.0+ec6e117","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1-dev.ec6e117.0_1692302927261_0.6440091561724419","host":"s3://npm-registry-packages"}},"2.0.1-dev.86f0cdb.0":{"name":"web3-validator","version":"2.0.1-dev.86f0cdb.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1-dev.86f0cdb.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b4728ad49eefb449ab7d9a927d0808f0ffb38640","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1-dev.86f0cdb.0.tgz","fileCount":184,"integrity":"sha512-BX+/uoRVvvzIJccmcShPPwfUzQRKmWnYhnsg9s/mK+Si8BPWAaZhIEMFnvWbWGh/SGItiH7ksSfgAqWe1di56Q==","signatures":[{"sig":"MEUCIBUAAOiIJ3fKWTMLEciBHWU+lIYaHCzL5rrMhz8KLHUuAiEA+Up1mQSfUocuGIIpjphYXAp6QLdq4FlDutMnF4qDFUM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925983},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"86f0cdbad9b40c3a1e37a4ca3f425684bebfe491","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.1-dev.86f0cdb.0+86f0cdb","web3-errors":"1.1.1-dev.86f0cdb.0+86f0cdb","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1-dev.86f0cdb.0_1692357403692_0.0635876375086859","host":"s3://npm-registry-packages"}},"2.0.1-dev.1cdc86c.0":{"name":"web3-validator","version":"2.0.1-dev.1cdc86c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1-dev.1cdc86c.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"25fb8899a26de0a0d22321029b8d2e9289ffa6b9","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1-dev.1cdc86c.0.tgz","fileCount":184,"integrity":"sha512-VFgcurX3brKz5n91WHcMxl9dbzFNFIcOBUl91Xx198+Zbn9ObYnijjGjHalEzfEgt3O5/549X89EJW6anfVjKw==","signatures":[{"sig":"MEUCIHxzkFaJOBAwAgSa1uPzNPvfgsiDBy+P8YhCWK9VHJpMAiEA7ZgoIX6d75cdcEe/PUndDbEkKvXpt7sE/gMuGpWvOjo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925983},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"1cdc86cd1543615cc30279199ed890d8abd285b1","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.1+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.1-dev.1cdc86c.0+1cdc86c","web3-errors":"1.1.1-dev.1cdc86c.0+1cdc86c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1-dev.1cdc86c.0_1692401112799_0.10029868168548872","host":"s3://npm-registry-packages"}},"2.0.1":{"name":"web3-validator","version":"2.0.1","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.1","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"8da5b9f871c0aac7677f4a5eca46b4fee9b6d0ff","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.1.tgz","fileCount":184,"integrity":"sha512-RIdZCNhceBEOQpmzcEk6K3qqLHRfDIMkg2PJe7yllpuEc0fa0cmUZgGUl1FEnioc5Rx9GBEE8eTllaneIAiiQQ==","signatures":[{"sig":"MEUCIQCEpFvP2CM9UBwVtfv+mXyGeapjcZ6Q4FQL5D5mPseU/AIgXnOd7xeaYQCVt5oGDVclbbG4hGhEGAeGUu/IxVDTbnQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925919},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f2665c78629bc4b6a13bfb02923f8f48dd2d8a83","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.16.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.16.0","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"^1.1.1","web3-errors":"^1.1.1","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.1_1692635226136_0.3203512077991486","host":"s3://npm-registry-packages"}},"2.0.2-dev.9ad39bd.0":{"name":"web3-validator","version":"2.0.2-dev.9ad39bd.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.2-dev.9ad39bd.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"872e1b96faaef3e667f2e1bb59842bf67dfbe350","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.2-dev.9ad39bd.0.tgz","fileCount":184,"integrity":"sha512-nJ6VHMBSJA1jMvnRcLAyYah2Aa8l93vK/o9opBzxM8mkx7LKvzy0r4RH+CWBrTXbMhcmk99ftzdJaxuZCKx9LA==","signatures":[{"sig":"MEUCIGuTSfZRJi1BwDU69JVxb5LV1W8rJ5Sn4NDcazhQRx1KAiEAwK/cmpVq2Lv+OWDfPve08KifV9/ZcuzfBMbvWcqz0Xg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925983},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"9ad39bd23b3f44062cd76d3ab196957388bcb9df","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.2-dev.9ad39bd.0+9ad39bd","web3-errors":"1.1.2-dev.9ad39bd.0+9ad39bd","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.2-dev.9ad39bd.0_1692636168570_0.7590914336934893","host":"s3://npm-registry-packages"}},"2.0.2-dev.a325689.0":{"name":"web3-validator","version":"2.0.2-dev.a325689.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.2-dev.a325689.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c7d239661eea5bec66abbdabb46d65eb773f6507","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.2-dev.a325689.0.tgz","fileCount":184,"integrity":"sha512-EFC9d42RzbsfxrJqpTVBydTa3CaMP8RgyUzMtwGF36CaBg5NiknN2sS97cWERR34g7NBIE4X2mAAWOWkTacIVA==","signatures":[{"sig":"MEUCIEOnCHZ1j1bKsxGB7qMocKGkDYuzYXeXKBfxJwM29c46AiEAuOZKQDinwDg0gN5QvjyGdR6RSQEX6iYa29Nn/OHsb2s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":925983},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a325689a324c5bbfe050f5cc9af2ba41e44d1bfd","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.2-dev.a325689.0+a325689","web3-errors":"1.1.2-dev.a325689.0+a325689","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-web3-base":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.2-dev.a325689.0_1692637719501_0.6693337840875133","host":"s3://npm-registry-packages"}},"2.0.2-dev.3ab3b39.0":{"name":"web3-validator","version":"2.0.2-dev.3ab3b39.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.2-dev.3ab3b39.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b26081a1df602fbd46bdcbad6fce83188a4cd66c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.2-dev.3ab3b39.0.tgz","fileCount":184,"integrity":"sha512-NULXuFF+47bqE+McURTZdHLv29dNax/W1FGEk07IjlR+aCk4EUVt5tQagJiJwRqYFPqYOakQaD8ZDMxUYDP68g==","signatures":[{"sig":"MEUCIEegVDNgBoYImHED3afPfzsPafb5uZZEzNTyl0gmKwuIAiEAnq9u+vFXf0w4VWBIppbNZwrZ+6mLRJ8mUJa8xrBp71s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":928171},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"3ab3b3956e90e8aaacc9a96c7cd382f1d9452dc8","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.2-dev.3ab3b39.0+3ab3b39","web3-errors":"1.1.2-dev.3ab3b39.0+3ab3b39","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.1-dev.3ab3b39.0+3ab3b39","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.2-dev.3ab3b39.0_1694509047043_0.1724572380705447","host":"s3://npm-registry-packages"}},"2.0.2-dev.da3e2f5.0":{"name":"web3-validator","version":"2.0.2-dev.da3e2f5.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.2-dev.da3e2f5.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d8adeb617df5cdd8a2595a706b90ee51be0dbde6","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.2-dev.da3e2f5.0.tgz","fileCount":184,"integrity":"sha512-19j6LsNSJQGbktxRGk2XYQmIUYtVMyi36/2YI5sHSCulBNW+cCzWVy5/7d7TDlSNbBvgUHzfllLUWo2nhSBLow==","signatures":[{"sig":"MEUCIQDAtOUZ4+rtpKVVNz2pidlF3F27IFzVXo0/Vtq2MGc+QQIgFzod0RSR+6YSZeP99AS67yVYLBhKjDmxD3rjNfslVLY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":928149},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"da3e2f5d0fb4f042ae58e312b4515a07f9e30ca6","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.2-dev.da3e2f5.0+da3e2f5","web3-errors":"1.1.2-dev.da3e2f5.0+da3e2f5","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.2-dev.da3e2f5.0_1694521297161_0.9664278817044065","host":"s3://npm-registry-packages"}},"2.0.2-dev.054033f.0":{"name":"web3-validator","version":"2.0.2-dev.054033f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.2-dev.054033f.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"9fb2986379d4c724745414c8046f9960d4e07fe2","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.2-dev.054033f.0.tgz","fileCount":184,"integrity":"sha512-t4SrRBWndeUetzVyMNgpEpCXHZ0QHPb55viIpiQBhUqbJDp0GkLerIOakSQ+sFPQ7MbL5OmWVN46UlZ/144fEA==","signatures":[{"sig":"MEYCIQCcafJHyrXDBC26A/wDBapBcJKUL6C2rut2DaJ/pSdWYAIhAJY4MeU7TEUQ4aOH4dcWyJggObQRfPebnr9ep0bgDXVU","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":928149},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"054033f0c80282a10672dd7006a414a36d9a7e96","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.2-dev.054033f.0+054033f","web3-errors":"1.1.2-dev.054033f.0+054033f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.2-dev.054033f.0_1694788192878_0.9322267945717673","host":"s3://npm-registry-packages"}},"2.0.2-dev.e4ba45c.0":{"name":"web3-validator","version":"2.0.2-dev.e4ba45c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.2-dev.e4ba45c.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"21fa3f111e9947d1205deec8f35a704fa3c258c4","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.2-dev.e4ba45c.0.tgz","fileCount":184,"integrity":"sha512-REZPSvAz+SFaUcfFMx9WXR1+5JOQk/J+/r1IiTVfM1YKLSJ8d/oga/DvGq4umDcj9dJht4eYLydRm2IA/kpJaQ==","signatures":[{"sig":"MEUCICRulH9rMDONY/MGaP57CoAv6rqJXo/VdQq0AYsKhrhJAiEAiwDJlfbY2H2bxuPe/3IhPN+YbrMuqZVL3P3FGm58jiE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":928149},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e4ba45cb97ab19953cb7e12fd011b35bc530e266","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.2-dev.e4ba45c.0+e4ba45c","web3-errors":"1.1.2-dev.e4ba45c.0+e4ba45c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.2-dev.e4ba45c.0_1694790079282_0.6525089582082992","host":"s3://npm-registry-packages"}},"2.0.2-dev.8010a6d.0":{"name":"web3-validator","version":"2.0.2-dev.8010a6d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.2-dev.8010a6d.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"48950b0b93f16bd6730ab45a001ef347565c309f","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.2-dev.8010a6d.0.tgz","fileCount":184,"integrity":"sha512-4Zn6OR62C/OaYXXO7JPA8SXiCALSOdYKWmKB1FYdKYBiIT2rNVdBJkJe67+2itEwFRtll30jEBcLnVworzj4Fw==","signatures":[{"sig":"MEUCIE7ThhemphEn9+jBaTu5AMPm8r4Du2CJIMjQgCN53+PkAiEAq/wbBZ3HflKlMpRAk94c9LkndxVA9ZOFPP62djYqO0Y=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":928149},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"8010a6dab360b5311f93645ecfc686970c28d35e","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.1.2-dev.8010a6d.0+8010a6d","web3-errors":"1.1.2-dev.8010a6d.0+8010a6d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.2-dev.8010a6d.0_1695052937202_0.4652886753492269","host":"s3://npm-registry-packages"}},"2.0.2":{"name":"web3-validator","version":"2.0.2","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.2","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c0d411371c5ab75806c8ad958276171678b8ddb9","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.2.tgz","fileCount":184,"integrity":"sha512-9sQ5owd2UldTsva3o3htj2fTPpbmUwb4TfBXhjIkew8FyT0ss3DPI+j3p6XrfdxIVBEQ5r17YUakElDV99aW+A==","signatures":[{"sig":"MEUCIQCUGDJ7Im4/iWDu3fsbpVnIT6KaItVyZQNEz7x5iDtHSgIgEJB6KpTf6JGyLHOyPw7lyE6lhYKRs52Ibq0XDn+VNic=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":928085},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"2543fd184bc354f3fdb61bb021c41311f03b683f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.16.0+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.16.0","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"^1.2.0","web3-errors":"^1.1.2","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.2_1695132013396_0.5192344989973137","host":"s3://npm-registry-packages"}},"2.0.3-dev.54c5ed0.0":{"name":"web3-validator","version":"2.0.3-dev.54c5ed0.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.54c5ed0.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"36ad63ce22e3afa8139ee4ba2ce035667b846336","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.54c5ed0.0.tgz","fileCount":184,"integrity":"sha512-Zr6fxjoATGAjjAH2BmIqgO/7JkZSq3tLwNFUfSRwmR8RcTGdnToWVBxSvoxqOqSAT6rdfxeY/bu/EC/3GUkQwg==","signatures":[{"sig":"MEUCIDlLIQEJNwLy6wzLmtBXhIAXCvgIUhB44e6x1w28pkFDAiEA4C2aOdss1twwlj3Mo62tFSZFdgitCZmEwgRSNftvJe0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":928149},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"54c5ed05cfa050c87e1389b3fc6b7e805696d522","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.54c5ed0.0+54c5ed0","web3-errors":"1.1.3-dev.54c5ed0.0+54c5ed0","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.54c5ed0.0_1695132924485_0.6133033142415738","host":"s3://npm-registry-packages"}},"2.0.3-dev.2b445bf.0":{"name":"web3-validator","version":"2.0.3-dev.2b445bf.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.2b445bf.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"224ffae593712ef68bb757c176f5922d41b24c9d","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.2b445bf.0.tgz","fileCount":184,"integrity":"sha512-1+8XbHpbz8LuQQz7M5yR5sQJfIOEA3aHlN0bjEjOyJQ0Xn1XixwaCtdQCNctHUqrt4qt1pWJu6Nx0NyWws9aaA==","signatures":[{"sig":"MEUCIQDoCiFtpZgDlBSlCB4EPnIdjOZdL5CqFIlSvw1eEemWUgIgbwd56MPJijXuR14XsOcCojXb7gBr7IxOUMew6TRQMOc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":928149},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"2b445bf2c02e66adff4e428907dd39347f6085c9","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.2b445bf.0+2b445bf","web3-errors":"1.1.3-dev.2b445bf.0+2b445bf","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.2b445bf.0_1695135426008_0.39406657429417447","host":"s3://npm-registry-packages"}},"2.0.3-dev.66ddb7e.0":{"name":"web3-validator","version":"2.0.3-dev.66ddb7e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.66ddb7e.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b863696368ace687e7a040172492a498eb6f43fd","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.66ddb7e.0.tgz","fileCount":184,"integrity":"sha512-5FR5FOhbtII3kFOXpstPMIpqsYdObM+evT2TMbSqpBdHkZ+TljsWMkWG1ptf4T+64G++zO0tUVLrACqF/MsD0w==","signatures":[{"sig":"MEUCIQDqge7Bjzg6Z/LaoaOPRXenF7YiVCDznz3zpV8VsossLQIgZcypRIlVj0neP2h70o+qpw3ee7cjSqI3xVAsrQSzOkw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931000},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"66ddb7e07a9547bfc6574f0f95dc2572f4b41452","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.66ddb7e.0+66ddb7e","web3-errors":"1.1.3-dev.66ddb7e.0+66ddb7e","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.66ddb7e.0_1695294501038_0.5720632912166748","host":"s3://npm-registry-packages"}},"2.0.3-dev.171b413.0":{"name":"web3-validator","version":"2.0.3-dev.171b413.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.171b413.0","maintainers":[{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"3ea2cc6c54e78c6f11e0953cde20d9f6128e1c66","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.171b413.0.tgz","fileCount":184,"integrity":"sha512-ZwOYKKsiRYXOSx+2UY9iEob0U9mqfa/cwVwaBCS+adCF/D5TsRltY/eFRHDowyAUT32mhHMILqFXSS/5IjfUsQ==","signatures":[{"sig":"MEUCIQCvP/8JkowkeDO/IohI5q9Dj9p4Z0Q3lfVoFLZbe6cXZwIgEfIOi6qdnGGaOkHuEt4DX4puQyF2vz8g/d03tiWB12g=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931000},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"171b413ae61a6cc5466a8501ed6dd513e83749c6","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.171b413.0+171b413","web3-errors":"1.1.3-dev.171b413.0+171b413","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.171b413.0_1695309169344_0.3187167902719388","host":"s3://npm-registry-packages"}},"2.0.3-dev.d036166.0":{"name":"web3-validator","version":"2.0.3-dev.d036166.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.d036166.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a56ef0cfd2b55ea78739dbaa6836062eef87f9a6","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.d036166.0.tgz","fileCount":184,"integrity":"sha512-ZGiD8EnsY/KZfPYLkzY/eExI/ZqkEO3l+QOG1JzlDNKTUNXXi7+bKoQlL+lBzSDN35nUB3tTOledVvixZwOB6g==","signatures":[{"sig":"MEYCIQC8XahkwxtkPUsA9k9m8A2dcmgRpsbHljqUsIGLAEcIvAIhAKVCIjDRFmH+HgzqMJpDGpUjsM6mTym7HYj0wk+YdS4G","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931000},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"d0361662f30d5f1082b5bd591d6fe6ec68e28474","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.d036166.0+d036166","web3-errors":"1.1.3-dev.d036166.0+d036166","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.d036166.0_1695346948031_0.9876842205675092","host":"s3://npm-registry-packages"}},"2.0.3-dev.80adabe.0":{"name":"web3-validator","version":"2.0.3-dev.80adabe.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.80adabe.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c1a43adf65acd7201d844bc8fd76906942967b80","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.80adabe.0.tgz","fileCount":184,"integrity":"sha512-lh4d7A6xuJoS25uhxJM4TtcUxJyA4BrtosE4EknrelhcSlocVbrYrJcLq5t4C09bp+VSFPgDGEs7RqJDuR/L1g==","signatures":[{"sig":"MEQCIDwr0IPbieuhUtlSPGSg0VURNTGZ21Ikr5sBn9tSExt5AiAZVhzJenqE9kqEqYTJrp/h6LZbJKx3U8DDov3ixvJ4kg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931000},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"80adabe986425c2415cf254f85f7025ef133bea7","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.80adabe.0+80adabe","web3-errors":"1.1.3-dev.80adabe.0+80adabe","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.80adabe.0_1695478375325_0.4536597943421161","host":"s3://npm-registry-packages"}},"2.0.3-dev.b8fa712.0":{"name":"web3-validator","version":"2.0.3-dev.b8fa712.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.b8fa712.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"418f29707c79ade13a91c8e258fc0644405a43d6","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.b8fa712.0.tgz","fileCount":184,"integrity":"sha512-qdJMF96FWQSNFybKmk4smVVvzdmQ9pMPCsSr2X9wNyarbZrb6viTrkZsCzzgZ6ZhTEzus+pUeKXyyBX62WzvVQ==","signatures":[{"sig":"MEYCIQDthozU4nV+QWwN0qOCiTlt6BGrWwDpeU/l6j9h2+QLfwIhANdLpRj2JbtL2T7yVpAwOjHfrqNdKouAlYsYw+6gmcVg","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931000},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b8fa7124d1d1e4c9c16b60ad2ce58559f72efd27","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"yarn build:cjs & yarn build:esm & yarn build:types","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.b8fa712.0+b8fa712","web3-errors":"1.1.3-dev.b8fa712.0+b8fa712","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.b8fa712.0_1695801182252_0.10237893601972825","host":"s3://npm-registry-packages"}},"2.0.3-dev.c490c18.0":{"name":"web3-validator","version":"2.0.3-dev.c490c18.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.c490c18.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f99aefeb8d98b8d47aee4f994dccada31d1afbf7","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.c490c18.0.tgz","fileCount":184,"integrity":"sha512-HWUHMhiVF2ztPKFjM4hGVv4VkQOBsSbIptqWKMXFgVIvi2I174vMGOyAukwRCmZVC7JkRZxhEtaOdKZ+wkgpDQ==","signatures":[{"sig":"MEYCIQCVd+7frGmZaPGpk6twH2a3Fk1RL5Mwvs808CrtywaDPQIhANeTA/zJxEco3YmH6QLyFPMIb/QKLNFRDvg/5gXhkzH0","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931173},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"c490c1814da646a83c6a5f7fee643e35507c9344","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.c490c18.0+c490c18","web3-errors":"1.1.3-dev.c490c18.0+c490c18","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.c490c18.0_1695900720988_0.9579244429315668","host":"s3://npm-registry-packages"}},"2.0.3-dev.3060994.0":{"name":"web3-validator","version":"2.0.3-dev.3060994.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.3060994.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"4a7946002a8dedf7f485581d801a112bd776a7e1","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.3060994.0.tgz","fileCount":184,"integrity":"sha512-XXYKQLcNJOrpGOgwBVIQzNExHjM+5N0nTFsVKUBSRmiUCyU4lUKg1l+9lWO9X3kVq7lfydC0tlixP85GjC4PJw==","signatures":[{"sig":"MEYCIQDIhguqmmLVl5Q/eqDeuFn6C6xq14C1DkIyAYYLe48SowIhAKHer2XoA8dzTn1zjOavNic8ScCxLE+9XaTweApLkgpW","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931173},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"3060994b7264998050145d2ae87f2f843262a776","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.3060994.0+3060994","web3-errors":"1.1.3-dev.3060994.0+3060994","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.3060994.0_1695924492363_0.7360030333034533","host":"s3://npm-registry-packages"}},"2.0.3-dev.4b445ae.0":{"name":"web3-validator","version":"2.0.3-dev.4b445ae.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.4b445ae.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"1d65223df163b99707115d933603fd3e1f5b0426","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.4b445ae.0.tgz","fileCount":184,"integrity":"sha512-aFTmGSng9nCkq25KGH23K5d71gLWnYQDfJj7l6qi6dvzFrpu8c4fNhMuysp6bm/DLIUZXfSqa/h5wtD9I2l2fQ==","signatures":[{"sig":"MEUCIQCnQu7TRU02r4R680MVQfrFqrZhU/xIfm9y/LgQqRY71wIgWb+Ct4OFbZTUPgMe+Znc94GF0vgz85c4ufQjPJfsTSQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931173},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"4b445aeb95a70d2fb7b822fe2bd79a24da5c035c","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.4b445ae.0+4b445ae","web3-errors":"1.1.3-dev.4b445ae.0+4b445ae","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.4b445ae.0_1696023464272_0.6232178006318705","host":"s3://npm-registry-packages"}},"2.0.3-dev.bfcbea8.0":{"name":"web3-validator","version":"2.0.3-dev.bfcbea8.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.bfcbea8.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f31df2a25e1ac0baf7b37383b5c7db59f86fad71","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.bfcbea8.0.tgz","fileCount":184,"integrity":"sha512-p/XC37vmsvSnsSxcKZfxGJXB2Tivw3uMi2HKM1HRwpes83u7k91czsGhlVSTrpXsGO6vk4YK09aJXu5yVtKZ6Q==","signatures":[{"sig":"MEQCIBfeCiyIfkRVQisEHZXSB9YRXWxRry5k4hCgiPJwAV4oAiBSxkl7INu/CkRw1uCZij+KxEbw83UihpHvFArHntk2Ig==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931173},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"bfcbea8616d18d4b134ebfeee392f12f698ff87c","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.bfcbea8.0+bfcbea8","web3-errors":"1.1.3-dev.bfcbea8.0+bfcbea8","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.bfcbea8.0_1696257891203_0.5944923074691164","host":"s3://npm-registry-packages"}},"2.0.3-dev.90d78c1.0":{"name":"web3-validator","version":"2.0.3-dev.90d78c1.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.90d78c1.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7d135da1aede5591971d6d532bf9af789b33dc96","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.90d78c1.0.tgz","fileCount":184,"integrity":"sha512-eMLXB+jGtukJeOjYKqsrosrwiGsFbqNODoCscg4Ahepj+zQaslzKUqCd6uuTFlTRh2OCxsD+aRp1wsnNDQa+Tw==","signatures":[{"sig":"MEQCIEU+tNeH89wfDtGmVrrHYpsNZL4buVlsAGzzkFWltVyfAiA7V7qF4KFQkyCFCK6OcbK0Hd4O6gOGRhuUzzNDE7xNkA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931173},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"90d78c1b7ffdc74f6ee71376a2b28da5bc55bc06","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.90d78c1.0+90d78c1","web3-errors":"1.1.3-dev.90d78c1.0+90d78c1","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.90d78c1.0_1696259464802_0.045164854719173864","host":"s3://npm-registry-packages"}},"2.0.3-dev.9b03f9d.0":{"name":"web3-validator","version":"2.0.3-dev.9b03f9d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.9b03f9d.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"937f8532398027cf6da5323de78b5a745bdc2968","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.9b03f9d.0.tgz","fileCount":184,"integrity":"sha512-mgN8tto6GqoO3mz//o8TF+gCrBZ90Z2ds2XvGASFoGTuxdiopGFhbmAE+HpNXXYFFHgw4e1wbRUKUGkUQ2CcZw==","signatures":[{"sig":"MEYCIQC6iSgo60BRMzBc3Zw3YujCycd1/Sqp8/uoVOWMJWUQ3gIhAL9llg4qgGNGLACG5Gpq/8iNEi/BtN/lmj2KMs8FKSlv","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931173},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"9b03f9d53c2afea29a9f974b0a0769c70424346b","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.9b03f9d.0+9b03f9d","web3-errors":"1.1.3-dev.9b03f9d.0+9b03f9d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.9b03f9d.0_1696411618178_0.804533525689102","host":"s3://npm-registry-packages"}},"2.0.3-dev.80986bb.0":{"name":"web3-validator","version":"2.0.3-dev.80986bb.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.80986bb.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"9d6ee678d59b5575e0f1aae0e4c288632afb1f28","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.80986bb.0.tgz","fileCount":184,"integrity":"sha512-P25AUgZW/P4b5C2RgOfekrelZx8yRxK/7moPUo7Bxu3t+/N2t85rR4Ql/WwHWIFoJAgouaAWZvWHD2/J68/ldA==","signatures":[{"sig":"MEYCIQCUpc9yUHUQBfJW3ts/fN/7I6/+EhEHWOzwPWxxs4abaAIhAON08xRQWl7aQUgfM92VrxGm2NTMlyFjyXZp2R9j6P2O","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":931173},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"80986bb998175ef367b3dc4fd7fd4f6aef8a9d18","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.80986bb.0+80986bb","web3-errors":"1.1.3-dev.80986bb.0+80986bb","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.80986bb.0_1696429218607_0.7462120460081407","host":"s3://npm-registry-packages"}},"2.0.3-dev.0e78235.0":{"name":"web3-validator","version":"2.0.3-dev.0e78235.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.0e78235.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f1df96aa7eea5e2d90287ce161642924e3f55df9","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.0e78235.0.tgz","fileCount":184,"integrity":"sha512-0L2Mgej8IWho3nXPovQA9hRU41v3/y2YgyhZWw7NKoQG69GwQkQ9Vo1vy3kaltKwd48ff5Q88MUgF3/LqgrAEQ==","signatures":[{"sig":"MEQCIFS05kWKgWnnXXEE7zSBnjkIPHy4W4/Se0EfNibiP7WpAiAgA4z7uPKDx0P/HYepRBKpeR5wKTNkPKn3ptli+OnWLg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":932483},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"0e782357ff3001de8aa7491bb95e1334d32dbba9","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.0e78235.0+0e78235","web3-errors":"1.1.3-dev.0e78235.0+0e78235","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.0e78235.0_1696514488175_0.6937886150229151","host":"s3://npm-registry-packages"}},"2.0.3-dev.ae98628.0":{"name":"web3-validator","version":"2.0.3-dev.ae98628.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.ae98628.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"296264351cfb4fc876720db9391272bbef4e1a93","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.ae98628.0.tgz","fileCount":184,"integrity":"sha512-hqdNi3bOqOHRPWqmtWGKKbGDntVEqaVf6AijX/14jlavFeWQ87HAGNxlTEZnX+3635Mk5Y9Ox0kwRo6d4heFgQ==","signatures":[{"sig":"MEUCIBEfDTdFSwt0+BlSD6jcaHnoQozmbjRcHPExm7OfDY6AAiEA+Gog5gBTjljUedtX2cEdKspT16LGPnNIv7VExOTMDg0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":932483},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ae986284ffd33485329ac0de0c1ae3ef5ea84658","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.ae98628.0+ae98628","web3-errors":"1.1.3-dev.ae98628.0+ae98628","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.ae98628.0_1696870396266_0.7852291686865485","host":"s3://npm-registry-packages"}},"2.0.3-dev.4879326.0":{"name":"web3-validator","version":"2.0.3-dev.4879326.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.4879326.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"940036d99dde64a54b14b03c2eeab4f4e64afbd4","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.4879326.0.tgz","fileCount":184,"integrity":"sha512-oAhgt4pswudzDG/q0vyD+q7uGs2hh8HF1+Aq6C1UAgNSb71L3yjkzd6czpzzv1KT2X8sQe9mSy8zfl1rScJI0Q==","signatures":[{"sig":"MEUCIHHaqaGmdbSegH7mTXyOSzTxRqzJ9svmTQPiDK000mz/AiEA9KeKHg/iYGlZX87PYMpJ5X/wDq98D84Gh5s44/QNmmo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":932483},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"48793264c0f82062dc2792e823e7a7c3d9084ec5","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.4879326.0+4879326","web3-errors":"1.1.3-dev.4879326.0+4879326","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.4879326.0_1696879512229_0.9889259021881855","host":"s3://npm-registry-packages"}},"2.0.3-dev.9a5fd87.0":{"name":"web3-validator","version":"2.0.3-dev.9a5fd87.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.9a5fd87.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"78b2ca4b069581009fe401aa279a1bff04d4d4de","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.9a5fd87.0.tgz","fileCount":184,"integrity":"sha512-AwiOBAGkrAxjfM+xp7yiKQy4HIHsqgM1vA7fZHo6AEqdCqjiuQsbSYSiAZokkR5zhEC/hxa4JxuX1iED1SJyZg==","signatures":[{"sig":"MEUCIQCXjDBf5g+fr0ziPvZfKDgTjc3MON5yXQdACJafaxv++gIgDUr0uiLYCEennB0RGWertRfo+aDfNx/r4CkWc6BAB70=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":932483},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"9a5fd87be87efd6709780a6d73f99ead603fd7a5","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.9a5fd87.0+9a5fd87","web3-errors":"1.1.3-dev.9a5fd87.0+9a5fd87","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.9a5fd87.0_1696945660845_0.3134308831643926","host":"s3://npm-registry-packages"}},"2.0.3-dev.b38f00d.0":{"name":"web3-validator","version":"2.0.3-dev.b38f00d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.b38f00d.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"64d886f31b13a393ac8c7cb929205746331b6ec8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.b38f00d.0.tgz","fileCount":184,"integrity":"sha512-D6S8qpft25UlJmzQzeQbROQXVP6ZXDyQTlnqA5Rqbkj9d7lsXLsAfqBDpb/R90IijbpkLrupncfDp4OIi2QTKw==","signatures":[{"sig":"MEUCIQC2Esg8A8GXiCfzKKvbsAPUqyCY0Ay/SdBxwHCoSyAQxQIgFzwFx9fmy5gjweXw4RnMSeotAvmU3KPKNyetgpfMQZc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":932483},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b38f00dc02fa60e23d24d5e99137e1afa003f059","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.b38f00d.0+b38f00d","web3-errors":"1.1.3-dev.b38f00d.0+b38f00d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.b38f00d.0_1697123113440_0.18411193857538177","host":"s3://npm-registry-packages"}},"2.0.3-dev.6e43d1b.0":{"name":"web3-validator","version":"2.0.3-dev.6e43d1b.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.6e43d1b.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d6c18015c1789d14e58afca17e911bbeb96579f8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.6e43d1b.0.tgz","fileCount":184,"integrity":"sha512-+q9jc1HnQbuoRbtRETH6UIPGbiCDZC5wptuPvVk2zZi14XLbIHdQAtkK1rG4/vS8nzrTj8MGqKTzrim9Er0zPA==","signatures":[{"sig":"MEYCIQDsww/4pmqrYPKaW4UXyQY09H7689JsZHhEDN4qkWTEpAIhAKJIuaBABgOpDAozE8puUsKo/bJHVyDNCvN/VGMHLSfl","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":932483},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"6e43d1b78940d795c22d62fc431e09d10ffcab92","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.6e43d1b.0+6e43d1b","web3-errors":"1.1.3-dev.6e43d1b.0+6e43d1b","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.6e43d1b.0_1697134389470_0.8521990281172735","host":"s3://npm-registry-packages"}},"2.0.3-dev.e760667.0":{"name":"web3-validator","version":"2.0.3-dev.e760667.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.e760667.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"30dc53dd4e1668ae0c8983409609dab2e9fec439","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.e760667.0.tgz","fileCount":184,"integrity":"sha512-Z+cgyn4sSTlh5C/5voO0VQA4DZsoPQqMgir9Tug3BABpgBccXbE/MVTMff3MMjo7T3KQBu16cgLoWgCnT9NCFw==","signatures":[{"sig":"MEUCIQDk1FDZ1HlHoE0AwZcqgFp23FD/kbd5a5yXhuBLWDlweQIgWRFrusmGmX2bcRngPWVJq9s5WpZlw57MWz2dbLwjO7g=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":932483},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e760667d2595deafcf7606c84b15bda9b472c5a7","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.e760667.0+e760667","web3-errors":"1.1.3-dev.e760667.0+e760667","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.e760667.0_1697162467806_0.522518418150405","host":"s3://npm-registry-packages"}},"2.0.3-dev.42502b6.0":{"name":"web3-validator","version":"2.0.3-dev.42502b6.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.42502b6.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bdeb5f07eaff336f9656b2c9ecbe0478d2a043f6","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.42502b6.0.tgz","fileCount":184,"integrity":"sha512-medPBA95oGjTjO+MlpW7rgX5A5cTSmWOJmcxkZa4ASlWUWawkj+33F6ZKnoHooAiFs8zDvm3ePAXTRQvCo3SFg==","signatures":[{"sig":"MEUCIASaPAQ1V0oh2PdSMxZkFJd4Y2z0nUuFkddQyQ3Ad9vLAiEAt2KTp92WJtOzZRDkitjNYXJcGJQno1zsSv3BC26XtIA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":935503},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"42502b6599c3c8149721a5679fcbf56c79deeebd","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.42502b6.0+42502b6","web3-errors":"1.1.3-dev.42502b6.0+42502b6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.42502b6.0_1697454137426_0.16280525263467704","host":"s3://npm-registry-packages"}},"2.0.3-dev.10d1f12.0":{"name":"web3-validator","version":"2.0.3-dev.10d1f12.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.10d1f12.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"21c386c6a775eee11a3127fa058703dcd0b75923","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.10d1f12.0.tgz","fileCount":184,"integrity":"sha512-RT6/hDIHwAsUWG8Y8mJpfhz7YZSzVeNQcCx4Y7hR0BOHDIbGn95w+PuWJj0/izFXPgiI0NFEwllk1qzxNOfeKw==","signatures":[{"sig":"MEQCIERzZY8z0ig14M4q0FglFVZkqNCus6ADyPxDN0Y4G2AnAiAvAI4e/8x2rlLnAoNCWhyI45Lyn2G5ER9oeUWz5zg1Ww==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":935503},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"10d1f12663d834dc216cb83c703675afc1e8159e","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.10d1f12.0+10d1f12","web3-errors":"1.1.3-dev.10d1f12.0+10d1f12","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.10d1f12.0_1697476886944_0.7253294874048988","host":"s3://npm-registry-packages"}},"2.0.3-dev.70d1957.0":{"name":"web3-validator","version":"2.0.3-dev.70d1957.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.70d1957.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7162935e31a26d9bbf997f38693c93357974287d","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.70d1957.0.tgz","fileCount":184,"integrity":"sha512-uFn2bFiHKjDwGAyUmRrfN2JE1ljVxJ5g4mvCHCoCW2kW7IfaDaVjMSyXwTa7GUUozYxa8InzHK3zHiXfEQKRTQ==","signatures":[{"sig":"MEUCICY6D/2Rp72YzuemLa5l3C8xBjvMm0sh9FDF6GRLpO76AiEAkjbvlsNgbVtO+J8pS+s/l2g2vqm1AbCz5ARyodRMKc0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":935503},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"70d1957e0a8642d1e5dba47c39ea65504689b6ec","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.70d1957.0+70d1957","web3-errors":"1.1.3-dev.70d1957.0+70d1957","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.70d1957.0_1697505049226_0.887086907009482","host":"s3://npm-registry-packages"}},"2.0.3-dev.226b3ba.0":{"name":"web3-validator","version":"2.0.3-dev.226b3ba.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.226b3ba.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7d30e2732f0662528259b0c234a601d2ae26cdd6","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.226b3ba.0.tgz","fileCount":184,"integrity":"sha512-bf76PBARyvDQncVa2Lb3OBMzebHd91roQUPYyzxV4UeVXVJKfyqX/wzL1D0GqzwkXRKlOBeyhUzj3DqY7eVXAA==","signatures":[{"sig":"MEQCIBCChoW3luVLBdTpztga62l8vZPvurpIOPn+3Dx/hvBzAiBxfcRrOMIm5PHVh/IyfmUF95KklxxHIZVZiKUXBpb/Sw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":935503},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"226b3ba9c1ece0a399d120b83229582ea20b6c95","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.226b3ba.0+226b3ba","web3-errors":"1.1.3-dev.226b3ba.0+226b3ba","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.226b3ba.0_1697538372669_0.6533426978311256","host":"s3://npm-registry-packages"}},"2.0.3-dev.09f4c8b.0":{"name":"web3-validator","version":"2.0.3-dev.09f4c8b.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3-dev.09f4c8b.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"4399c310e66f553d7ebdc8e0f64c77e0dcad321c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3-dev.09f4c8b.0.tgz","fileCount":184,"integrity":"sha512-h90ST2aRiKjon8nAKG4BxlkmvAVSmJ4/vZ03ajy9P1W8Y8NCXtSJeL+Rj6oUavxeeL7f52PtsEzB7p9fzSoskw==","signatures":[{"sig":"MEUCIB17OFN+bX56Z9Hz6Gi6wBd7wxutztgRSzeuacj+05VqAiEApIEZoc8MyxSOLX8RhVGSDFx8iQjxZQkRx+mnx0lGjQI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"09f4c8b077c06322855a99c722fd87aadee2feac","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.2.1-dev.09f4c8b.0+09f4c8b","web3-errors":"1.1.3-dev.09f4c8b.0+09f4c8b","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3-dev.09f4c8b.0_1697562785571_0.2491199519577214","host":"s3://npm-registry-packages"}},"2.0.3":{"name":"web3-validator","version":"2.0.3","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.3","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e5dcd4b4902612cff21b7f8817dd233393999d97","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.3.tgz","fileCount":184,"integrity":"sha512-fJbAQh+9LSNWy+l5Ze6HABreml8fra98o5+vS073T35jUcLbRZ0IOjF/ZPJhJNbJDt+jP1vseZsc3z3uX9mxxQ==","signatures":[{"sig":"MEQCIDRdEBLkyJtTc6etVj+DsDaEJOokAeQxV70LDYAZQF1gAiAFhHD4WkZX30TK1f30QiWFmcQ2NYFRGBGui8UeX0HhMg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940198},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"c8799b074e7abf86b4b03a163aa9183250ad7228","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"jdevcs","email":"junaid@chainsafe.io"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.16.0+x64 (darwin)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.16.0","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"^1.3.0","web3-errors":"^1.1.3","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.3_1697636668715_0.6804668912187319","host":"s3://npm-registry-packages"}},"2.0.4-dev.bd3b9a0.0":{"name":"web3-validator","version":"2.0.4-dev.bd3b9a0.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.bd3b9a0.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"762cc411b6fad9dfd2f2c4f41f735dbc8bfe8c13","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.bd3b9a0.0.tgz","fileCount":184,"integrity":"sha512-lkCjxdT8NcFLdjkqdOVNn944mpe7EmALMORfHiwpKtVLGkHuPv6fDOiz2L+a/9Vj4Bv+RHByE3tyZzQkSdxVtA==","signatures":[{"sig":"MEQCIG8dCksGJsgU9C82jpvZu6T77gVlXSD3X5NOPTqFmA1YAiATJktdLJNkU9DgwD5R9Dn2WEIJV0O1Mtb0dqxe56aBwg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"bd3b9a0dacc6f15a406dd660ec7add3c2765b600","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.bd3b9a0.0+bd3b9a0","web3-errors":"1.1.4-dev.bd3b9a0.0+bd3b9a0","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.bd3b9a0.0_1697637806700_0.9734253210669863","host":"s3://npm-registry-packages"}},"2.0.4-dev.7bee9bc.0":{"name":"web3-validator","version":"2.0.4-dev.7bee9bc.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.7bee9bc.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7a815f395c325590857f4534d64d857426ec2e36","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.7bee9bc.0.tgz","fileCount":184,"integrity":"sha512-/GRFRJe5PeJKxwOrf0E/SbIk83lXevPckNgyigPuMNyRtblpbLHcyUNREgttcphDLrkCm1NnGNn6+nRTPUJ4Jg==","signatures":[{"sig":"MEQCIAa13WgkRVWUxv+hGz6QMYJO5DQizN75CawyNClBXZPwAiAkLsug9ruBmnFdgGck2HigFmqITvT1m5cMZWl6fiF0gA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7bee9bc7706f9c16757b464553fb7234fc8e4491","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.7bee9bc.0+7bee9bc","web3-errors":"1.1.4-dev.7bee9bc.0+7bee9bc","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.7bee9bc.0_1697647623482_0.8745275640103907","host":"s3://npm-registry-packages"}},"2.0.4-dev.6791e60.0":{"name":"web3-validator","version":"2.0.4-dev.6791e60.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.6791e60.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7a7ef474a1faa1fe62dcdf0ebb0e52e0ea3c215b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.6791e60.0.tgz","fileCount":184,"integrity":"sha512-Wq3xRvXuLghY2WBnKnHQVG4zdPZvEO6qVHGBqtzgblOAfNv30KbgUXXIkVfl3grktpfnaGZ2damQAnJco76TxA==","signatures":[{"sig":"MEQCIETM5D6JzGOtUqGQX6DXfxXtluu7ifo5ZyfNdwPdH5enAiAwEhZ2sSGmsjbrJW6QiBmiqsuKXhF6xg18ryWcMgso3w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"6791e60ee3d66feab782e1ee79713f7baa5655c1","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.6791e60.0+6791e60","web3-errors":"1.1.4-dev.6791e60.0+6791e60","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.6791e60.0_1698068314597_0.45859580636695707","host":"s3://npm-registry-packages"}},"2.0.4-dev.90b8581.0":{"name":"web3-validator","version":"2.0.4-dev.90b8581.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.90b8581.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bd09483c379804c58604e4fbe9860fa5b2c423bd","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.90b8581.0.tgz","fileCount":184,"integrity":"sha512-Aj0jec59gfV66/Ew6qGT5elgQY5HHxyp+o1FVSowbvDxTPKPfWwkKLGVLOdWTrvnoRorYYEQGUCJHa/e7iLvQA==","signatures":[{"sig":"MEYCIQDQVkcxsmkK2YwiLXM1maU7D4fFkCbFat6y1Iol0rWYlwIhAOTD4Pl3J1g/qgmfPfNQeSKsbat8wj4bu3aNfHmpUQRD","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"90b8581630ba8c15acca259179d1de69d7d1aab5","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.90b8581.0+90b8581","web3-errors":"1.1.4-dev.90b8581.0+90b8581","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.90b8581.0_1698071766560_0.6796641892758304","host":"s3://npm-registry-packages"}},"2.0.4-dev.a0d6730.0":{"name":"web3-validator","version":"2.0.4-dev.a0d6730.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.a0d6730.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a03c23c38ba64c3af512033a4d1b2366b14f5548","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.a0d6730.0.tgz","fileCount":184,"integrity":"sha512-LycNnoABFEiKRTtSrpYA3f0Rtp5n8fZK1bVuDO45i9adPMIzu7HhW7XRtDuDuMnRnnHU1jvxASCsM15tpDJlaA==","signatures":[{"sig":"MEQCIHdbmbIhxm+1dIyK1fPRptzU05qJ5XC+Zc54kpSoT8aaAiBRF2wOrpL+ovkMqSB1oosqw1MY/ohldI1AXk5o48xNaA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a0d6730e317ab97fa4983c09880a0a1d01af9b74","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.a0d6730.0+a0d6730","web3-errors":"1.1.4-dev.a0d6730.0+a0d6730","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.a0d6730.0_1698072392128_0.8089137657048489","host":"s3://npm-registry-packages"}},"2.0.4-dev.f860b04.0":{"name":"web3-validator","version":"2.0.4-dev.f860b04.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.f860b04.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e3fa163d3cf0523cb17c37e35caf837023d22c5d","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.f860b04.0.tgz","fileCount":184,"integrity":"sha512-damhUUksn2xaTTUB6QRo6hL2c5qkFQMsPpEIQ6DOV9LQZs1mGG6RIUQMNCMkZUWOTvwvRseJUL+mEwXC73XQkA==","signatures":[{"sig":"MEYCIQD/eV9s7aZP+wrlaHg/jiN+HS+RzKIuO5vgrnzNgF0yuQIhANmgXU6InIbvC1444Fp9dXJemhkwFvVPrtfbPnlQ2MKJ","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f860b0481d7c1ef09ddaeb33098b2253ca694150","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.f860b04.0+f860b04","web3-errors":"1.1.4-dev.f860b04.0+f860b04","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.f860b04.0_1698074063176_0.9373961952732492","host":"s3://npm-registry-packages"}},"2.0.4-dev.8c643c2.0":{"name":"web3-validator","version":"2.0.4-dev.8c643c2.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.8c643c2.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"750de5f859b15501022e62faca5d85ce58f69517","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.8c643c2.0.tgz","fileCount":184,"integrity":"sha512-BmSRjdE5d8hyTPvS2AXiwTaltMWZ+nYl+wpwQJiwt3UF9M7g2gHjOrZufIo5TRKSXDRkn7rO5OyXZrNzIeZE1Q==","signatures":[{"sig":"MEYCIQDuJkiSTGv8IdgjYLnD6cuYJjMXGZL2C9W/sG1fOgFN2wIhAMQ7n1ezmtjo5FMtBWdmCfockWYowe7rO7lftw19KXL3","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"8c643c2f51ec96b10993e4905c827a16e297f9a5","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.8c643c2.0+8c643c2","web3-errors":"1.1.4-dev.8c643c2.0+8c643c2","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.8c643c2.0_1698251593417_0.5600588771439168","host":"s3://npm-registry-packages"}},"2.0.4-dev.41f39c0.0":{"name":"web3-validator","version":"2.0.4-dev.41f39c0.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.41f39c0.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"99bdecf86d9cc49e58c64a8c82cc49f652053710","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.41f39c0.0.tgz","fileCount":184,"integrity":"sha512-vc9+9ReA08ujugfKt9rhVbgOWVcJWL1Tls1eQ+6yai4kJ3vQGHhcFg1zb1RF5D2spdpSVf5hUYulqB0fNoFQsw==","signatures":[{"sig":"MEQCIFWYc3ZTYHhNNpD0YTmZnZZzb6y6jluIkRMmA8OWbSUQAiABNRqtErGtNrGH3FAXmyqtywdsqQsS6R5yynvYWCQgTg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"41f39c0483950d2a1433f90fa2eff07f08aeb5de","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.41f39c0.0+41f39c0","web3-errors":"1.1.4-dev.41f39c0.0+41f39c0","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.41f39c0.0_1698348710234_0.03195840150457596","host":"s3://npm-registry-packages"}},"2.0.4-dev.116b7bb.0":{"name":"web3-validator","version":"2.0.4-dev.116b7bb.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.116b7bb.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"01529f5077767af833180ac3ae0c3240af8a9988","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.116b7bb.0.tgz","fileCount":184,"integrity":"sha512-L0h7dqmGKt/+OWn9cfYbfqkTMMs1KSTdnsZ8/Dr2vsEgNoddb0kA18ChXVX4vNP8FBuOjwRDrB9Vbeh9K01KWw==","signatures":[{"sig":"MEYCIQCjgZEKiBfwNBBZRvi7eBiJTnmD/m4GALigDhuX5GbFtgIhAI9gUboiEodrrS7beHGZuhypGXbPBMTfYo+wexTEEx3d","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"116b7bbd0f6c66e3bd33850075303c34d77853fa","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.116b7bb.0+116b7bb","web3-errors":"1.1.4-dev.116b7bb.0+116b7bb","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.116b7bb.0_1698752067687_0.8083275576750297","host":"s3://npm-registry-packages"}},"2.0.4-dev.f6c7fca.0":{"name":"web3-validator","version":"2.0.4-dev.f6c7fca.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.f6c7fca.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d7c94ed3f3e6742b0dac132d6eaa550918f0b427","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.f6c7fca.0.tgz","fileCount":184,"integrity":"sha512-uavHB0ww0cq5AGyLL13Js1CtKdIIOworqdRcn24tbrOrm67ECAz078SNxHqPKnJuzUp9Z9Ijnkc817NL8KaOZQ==","signatures":[{"sig":"MEUCIDJiGXtnwezITo0mOD8k8PH89iZ64L8aQxtsg1Di6KNlAiEA1srggfa6FFUus1/EgP0tBzOpL/7YD/7Yo1snK+qNjSw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f6c7fca6f91c3941d2639789b98b42b6009078ac","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.f6c7fca.0+f6c7fca","web3-errors":"1.1.4-dev.f6c7fca.0+f6c7fca","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.f6c7fca.0_1698759388320_0.300602782253218","host":"s3://npm-registry-packages"}},"2.0.4-dev.b05345b.0":{"name":"web3-validator","version":"2.0.4-dev.b05345b.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.b05345b.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d6bc7c63bf0c4450642f9735b7d3f5b99b31d152","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.b05345b.0.tgz","fileCount":184,"integrity":"sha512-bvZdp/Dc424g8ltQRfs7EVZgabOzGFVNdc9PoEameM70ULdzP9R4cWEeX45bz1pqVP4BmvBLLRXlWsKULwhS0A==","signatures":[{"sig":"MEQCIF4vW1C3Hb+km3WktsVln+pNoMxPrn1E4rAz+gjxcEu5AiB2jByKgnx09ha4LhI66zoQzeb6TnJqNYbWHWqhksvYeQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940262},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b05345b21d3f5c01d5fdb0462ed7e5fbe19a2331","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.b05345b.0+b05345b","web3-errors":"1.1.4-dev.b05345b.0+b05345b","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.b05345b.0_1698852608429_0.6497451112819068","host":"s3://npm-registry-packages"}},"2.0.4-dev.f9bcac9.0":{"name":"web3-validator","version":"2.0.4-dev.f9bcac9.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.f9bcac9.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"4bac0df013d9d5ad56703379f70288fe1f071b01","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.f9bcac9.0.tgz","fileCount":184,"integrity":"sha512-AjMl8k16GgvWtHl1BY4HJXtIVbCi60xCFkN+bjs9u7q1QULN2Fo4zDIfs6S5nCoTGj4+rVCNTwGwGOCrFl7Dew==","signatures":[{"sig":"MEUCIQCqZzaLRHdg2Y0UEYeSeNqpYvcFDRO/590NGf67/QcF6wIgDTafc8WCKWhGWOVV4h2Suw2K8U7MoC/TdR+mMuqz9JQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f9bcac9fb795d60bbe6d1e863aa250d224202f52","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.1-dev.f9bcac9.0+f9bcac9","web3-errors":"1.1.4-dev.f9bcac9.0+f9bcac9","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.f9bcac9.0_1698919398614_0.1733481210000496","host":"s3://npm-registry-packages"}},"2.0.4-dev.72e9bbd.0":{"name":"web3-validator","version":"2.0.4-dev.72e9bbd.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.72e9bbd.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"68b49d0ac0eab569e53f88778d7729ec08cc3d8c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.72e9bbd.0.tgz","fileCount":184,"integrity":"sha512-3Cg6L4oyKAmDAIR9aC8GciyS/qaoX5SgMGlGus/HvSxtRtM7ED+/V968W6BDNf9qWbAzBcrhwMScymseOtlUnQ==","signatures":[{"sig":"MEYCIQDQcC1JoPV/bU0b16/DBkz+q2rpCjAWxB4tlH98FFkHIQIhAM2W//Lq1u8OZpL8ax0mPe2ZuZIlF/0Mkehic8SrbRKy","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"72e9bbd334ffb2408267fd6e2bc37d20569c82cc","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.72e9bbd.0+72e9bbd","web3-errors":"1.1.5-dev.72e9bbd.0+72e9bbd","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.72e9bbd.0_1699015158052_0.0011416527773642215","host":"s3://npm-registry-packages"}},"2.0.4-dev.11f20b2.0":{"name":"web3-validator","version":"2.0.4-dev.11f20b2.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.11f20b2.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0851386ce2d1715dfcf55225296050375c4c86f8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.11f20b2.0.tgz","fileCount":184,"integrity":"sha512-NaKSyPPxvkp4o2dyz7S4aXCnAEkvaQP8xThP48nOtN3BzE00PQL44vunJztXv8cgA+LCVksSbGO0wXehSXK8cw==","signatures":[{"sig":"MEYCIQD32l/cI9BDuWV290JyAiO5+8BDMjK8zh8ByJ1yutnxpgIhAPDdjsbH8sZPHDk3LxDyhLSgAikBDFn68X2TJgd6bFQl","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"11f20b261a5a0057e0f53020ed0e662ed032fea1","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.11f20b2.0+11f20b2","web3-errors":"1.1.5-dev.11f20b2.0+11f20b2","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.11f20b2.0_1699290978789_0.6417697156827304","host":"s3://npm-registry-packages"}},"2.0.4-dev.41dbf2a.0":{"name":"web3-validator","version":"2.0.4-dev.41dbf2a.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.41dbf2a.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"9c72d9c4f4549ab8e525deeb9f73d39b7397a96b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.41dbf2a.0.tgz","fileCount":184,"integrity":"sha512-gEOWGPMiIMnnTgZ/PFMxALSNXZ3z8TQtq8UcZ9AOABfxk48nRJn+tA4ODGibDfT7XJ5qaF9otX9Ts2X1A3X5lg==","signatures":[{"sig":"MEUCIHwpl2rH42Sa7/ZEgSPHV0cZtxwEoEmtErJFVjUoENThAiEA5hlfNIvavjW3JT5yNMiJjJLl6bfWswKwg6+B28qgtB8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"41dbf2a001828546db124a1825e2e2b0b5a60a54","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.41dbf2a.0+41dbf2a","web3-errors":"1.1.5-dev.41dbf2a.0+41dbf2a","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.41dbf2a.0_1699291463612_0.7055440098875152","host":"s3://npm-registry-packages"}},"2.0.4-dev.332c18c.0":{"name":"web3-validator","version":"2.0.4-dev.332c18c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.332c18c.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e502ea897359618c4e5d5f0b3dca7af34b87e74a","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.332c18c.0.tgz","fileCount":184,"integrity":"sha512-ipgiildg10tBWb5UnaKbFrNECcQIpbM+oTvnGw7xBiX1JUPEvxTxPVMWm45SSj5sapx4Q95c1qKsUE87DQTd/Q==","signatures":[{"sig":"MEQCIAeqYeCEDx5fPP05HsGSPvTor5nKRZpRWzKIw2R5qQDLAiA1MFf27RfOzO6bPkTw9YN9aGwWfNZpYtS3V1NDGPm/Zg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"332c18c73dadce243dffabd8f6b79ad5641bd6b9","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.332c18c.0+332c18c","web3-errors":"1.1.5-dev.332c18c.0+332c18c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.332c18c.0_1699293238528_0.5714912710923872","host":"s3://npm-registry-packages"}},"2.0.4-dev.4778a0c.0":{"name":"web3-validator","version":"2.0.4-dev.4778a0c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.4778a0c.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"78296e44069e585454a1bdbec7433074aae7eabd","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.4778a0c.0.tgz","fileCount":184,"integrity":"sha512-gfyb3P0z5gMMbTPFyvLidufcR9ft4J8erPQckqpA7Mc6ypkBPiIgmZHm67V7k60JvqHGpn8jC7iEj0wfjp51pQ==","signatures":[{"sig":"MEQCIDnRffdsYTvcQsOfE9WXFoGFLz6VbR0C+9B5U19seXq9AiA0jUQgpwnjrbfnonvxX1cC2Nld9ALLBtX3UXNDz8M9QA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"4778a0ccf98fce3105f5e688f3fca10099a6e63d","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.4778a0c.0+4778a0c","web3-errors":"1.1.5-dev.4778a0c.0+4778a0c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.4778a0c.0_1699308167203_0.18610228925269956","host":"s3://npm-registry-packages"}},"2.0.4-dev.09c8ad0.0":{"name":"web3-validator","version":"2.0.4-dev.09c8ad0.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.09c8ad0.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"be09af4cea2a8c8edfe89ded49e3e9761dccb211","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.09c8ad0.0.tgz","fileCount":184,"integrity":"sha512-ALVPByWVuqNCxTj5kpibUfBNqrLjc5qkGM0yTla6aGWDzhW3lvkLGUm80tHs+M/bthsRrn+FQn8eoFq/EQko9A==","signatures":[{"sig":"MEQCICjRU3HHErK3q9lsq3wOIWV7tWhsGGr0rE/MphRzptxCAiALzu1c/IiVsj4383z+ZqwX0Wki2u4pmqMa0/Z4VWVaEQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"09c8ad09bad13953b76a3b36d6dd874f3d4650ce","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.09c8ad0.0+09c8ad0","web3-errors":"1.1.5-dev.09c8ad0.0+09c8ad0","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.09c8ad0.0_1699355739957_0.5063051595252646","host":"s3://npm-registry-packages"}},"2.0.4-dev.8e3e676.0":{"name":"web3-validator","version":"2.0.4-dev.8e3e676.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.8e3e676.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b0f44c380d911e645c76604ec602c9b570ab77a4","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.8e3e676.0.tgz","fileCount":184,"integrity":"sha512-SLulXRAYXQ6FXB9VDznyBVUdoov7NJTAeMT37/odn9lSaoj3jA8dhzhJ8u27Pug5eUcY+mkrYovKdiRaFywnOA==","signatures":[{"sig":"MEUCICXC9b8rtAvyi/RELWaiEcNs49iKdzUXARisyqtdHmCQAiEAgkTJGMW/daJOSWujx3r7VlCdH97GfXIekRQsu+sAbqA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"8e3e67628ebc90ffe6b86ec054874cb6bb7bac31","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.8e3e676.0+8e3e676","web3-errors":"1.1.5-dev.8e3e676.0+8e3e676","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.8e3e676.0_1699607593347_0.45382919164902336","host":"s3://npm-registry-packages"}},"2.0.4-dev.2c132c5.0":{"name":"web3-validator","version":"2.0.4-dev.2c132c5.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.2c132c5.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0caf4d069c4f76238f12402e0892612bed1aa09a","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.2c132c5.0.tgz","fileCount":184,"integrity":"sha512-t2q8ftnW0HUCHk/exAyRU5ktpWhQsEgNWoirIFLMTn38epwwfxB/0ruIK0ZiwLmeOLAlADA1wo65dXrzbM5eeg==","signatures":[{"sig":"MEQCID9Gd4j1K0H6zAJSxW97s3Cnqj1KUzxczWPqov96TiI/AiBwG4dPD7hD1u+m8MjOe6RbJWayT+uPByf/IjFhk/uh9Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"2c132c5c6365e1bc16ac1e0bbcf82795df10ee26","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.2c132c5.0+2c132c5","web3-errors":"1.1.5-dev.2c132c5.0+2c132c5","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.2c132c5.0_1700130893547_0.6153028211212255","host":"s3://npm-registry-packages"}},"2.0.4-dev.0dec262.0":{"name":"web3-validator","version":"2.0.4-dev.0dec262.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.0dec262.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"afb21553c3cd6024c6a55661d83d87f8e72c4be8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.0dec262.0.tgz","fileCount":184,"integrity":"sha512-n6kGrAJKS5WewhA1hkdQLR3etOylrSOPXxpIxE1utHbTP+Z/V3Wc763J2vcXih9i4SdbrCygVvk1xkIvuJt3nQ==","signatures":[{"sig":"MEQCIH6tg6eHNzsXyc5S0XLYx4qkD2JH1B3BgB00ihjrMRKzAiA8ymythkVSabP8Dc6nS8B2XR9F3YRA6kEwFFJ4ya116w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"0dec2626f770791e404e360124d37f50ede3919f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.0dec262.0+0dec262","web3-errors":"1.1.5-dev.0dec262.0+0dec262","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.0dec262.0_1700211488493_0.25149969464594335","host":"s3://npm-registry-packages"}},"2.0.4-dev.bcd0706.0":{"name":"web3-validator","version":"2.0.4-dev.bcd0706.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.bcd0706.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"ad32fe24f2f00f4c277bcb4bf5ecb8c20ecc7c9c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.bcd0706.0.tgz","fileCount":184,"integrity":"sha512-BrjELNQQZRR8Ke4/hM/Gm/yGbYWQc87jpC+dnxx0hAlB2n21vFT/XkUQccbctk2YnXb89nOPh08jikZqiWZv4g==","signatures":[{"sig":"MEQCIGZCzG1eqzs8KJEj5UlQhvRMdMhA7FTTvqu29uYJRqSWAiA+uUG9unkD1GtplwFwSqSgxd6emXTgiM5B3nvwYfTeKA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"bcd07061e2b8374ffbf32e1afd8bab805d405c3c","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.bcd0706.0+bcd0706","web3-errors":"1.1.5-dev.bcd0706.0+bcd0706","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.bcd0706.0_1700486958916_0.643500434417348","host":"s3://npm-registry-packages"}},"2.0.4-dev.b9da5a5.0":{"name":"web3-validator","version":"2.0.4-dev.b9da5a5.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.b9da5a5.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d029e24822add9f6d3a6a651c3bf86f507c9d7f8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.b9da5a5.0.tgz","fileCount":184,"integrity":"sha512-tUpXc8ek5NXC4c+zrtJqNErCSYTnJO6js3Ik4hbrztKgRLhDNaussdNXz21WkrF96hlCC6hP0gb1kuZmkxdbCg==","signatures":[{"sig":"MEUCIEflREZRKt6V17C0tQeqzz0aa9dV1dUDC8ohYaUbAQa8AiEA+HmpVyPDEH2U9uzCr/QsjPZus9qk7aPUYPci20b8R+Q=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b9da5a50d748e25d0cded92edd0393a27d6a13a6","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.b9da5a5.0+b9da5a5","web3-errors":"1.1.5-dev.b9da5a5.0+b9da5a5","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.b9da5a5.0_1700487605071_0.642164503357898","host":"s3://npm-registry-packages"}},"2.0.4-dev.6cc86b3.0":{"name":"web3-validator","version":"2.0.4-dev.6cc86b3.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.6cc86b3.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"561e74b1e5508d8cd309c55b1338590bd40b21d6","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.6cc86b3.0.tgz","fileCount":184,"integrity":"sha512-u3TizTHLNpAEh9LMQQpiyywRSLfVCgdpRBr51U4rVvRZpAiRADRrRB/QfbRPbW8fsXldtXuagWPYPEhclBfcnA==","signatures":[{"sig":"MEUCIQCXGdbVmV5v99WKTlQbfiboQnIbJ/Lga79bC1+EthJxcgIgJPGodWp7mUD8TDG4EMhG9uIbr8KBEFMOvHECxrrFZyQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"6cc86b317ff75a35330e8b30939ff46483022683","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.6cc86b3.0+6cc86b3","web3-errors":"1.1.5-dev.6cc86b3.0+6cc86b3","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.6cc86b3.0_1700491815316_0.18141798243011364","host":"s3://npm-registry-packages"}},"2.0.4-dev.ef6f04e.0":{"name":"web3-validator","version":"2.0.4-dev.ef6f04e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.ef6f04e.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5dd81df7f835d5a23bd4b54dfdfe63c6fbbd21cd","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.ef6f04e.0.tgz","fileCount":184,"integrity":"sha512-EuBpsvOMNd9GvVuBp3IbCApNP1Q4A8TQhF+HhdAQ7o1x8d8QCqYyJMyq11mG59CX0KJ+xOlGC5uUneD9CqDEZQ==","signatures":[{"sig":"MEUCIQCqLimsc+Ahx23awkTWj0c9sieMtYs+oOTSYaeHkL4CpgIgJqrtq2pgVF1LcigqBfWJKuQxK6rX/xVdEgs+eznu93Q=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ef6f04e19f4d3c4e97bf335f5339cfeb3b6c15a2","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.ef6f04e.0+ef6f04e","web3-errors":"1.1.5-dev.ef6f04e.0+ef6f04e","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.ef6f04e.0_1700500299418_0.05964306215199411","host":"s3://npm-registry-packages"}},"2.0.4-dev.be86e25.0":{"name":"web3-validator","version":"2.0.4-dev.be86e25.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.be86e25.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"8b51ca0d98cd827ce99413e1ec3e79cfcbdcd72a","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.be86e25.0.tgz","fileCount":184,"integrity":"sha512-yNICVatv7r0EDrf+NmZVoIzgeAUBEOhBLWzQ+1XrWwiU41NxKkWbLRku7FoP00OfYYiI3K8WHr2B8NwNNUyA/w==","signatures":[{"sig":"MEUCIQCpsUv0FyvErwA1pqE7C0oX8tsjU/ZPFQDSiAdWFJG2lwIgTkUkLaI6DqffSP1ZelxrfOvgG7tgEYZodhB44bACOqU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":940270},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"be86e259ddcc735da00a3715b004e1ba0bc0d941","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.be86e25.0+be86e25","web3-errors":"1.1.5-dev.be86e25.0+be86e25","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.be86e25.0_1700500988893_0.003048352286469269","host":"s3://npm-registry-packages"}},"2.0.4-dev.d8b8e18.0":{"name":"web3-validator","version":"2.0.4-dev.d8b8e18.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.d8b8e18.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"525ab264f591f810690e8ec655ecee0f27028a0e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.d8b8e18.0.tgz","fileCount":184,"integrity":"sha512-JpUB878Yu55Fq+Osid+dKm5nRtD8ZGIwWQiYWvK+UdvbdFAWkXkhjHzVK7tZ2u5SM9czOngfmpE14AgOu/x6vw==","signatures":[{"sig":"MEYCIQCCIyN7PbBky5F7/r7Z9i7qWLX8dcFWPDmt1kZO+EIrDgIhAK4e4fdt/rcAX1PLWm8aQ/uPH9Ncu4qrAnjHZ65Dqaim","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"d8b8e18f7e80ceb3dc0bfbdd9bcb7734dd1c0e94","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.d8b8e18.0+d8b8e18","web3-errors":"1.1.5-dev.d8b8e18.0+d8b8e18","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.d8b8e18.0_1700503915881_0.5874424163640368","host":"s3://npm-registry-packages"}},"2.0.4-dev.2c60685.0":{"name":"web3-validator","version":"2.0.4-dev.2c60685.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.2c60685.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5463f061a993c691021c7a072def4ddace005676","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.2c60685.0.tgz","fileCount":184,"integrity":"sha512-lHMPg36iRXYOGUMMTxxMEmHde5sYXDnKfq78fJB+WdeizcBeP7Hz6i7YcaY9DFV+sW3bvNfCYGhC6dTshfdLmw==","signatures":[{"sig":"MEUCIQC1nHmcY17nNy0D8MJzglNOglMYQXdP3xawRcPXBJir6AIgVt9XfhIwW/sr74H97fNxiy4RE9wMbk+2uJJzxWvRmJM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"2c6068571268a41a5de530f9052f1de1faaafd24","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.2c60685.0+2c60685","web3-errors":"1.1.5-dev.2c60685.0+2c60685","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.2c60685.0_1700505151120_0.06603785976593435","host":"s3://npm-registry-packages"}},"2.0.4-dev.af91519.0":{"name":"web3-validator","version":"2.0.4-dev.af91519.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.af91519.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"4d8c6706edb945dc7297f6d6dd8689c72cf553a8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.af91519.0.tgz","fileCount":184,"integrity":"sha512-IxYm9WJnc4GXeEgK1/hW3F89QcGnybkEZ7ulFYIIcVPO2Qt1Piua7DKGL895+FdYKVX4lc6Ic2nkNgMjYcppBw==","signatures":[{"sig":"MEUCIQCaLQB+u6nHxjSMT2doFqC/HzJ726An+axyb5VFypTBUwIgHgN/tEjOrFCzRuFPn4c1UBMyVBCEWvlrUQj/FDXkAgQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"af91519f7f1410721fea401b00c95c0a56f8ba13","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.af91519.0+af91519","web3-errors":"1.1.5-dev.af91519.0+af91519","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.af91519.0_1700510634569_0.9593367054019974","host":"s3://npm-registry-packages"}},"2.0.4-dev.2785782.0":{"name":"web3-validator","version":"2.0.4-dev.2785782.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.2785782.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"615a820c126ea12e40bc7ffec19a69f763836012","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.2785782.0.tgz","fileCount":184,"integrity":"sha512-vBhAEXaWpLoTaU+nHMbqV9eh6TnFolAHol2NBg1DabTFRGXOapJZyceiuoFCYaZQeM2QlQT4mDf+V/t0CAPtcw==","signatures":[{"sig":"MEYCIQCfjNzQBbqJ+jiKxY9LvMucTLSrMqPMEiPdw0yvV5NYEAIhAJJ9gUxm9LfTxMFfXLfaFFb10L0FhoS2eLiCayA4H7VH","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"27857821de056676fcd13067dcdad94b09591ca9","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.2785782.0+2785782","web3-errors":"1.1.5-dev.2785782.0+2785782","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.2785782.0_1700516332443_0.3599965230926494","host":"s3://npm-registry-packages"}},"2.0.4-dev.f8d8774.0":{"name":"web3-validator","version":"2.0.4-dev.f8d8774.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.f8d8774.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bba22af4cc542b844ba9508d726dd4aa539767de","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.f8d8774.0.tgz","fileCount":184,"integrity":"sha512-5EtkNjqnJGqbA3/bsS94/HQ957uqMAJruj/F59hYqF3F1OATSvXZAPVoJZRXaVDYSjrVwZgLnzdpZD5i0X8Sww==","signatures":[{"sig":"MEUCIDTAztr2GtFCt8vGiBwgS4lGT/G3x23iW/BU5b3CheGjAiEA8QbqRqhynrTmPvh/A+cE2eEDoL6e4h9uKCdcFVxax4Q=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f8d8774af3c2c6ab45e747b1b6e5a1e5cad811ff","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.f8d8774.0+f8d8774","web3-errors":"1.1.5-dev.f8d8774.0+f8d8774","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.f8d8774.0_1700744278180_0.4130856486528829","host":"s3://npm-registry-packages"}},"2.0.4-dev.20cc5da.0":{"name":"web3-validator","version":"2.0.4-dev.20cc5da.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.20cc5da.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"113f34be8f13849beec93a1ea1f2bae50249c6f4","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.20cc5da.0.tgz","fileCount":184,"integrity":"sha512-tWHH8EqBwUCQvulANHlYPYVrI6o0dyf/0rTmIhZ3D/nUXKdSGhLhXflHHJaP8CF/E4a/o25d7PH5vXk69VACiQ==","signatures":[{"sig":"MEUCIQCHqd+q4orjwv+pFypS38g0U0WbSjLqV8zJwAAjOq7dKgIgBI1enwrujFiPh+EagfU/zn79ZeEjysSMrmTM1Y0cKf8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"20cc5daa6d92007dfdca62fa2ec414036a740153","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.20cc5da.0+20cc5da","web3-errors":"1.1.5-dev.20cc5da.0+20cc5da","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.20cc5da.0_1700758862685_0.23461612573638457","host":"s3://npm-registry-packages"}},"2.0.4-dev.3bda14d.0":{"name":"web3-validator","version":"2.0.4-dev.3bda14d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.3bda14d.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bb8f939e9ca17d6995fa0fed5ed4c31085b203f8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.3bda14d.0.tgz","fileCount":184,"integrity":"sha512-XDC01N4j1HZ/yZMMFG/LkiCW7dQszHHM7eDhis7EydiZGxDJVslrETuYHW1kofFHrvQUyUlcCoV+71Ut3ehKmQ==","signatures":[{"sig":"MEYCIQDXafHh4GWGqTpUpwCLRZG1tCcq//butBhdU7K9WaoFIgIhAOz1TSaPzR0qIxaZq7M5nBeqqCydMu6MpvDE/TysZTQv","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"3bda14dbb330276627ef6fa457b40f13d04c9048","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.3bda14d.0+3bda14d","web3-errors":"1.1.5-dev.3bda14d.0+3bda14d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.3bda14d.0_1701105530052_0.4015851043845904","host":"s3://npm-registry-packages"}},"2.0.4-dev.e6d8c14.0":{"name":"web3-validator","version":"2.0.4-dev.e6d8c14.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.e6d8c14.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e4be5adb50645acdd03078235882b779eab4dc48","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.e6d8c14.0.tgz","fileCount":184,"integrity":"sha512-TRhz3pBEipDsH2hz0nZZUZ52ceYWpaEn1ikW5cz96NBz9gKF9P5TtjlJcB5ucx+RCv3QSk2m1MOTO6OzhsrpCw==","signatures":[{"sig":"MEQCID8/8x+PE4ZENC/1BylFZTJSpupU37WHEQ7OE/Iunc/8AiBXUu1tMngpQa/oZP26el8pv0Jnvac8C+6f+SPIJ5fBig==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e6d8c1483d33551833a64484b239fe30e2ecd1bc","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.e6d8c14.0+e6d8c14","web3-errors":"1.1.5-dev.e6d8c14.0+e6d8c14","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.e6d8c14.0_1701183890216_0.9484320321386828","host":"s3://npm-registry-packages"}},"2.0.4-dev.b3ccd5c.0":{"name":"web3-validator","version":"2.0.4-dev.b3ccd5c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.b3ccd5c.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"1db6e2d6f0f3b89116a45634e19b3e6a277bbada","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.b3ccd5c.0.tgz","fileCount":184,"integrity":"sha512-qBH35AzmOZYyYIptXxT/WOL/5oV2BBrE3vgxxXy09ZmhOlD8Zuky8+Eb7JdYOmGADAGwZ9Fg0ou6VFIrjO57xA==","signatures":[{"sig":"MEYCIQCVn5EvEkfGHMVbrc/SejGOgG5DwydaSwndTEvNifUqFAIhAKw5PmFXfqL+8P9jSm5LjyHOpBrgPc3AkUjUZKNmiXv1","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b3ccd5cdea6a4ea386513df2993f25c98b92c830","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.b3ccd5c.0+b3ccd5c","web3-errors":"1.1.5-dev.b3ccd5c.0+b3ccd5c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.b3ccd5c.0_1701202797988_0.8294738794309804","host":"s3://npm-registry-packages"}},"2.0.4-dev.7461c8e.0":{"name":"web3-validator","version":"2.0.4-dev.7461c8e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.7461c8e.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"91af8f1231d693c49bc30e92d8421993355cb426","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.7461c8e.0.tgz","fileCount":184,"integrity":"sha512-mGBgryp5CySpLBi3gsMxoPeoFa9uNU4wuBAV1PbXaFlrXYrrJ0SIfOM2vckcXlHTzxAoLLkWsQZ81OWyrJhNPQ==","signatures":[{"sig":"MEYCIQCZwH9i9x/31Gha3mXSDgy7UUBPvf6vYDkZLOk314ayawIhAOyrFMRGKjzdFMShnazsLsocElNGX8Yv4VomWShPlkEK","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7461c8e3ad03ef84a36d2460feb9894030db7420","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.7461c8e.0+7461c8e","web3-errors":"1.1.5-dev.7461c8e.0+7461c8e","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.7461c8e.0_1701440857101_0.7678999266915889","host":"s3://npm-registry-packages"}},"2.0.4-dev.119dfa5.0":{"name":"web3-validator","version":"2.0.4-dev.119dfa5.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.119dfa5.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"aadf5aabd1914aa675d405b31b66aab1263a023e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.119dfa5.0.tgz","fileCount":184,"integrity":"sha512-beI8iy3OPeK10O8Ah1EsDR3d2znGuKbllUYQ/q9M9iCaiaM8DXQNol3h1ehdUKVNZTuPq6zzSuHUbaefUwn+/w==","signatures":[{"sig":"MEQCID40+hpUlGjWNsTtNtDgJBzaTyXLbKwz+GqYp6YNH1UlAiBJVCohMrEZuUn0b9LUqS+U/6z6AOOPWc4GQXfnnJFnwA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"119dfa5b8b7f6b5b6be1e73afa21f30a386ad398","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.119dfa5.0+119dfa5","web3-errors":"1.1.5-dev.119dfa5.0+119dfa5","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.119dfa5.0_1701698308856_0.5039546786385409","host":"s3://npm-registry-packages"}},"2.0.4-dev.5aa8b7f.0":{"name":"web3-validator","version":"2.0.4-dev.5aa8b7f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.5aa8b7f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bfe18b4b3300ba5d1c568d1e72f4d83accc4b20a","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.5aa8b7f.0.tgz","fileCount":184,"integrity":"sha512-mj6eQnUq2CBnfiaQPPeFYUX4U5mvvgbdIlrknz7RxKgemu5QPhbos6n5svCd4SI8PA4lkjPfvyleuI64Di8Euw==","signatures":[{"sig":"MEQCIA6XJ7yQNFNoh4ylwGufeyfsFxn+pJHJipAhngdD9sDvAiBk9th0ud2fkrKUYPYeG60a7OkN2XL9t4Gi3n54E5LS0w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"5aa8b7fa68c6d287814daa9f0f9f444e607a40f8","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.5aa8b7f.0+5aa8b7f","web3-errors":"1.1.5-dev.5aa8b7f.0+5aa8b7f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.5aa8b7f.0_1701728741844_0.7283111041818795","host":"s3://npm-registry-packages"}},"2.0.4-dev.5afcb54.0":{"name":"web3-validator","version":"2.0.4-dev.5afcb54.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.5afcb54.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7abdd248f6a2a5fe43edf9c07e15dd14334ec0eb","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.5afcb54.0.tgz","fileCount":184,"integrity":"sha512-2N2TuYyc5iqwU6AlbYvvnMvx639CATMM0rLGdIyIofB+pC2IWpNc8LuuGy/120yJq1dWF4NvNEZDv2IwHifnnQ==","signatures":[{"sig":"MEYCIQDL+WOeff/GsZ+wI4BTn5+ZCYSx8ZgtFMGmGLTj9jrxyAIhAI/lvNavJVIN9xkTStOmlboUeUoykj0jO2otUxYrL6O7","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":946293},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"5afcb5411d35b9c3efb1f323336b7c2661328d28","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.5afcb54.0+5afcb54","web3-errors":"1.1.5-dev.5afcb54.0+5afcb54","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.5afcb54.0_1701746191218_0.7725156636043917","host":"s3://npm-registry-packages"}},"2.0.4-dev.cdd99e7.0":{"name":"web3-validator","version":"2.0.4-dev.cdd99e7.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.cdd99e7.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"6c36ac76a934bd025bf0959f1af81ca1e1e4e198","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.cdd99e7.0.tgz","fileCount":184,"integrity":"sha512-bDte2ao7UvPqLhZarhOTXO/GXBUxRstmO1gbMx1i0zKG+KrXil9ZnsXL7Ywz3Mvx5lyaulT7pGdH8LYcHo0lXQ==","signatures":[{"sig":"MEQCIBvqxsrB1UX1mN19o530WwQcd5mgNE7V5PqJ5R1H8TzeAiA7rUt+QOGnbx1Jpxuqdm5Xp0XgL4HCqXfLRyAu/T8iaQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"cdd99e7756d610019073c30de7e8ddc5974a57fb","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.cdd99e7.0+cdd99e7","web3-errors":"1.1.5-dev.cdd99e7.0+cdd99e7","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.cdd99e7.0_1701748432960_0.9410221904058365","host":"s3://npm-registry-packages"}},"2.0.4-dev.b819ee4.0":{"name":"web3-validator","version":"2.0.4-dev.b819ee4.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.b819ee4.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"9562329aa0e428243524066a21249b4675d70b08","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.b819ee4.0.tgz","fileCount":184,"integrity":"sha512-QdwFHVrVkQf+Jj71b94EHZ9DzO9DQWSENfjFESe0y/WiCoS+zUYMbIL5SG/a/06MlcPd28QDXbuZOE30bebFIg==","signatures":[{"sig":"MEUCIQDrDb+5mVHxvtJCsNQsIUo9Tikbac1UJx/OJHxDdJnRMwIgDmsqFqZsTRQEHtbuc9agnnJdz34a5JqWEBfxqumYCAQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b819ee48c114248a497c5ccf1484c265be41d606","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.b819ee4.0+b819ee4","web3-errors":"1.1.5-dev.b819ee4.0+b819ee4","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.b819ee4.0_1701772997540_0.8207915819052527","host":"s3://npm-registry-packages"}},"2.0.4-dev.f1c6916.0":{"name":"web3-validator","version":"2.0.4-dev.f1c6916.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.f1c6916.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"62f0059d21ae2e54d45c5cbe604a11b41d11900f","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.f1c6916.0.tgz","fileCount":184,"integrity":"sha512-uBsXJW40MXPJLUQ5nomp+N9+H+D6Lff5e2k2VBOjb2J4/ma3kh6IbDGMF6/iOReH8Dl0FRA01y/afOm92JPA8A==","signatures":[{"sig":"MEUCIFQsh9n6DUJF+mD2slruXVKnl90KGAZ9Jw3PUWhQjzEQAiEA5IygOS7dHSm6BNU+Kc+WQ0V2u2uAMO+kHPsUX8mQuWU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f1c69161aecb9602c46e11fe2faee22d52352d0c","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.f1c6916.0+f1c6916","web3-errors":"1.1.5-dev.f1c6916.0+f1c6916","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.f1c6916.0_1701790000700_0.39043004176286633","host":"s3://npm-registry-packages"}},"2.0.4-dev.43b11b8.0":{"name":"web3-validator","version":"2.0.4-dev.43b11b8.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.43b11b8.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5b4d17e9c0f31b62f9e3a4c6cafe76e9c2ebc133","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.43b11b8.0.tgz","fileCount":184,"integrity":"sha512-Mp7r2hR/0gP5RtzNQtBXpWr7xkPvJsD73uBBuTpwRzv6lwhXhuKqg6PVbtyhrnT134fJ39gXnl7Tf59fkhUm0g==","signatures":[{"sig":"MEUCIQCBBSmyWzdZdSIfoNxs5aJHU5LdA5xWaxdx80pxsMh6NwIgcASDGYzKnrulIGnCEUVs2/lCBg9Tmap5+bJQEBObDDo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"43b11b8a917e3044d67dd8581844c626fd55ec90","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.43b11b8.0+43b11b8","web3-errors":"1.1.5-dev.43b11b8.0+43b11b8","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.43b11b8.0_1702319786572_0.10609627817810607","host":"s3://npm-registry-packages"}},"2.0.4-dev.80c2e1d.0":{"name":"web3-validator","version":"2.0.4-dev.80c2e1d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.80c2e1d.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"19449b3e0e5f2e46530e4a6d87c2ab9518199d34","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.80c2e1d.0.tgz","fileCount":184,"integrity":"sha512-DG9v0mO5l6xln8YoYgn0B3TblmCP4TVyWvWbcr23679J3doB5UyR+5tFDFH+tY7e1JKDnSfS4uB77dL+dFFd0A==","signatures":[{"sig":"MEUCIEhwv9cKe1bkXh3LwKe1CaWRO4e4NNaT6qtrKwGY4eyGAiEA7gvlfXH2QoYcY4cgGnYdDQGzYlBI4HeQ6ZVIZUVE6Iw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"80c2e1dfbaa5aad278e980ddd46709d32fb33166","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.80c2e1d.0+80c2e1d","web3-errors":"1.1.5-dev.80c2e1d.0+80c2e1d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.80c2e1d.0_1702384976285_0.8768008621154426","host":"s3://npm-registry-packages"}},"2.0.4-dev.b35eca1.0":{"name":"web3-validator","version":"2.0.4-dev.b35eca1.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.b35eca1.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b9340fea08d4fdc3aa932a65a1bf55f5eabb709f","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.b35eca1.0.tgz","fileCount":184,"integrity":"sha512-2vmxtdItgJj+BQs1+MXWylLoP1kiA/iEZukA7qnrnR+uF4as8xVQiCc5+o3dQ7RfhUoXHis31RunFquAIfZ2Vg==","signatures":[{"sig":"MEUCIQCXNtd0wNs9qBfyjIBlUWZurAvnJyBhqwQocQkb03pHzAIgA/F8sHs3tt8IM/qfGjyPNcHpYseqNVQ3TxdKf4bnw0o=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b35eca1adb724b899eac07ad259aceb92c9cf55f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.b35eca1.0+b35eca1","web3-errors":"1.1.5-dev.b35eca1.0+b35eca1","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.b35eca1.0_1702387845658_0.4524760099618639","host":"s3://npm-registry-packages"}},"2.0.4-dev.c858390.0":{"name":"web3-validator","version":"2.0.4-dev.c858390.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.c858390.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"1c5e3de6e9c3759f472f4277ac65b5ed54c2a2b2","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.c858390.0.tgz","fileCount":184,"integrity":"sha512-YAs1bpY34/LevAbAVKI9B+N2yN/1d4yv/gh3/uUHLj2BP+mEhO79S+fRl84QAt5Ev1v7uIIA/nexsS49pjTNhQ==","signatures":[{"sig":"MEUCIQCN6fDLhrZnGBViTraqRdtXf+/wy0MxmXW83s9CdnVOpAIgZQ8gc+47urORduaqovgbS3v+/r1pzX3OaIWYDF1cTk4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"c858390c4eeb6181979d0a59e9efaab04a52055f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.c858390.0+c858390","web3-errors":"1.1.5-dev.c858390.0+c858390","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.c858390.0_1702388025293_0.9907919929399644","host":"s3://npm-registry-packages"}},"2.0.4-dev.a4f2f8c.0":{"name":"web3-validator","version":"2.0.4-dev.a4f2f8c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.a4f2f8c.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f0e7f75bab8bdbd31c9b6d46df5402cb6c7c734d","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.a4f2f8c.0.tgz","fileCount":184,"integrity":"sha512-buYsUe3EyF0mjSXYaj7h7XD8hiVCOXqcnLtyeLXJxJJP9mBB9/xxSbHCDxTUQh350YsITgPWNxFaMJmB8pSjww==","signatures":[{"sig":"MEQCIAgnsByfqsv8xBSAJuK5E9nT6ha/COI7OFgDy9AUFaI+AiBlYYImYWRLklX6obkv7L+yVusRLYd1ztAZ7pSKehI00w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a4f2f8cd284dc6ebcf615e1cae616013e6000662","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.a4f2f8c.0+a4f2f8c","web3-errors":"1.1.5-dev.a4f2f8c.0+a4f2f8c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.a4f2f8c.0_1702390367469_0.4030797163983588","host":"s3://npm-registry-packages"}},"2.0.4-dev.59fc438.0":{"name":"web3-validator","version":"2.0.4-dev.59fc438.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.59fc438.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c080e27b8909d5a39535a99972ede9498ddc675a","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.59fc438.0.tgz","fileCount":184,"integrity":"sha512-kXVACJulCUVgV9kgLqf2c27HTkRLzyacLgcmATgqrnQMxqOsWHzJJiPNiqenXCx9JQ/ICfenrLdmhekuuYmQtw==","signatures":[{"sig":"MEUCIQDfSB7uHEZjUh20K40uszaP2Ue+Wk5VfKnaEoJNP+lcKgIgH3w/hIElSUuFVmpI54b8O3Kf9uyeU4MgetRyIQKF3js=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"59fc43846f0558c4d02b67876edbf88d3a162127","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.59fc438.0+59fc438","web3-errors":"1.1.5-dev.59fc438.0+59fc438","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.59fc438.0_1702481531347_0.12008322149259176","host":"s3://npm-registry-packages"}},"2.0.4-dev.e1080d9.0":{"name":"web3-validator","version":"2.0.4-dev.e1080d9.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.e1080d9.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b9d54351eb29c6e5e94427c585a3b9d2ef947525","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.e1080d9.0.tgz","fileCount":184,"integrity":"sha512-9rm5uKGkPWVZCPEiurncc0TVKClN3BMjRlk5D53uejfPOzFWrNQBqmuQ1ObiuIh7oGKgwf2CvitEE1GrZJmjJQ==","signatures":[{"sig":"MEUCIQD3Ch0yrj7KhlqXf0qWJeaQVXQH6KXUnZYqY26M1d/dcQIgcChnJSgif8yB+Qv1QZu2vnRGLrGNOBilqaqjQeiCoqY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e1080d9169dcbbf6ff406ab8532e2a6e8aab6fff","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.e1080d9.0+e1080d9","web3-errors":"1.1.5-dev.e1080d9.0+e1080d9","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.e1080d9.0_1702488346757_0.2910502131884003","host":"s3://npm-registry-packages"}},"2.0.4-dev.e442fd2.0":{"name":"web3-validator","version":"2.0.4-dev.e442fd2.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.e442fd2.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"31e4812ad3b563a9017decc2e0bf73bd420a0f7d","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.e442fd2.0.tgz","fileCount":184,"integrity":"sha512-45KMU3tR6mPEFc9+Yohc+mPZFMsWHd+6GNAnoRcPjVOhte3FW7/4y2c6GIbJJoB0cLcdwDKiHXmOD0CFtKtFGg==","signatures":[{"sig":"MEYCIQD+BHy/gLrD5rZyGWdGNEF2otpCtCSrqcvwrCsHYfXo6wIhANNDfqfMZ7qF8Eukn5IFZKCRgfQFw2zYKuWF62Kxi5PE","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e442fd20f5467236bd01e275ed68741e1d415c0d","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.e442fd2.0+e442fd2","web3-errors":"1.1.5-dev.e442fd2.0+e442fd2","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.e442fd2.0_1702532483396_0.7664493678051425","host":"s3://npm-registry-packages"}},"2.0.4-dev.f7d9349.0":{"name":"web3-validator","version":"2.0.4-dev.f7d9349.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.f7d9349.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"545ea2cf7b202caceca4e7205fa8e90fc2af1454","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.f7d9349.0.tgz","fileCount":184,"integrity":"sha512-ifv4FU0xTvaFOks8ATO23mAIq282r3NcgRzEBF9FqzUlSkGsgXKCjzMd10yjzT848tmoa2BcYJFK7f8RYT5LqQ==","signatures":[{"sig":"MEUCIF+hChwzkbcbYS7Q0PwX5QUK/HX/eFdTUDOLO3P2yJAqAiEAjA3+c4w2Yfach3OJSTwUtmC0oO5Gm2fUOze2PMyPwPE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f7d9349d92163254146cd61b1e38a78edaab2d24","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.f7d9349.0+f7d9349","web3-errors":"1.1.5-dev.f7d9349.0+f7d9349","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.f7d9349.0_1702570152563_0.40914134783961353","host":"s3://npm-registry-packages"}},"2.0.4-dev.fa4c72b.0":{"name":"web3-validator","version":"2.0.4-dev.fa4c72b.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.fa4c72b.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"42faf3289be0a7365264d7d080472a009a37e1bd","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.fa4c72b.0.tgz","fileCount":184,"integrity":"sha512-w8XYu9IFfkgFBQc0NRhPToaLeYZV/N1p2RtTY0y5beZlkcESmhljHGg0gAd5bxb0cWClvxmJbMAQuIBjzudxfg==","signatures":[{"sig":"MEUCIQCNeJhFPaZ5/TXi1FQFJj3MYZD+F6YHtGntLmiKVxS8jAIgOerH4R7+FxtAOjtBO5Mkov28FXyPZrXWgqXGlA+icbI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"fa4c72b33f5ec7a0ca8f79f74e788a1a79b9a5d7","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.fa4c72b.0+fa4c72b","web3-errors":"1.1.5-dev.fa4c72b.0+fa4c72b","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.fa4c72b.0_1702657554274_0.3194074394082611","host":"s3://npm-registry-packages"}},"2.0.4-dev.c097b9a.0":{"name":"web3-validator","version":"2.0.4-dev.c097b9a.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.c097b9a.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7750978caf532a41522aa41cac829d4b7bf0d0bb","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.c097b9a.0.tgz","fileCount":184,"integrity":"sha512-bqP2T9K9Skhgl7EU6BrAfdaD/9J9kZVS/NahRDB6ABmT3kdIWu8FQvsgW4ws9Xz/RJQ1PN7Rw6lfgHjJm5ZMrQ==","signatures":[{"sig":"MEUCIQCsS1bnkDs4X5EH9zTjWlaQZTr9pQsb7Hh9v4rGL2IAqgIgHa08a/YeFTILw2dkmKJQil0EaA6YLycChz0hAR3hFqg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"c097b9aec99c33c48273f6566731606e79def131","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.c097b9a.0+c097b9a","web3-errors":"1.1.5-dev.c097b9a.0+c097b9a","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.c097b9a.0_1702658472333_0.9850110607451199","host":"s3://npm-registry-packages"}},"2.0.4-dev.6b2dbe3.0":{"name":"web3-validator","version":"2.0.4-dev.6b2dbe3.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.6b2dbe3.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c46e4f6d5e7c01709c12e27871f9fcc96c0bfedd","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.6b2dbe3.0.tgz","fileCount":184,"integrity":"sha512-NACCc6C171Y8K0h9oV1HVZ/yH6TmjmwjviG3RBWZNTcF0sVp8IEAn3dCyk8S6csTXyUgA99EqZ+DRLyhydtTzA==","signatures":[{"sig":"MEUCIDmoaF9gx2EHClwe/SghsGJ7PNR22MhEVN+q4KxjBhAZAiEA9/JpOvdnuUiJ1WVnpCc+vGfqky4FFVHgvlU42OU9m8Y=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"6b2dbe312edef9377b8258105b69ba44f6fcb2ba","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.6b2dbe3.0+6b2dbe3","web3-errors":"1.1.5-dev.6b2dbe3.0+6b2dbe3","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.6b2dbe3.0_1702698964377_0.13029477313109306","host":"s3://npm-registry-packages"}},"2.0.4-dev.6c075db.0":{"name":"web3-validator","version":"2.0.4-dev.6c075db.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.6c075db.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"8df6a288112007a7c391a71d99fe6a5b2cc73ff3","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.6c075db.0.tgz","fileCount":184,"integrity":"sha512-zbQlgK098W/V+BHnZtlKYY8Nr7q0CnMffFF2jqQAuhHUn1WsgMxmhTCt5R3CIfSq51e5WNMJs48j+gOQgjxp8w==","signatures":[{"sig":"MEUCIQDV40j5VSAQfkkaikZFdwQ5FSzP7t+sMKwON/c1HOT+MQIgA8HJ8Hh3KtqHuRSlsGgwUWizg4TqB3faZPoh5DEap0U=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"6c075dba3fefa27c833e5c71bf91319ac2466b0b","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.6c075db.0+6c075db","web3-errors":"1.1.5-dev.6c075db.0+6c075db","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.6c075db.0_1704282759425_0.8163994023106538","host":"s3://npm-registry-packages"}},"2.0.4-dev.f9468a8.0":{"name":"web3-validator","version":"2.0.4-dev.f9468a8.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.f9468a8.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5247fbba95391205bee98c7ebfb74f3ffe8a984c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.f9468a8.0.tgz","fileCount":184,"integrity":"sha512-syCWuCmh9fdUgs9Aoa2nmhg5EkGKZ+Hcv+BnmU3OuyTeFgahv4ZpIFoCtQdsMrFAwJgKQSjT8yJZuSb9bRJsOQ==","signatures":[{"sig":"MEUCIG9H8ZL0oV4hqA/H4AUfKHjzBpuOLnq+I5vk7zKg50iXAiEA8N40mLMn7mtc9SPK2uNPA8VpBMxTsoWRuvvWzNb3W9Q=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f9468a8af7d2a118c6db7270cd6615926d6b3c38","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.f9468a8.0+f9468a8","web3-errors":"1.1.5-dev.f9468a8.0+f9468a8","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.f9468a8.0_1704366632281_0.7930473949305861","host":"s3://npm-registry-packages"}},"2.0.4-dev.0c67cc6.0":{"name":"web3-validator","version":"2.0.4-dev.0c67cc6.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.0c67cc6.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e910dc571d00fc2ff592fe334fcdc222e2bb8bcc","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.0c67cc6.0.tgz","fileCount":184,"integrity":"sha512-5scTI4yiuJHiCWZqUJpIvmQP271msnILjG2ZMKtDkryUBvmZ1mx6vCZ+CavbEmoUbfxhFFykTCQRXmI/3AVP/Q==","signatures":[{"sig":"MEYCIQC7bZV0asPj8tpEkx2ERkpEUPaQ0XWDZ4+rE7EOZni1RwIhAMdbWCk6PnzSXklYHR8D1QIjpKPt1+YpBctmmFT2YMWC","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"0c67cc64a263d3cabc12c417908534f500ec178e","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.0c67cc6.0+0c67cc6","web3-errors":"1.1.5-dev.0c67cc6.0+0c67cc6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.0c67cc6.0_1704377718899_0.9782261907535406","host":"s3://npm-registry-packages"}},"2.0.4-dev.df594c9.0":{"name":"web3-validator","version":"2.0.4-dev.df594c9.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.df594c9.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e7b17c6ab5e50a206b65d53f1e48daf8106b2c02","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.df594c9.0.tgz","fileCount":184,"integrity":"sha512-pRaKGNhQSDTOzBSjWaQ6ebXfgGc8/+j1eClElcO7KA6g3SLPDdkJaBL0QyCoNJl1pCxyYGJLfK5Z6/kK4blSDg==","signatures":[{"sig":"MEUCIF0qTPNR6eX8sg/W8hQUqfu4zYkTrmBuSfikrGx0RX18AiEAgKP5xKafFsSdCVmtxEQ8Ov9mBbExHjZBozIQSQX+cAA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"df594c9d189e837afe4ea36edad362c15462cf65","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.df594c9.0+df594c9","web3-errors":"1.1.5-dev.df594c9.0+df594c9","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.df594c9.0_1704448685265_0.1027722021063493","host":"s3://npm-registry-packages"}},"2.0.4-dev.23d69ba.0":{"name":"web3-validator","version":"2.0.4-dev.23d69ba.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.23d69ba.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"29622f9773be9e0de96497e9e679c28e1f882614","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.23d69ba.0.tgz","fileCount":184,"integrity":"sha512-f9ruZG+YyQu/vwyQTrJNI2GSe+fulNERweY/9KKPzF8HH7lD1LtOMbFUDP9Lp5Zqxyh5U4g5Drqo09vqUA/hxw==","signatures":[{"sig":"MEUCIC7k1J1sfm26wFIN2rQWy3Sqxq1r98VvzUE8kI5yQ6VCAiEA9rYZdszBT1+ATr7XZWqdvAAs8EJWrzBfB+FQZWv3teI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"23d69baadd74bf8dafe9820641b46387989ca64c","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.23d69ba.0+23d69ba","web3-errors":"1.1.5-dev.23d69ba.0+23d69ba","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.23d69ba.0_1704474443583_0.6417870022073939","host":"s3://npm-registry-packages"}},"2.0.4-dev.65a9862.0":{"name":"web3-validator","version":"2.0.4-dev.65a9862.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.65a9862.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"436dc5fc1efcc8cf60f8b93641669ef731dbf408","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.65a9862.0.tgz","fileCount":184,"integrity":"sha512-PTdK7vF2KfqC5hd3brMmg2O393tHlfN3cKCLA1UyekuR/FE39RQD/Dj3lzxcasEhDXR5hW1kVpj9rOptSsBr8A==","signatures":[{"sig":"MEUCIC7/br5wM6HnSfhxe16MkytK8II4MdWEP9Kp0PaYPJtnAiEAvAbpmWE7oLB8Hk7t19DuVR+MbQ50lubLoq2gRzvSg6E=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":949309},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"65a986202d8d682e31162ffad2e6fe600b7ead78","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.65a9862.0+65a9862","web3-errors":"1.1.5-dev.65a9862.0+65a9862","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.65a9862.0_1704660538305_0.8952455175245018","host":"s3://npm-registry-packages"}},"2.0.4-dev.2a40b66.0":{"name":"web3-validator","version":"2.0.4-dev.2a40b66.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.2a40b66.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"559ee0687e427de3548d374caf71c8860f0f778b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.2a40b66.0.tgz","fileCount":184,"integrity":"sha512-XOnG0lcTls793GPhKu7P4qdJ6AlBmdiiR82PhXyPGfMM0lE4qZXs5Bc5yZLIbOvxeNHqC77QjJ15TVvrA+xMPQ==","signatures":[{"sig":"MEYCIQCibmIAbLDSNQThyQlawEBiwZr+b5sAJhGUZ86YvZHAygIhAP0OILt2eevoqG8zr6KaJkrIbQ19xVpmP8Y6uxrcq+iS","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"2a40b660c449b044fa7310887af418139b487367","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.2a40b66.0+2a40b66","web3-errors":"1.1.5-dev.2a40b66.0+2a40b66","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.2a40b66.0_1704705180925_0.4756322547889229","host":"s3://npm-registry-packages"}},"2.0.4-dev.b188714.0":{"name":"web3-validator","version":"2.0.4-dev.b188714.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.b188714.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"382651febe6e695c7526055cf3b2aa187be2883e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.b188714.0.tgz","fileCount":184,"integrity":"sha512-ulG91x0lbJTx4Sda6kiG/RgBcawg5721c0G7Yd7oCDtdjFSrC6K3wWH04VbDq4CRcU6lvLFnU4izB4cHbFwOYA==","signatures":[{"sig":"MEUCIQC+hZHPYhYgipE76e5TzPCd5YRbICe2eM1WWO76zq5K/gIgbmZk/ZAJVplu86snNiPOuN7I4ONmN6peFJDuUOPZ3uA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b1887141d83c92f18c13a59057602509935fcdbb","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.b188714.0+b188714","web3-errors":"1.1.5-dev.b188714.0+b188714","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.b188714.0_1704711914205_0.07121540175529328","host":"s3://npm-registry-packages"}},"2.0.4-dev.7c33cc0.0":{"name":"web3-validator","version":"2.0.4-dev.7c33cc0.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.7c33cc0.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"ec467d0541971b4c2d60bd58ad0ef81779c38d48","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.7c33cc0.0.tgz","fileCount":184,"integrity":"sha512-RjNn/69U1Umg7ew19tQrs8OtX5GUrsw60GnUBtkilLs/5DmsErclN9c5KRF/CDYy84RzxOlN1r/jfwaqEnsgnQ==","signatures":[{"sig":"MEYCIQDiAzijKbDN8T4vEIs5p4yZGVAGHifdyp3p2KvfVvq9ywIhAPGXlvSW4EGh11KtUrrRxJrTsJKkvIQJNkqXqCsVU/+5","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7c33cc02841a519b3afc9dde16051f0de44e9811","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.7c33cc0.0+7c33cc0","web3-errors":"1.1.5-dev.7c33cc0.0+7c33cc0","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.7c33cc0.0_1704724301413_0.2488651283851271","host":"s3://npm-registry-packages"}},"2.0.4-dev.cc7ff1f.0":{"name":"web3-validator","version":"2.0.4-dev.cc7ff1f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.cc7ff1f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"eba5e81d80dc0d3b4d99077857e613166f2838d5","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.cc7ff1f.0.tgz","fileCount":184,"integrity":"sha512-RaJN7DqbLkIKLdfvqwm6A2cOYIkqd9BRpYsB0DLZfR/NG6Qj28sev0fm7GJ3yjEoCqWFPqxF8FC2gIDns9t47w==","signatures":[{"sig":"MEYCIQCBCfSNYccIaklJNr3XKCTcP7Sl0jRquPYswQur7xe76AIhAJd4XZWxpb1/tfBoehK19JpW2sQQet0zFwv3SOiVkJDH","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"cc7ff1f922f41a07616e2866bdc4926cf6210a54","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.cc7ff1f.0+cc7ff1f","web3-errors":"1.1.5-dev.cc7ff1f.0+cc7ff1f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.cc7ff1f.0_1704743406285_0.7426677061151321","host":"s3://npm-registry-packages"}},"2.0.4-dev.762c298.0":{"name":"web3-validator","version":"2.0.4-dev.762c298.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.762c298.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c00efa392a82325efdbdf32fbf9c513e8ba0cb88","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.762c298.0.tgz","fileCount":184,"integrity":"sha512-CgecIMCIqp5E8LQgX0YlGAmI0hWaGIV1gsAPIkdfRq3wTdhqMD2TUARvJ3H5e9ZmxmTNqJUDm6IeMvwn14BUpw==","signatures":[{"sig":"MEYCIQDLbMhlHBgO92Mghlpr4iYg8D0gPF2PBk/te//MFfJcvgIhANsGtDezeAxDtCEkvHIuRdjEqf3FoE5LEQ/70cnv7RjT","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"762c298d395c6e94c9011c2db82339c52afc649c","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.762c298.0+762c298","web3-errors":"1.1.5-dev.762c298.0+762c298","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.762c298.0_1704791052384_0.7454305101682994","host":"s3://npm-registry-packages"}},"2.0.4-dev.3cfe56f.0":{"name":"web3-validator","version":"2.0.4-dev.3cfe56f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.3cfe56f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"604f282f56d970d51bb924e89468f4361c57635c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.3cfe56f.0.tgz","fileCount":184,"integrity":"sha512-yKbrVlMq9fIlpTLFpcD7rux1rzHQPyP4NXwHL1UymGqnZ8x4PeeD/+UlOTvanJHqlbDZ0f2nBJH3vl8rqifaEg==","signatures":[{"sig":"MEQCIFpKRGVgg4bTsaIVPMCE7uN/HVSxvAGNKXyogAT6962LAiBNJVQyjM+MPbyd1c3z04GTZe26N9RqBNTXPwFLdHxquQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"3cfe56f335caec2efa9d2604208b43e75913672b","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.3cfe56f.0+3cfe56f","web3-errors":"1.1.5-dev.3cfe56f.0+3cfe56f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^28.1.3","eslint":"^8.20.0","ts-jest":"^28.0.7","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.3cfe56f.0_1704801007474_0.3688223845735257","host":"s3://npm-registry-packages"}},"2.0.4-dev.1eb07d1.0":{"name":"web3-validator","version":"2.0.4-dev.1eb07d1.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.1eb07d1.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"1e8f63ac0d117c709ac76858cc47011342d7296d","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.1eb07d1.0.tgz","fileCount":184,"integrity":"sha512-gKgI6yQiMt2VPj4NB9cU0GrKNe4mEcciaG4xhoVk7BOpJRl9CuDzK2HLM3FSUsIATQQCmmBkT62f5cJfdOaCWg==","signatures":[{"sig":"MEUCIQCPKeykWX0NvTAQLnXM7K3y2H1cF9jxEcbzCgsGkSHpxgIgIxXtTVHa8F+PiKTEZWuGXv28C/GXTeNpWEY2HBKpxew=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"1eb07d187b8b2df43d8169ea74d566d49ff0036d","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.1eb07d1.0+1eb07d1","web3-errors":"1.1.5-dev.1eb07d1.0+1eb07d1","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.1eb07d1.0_1704828517591_0.06883207029702376","host":"s3://npm-registry-packages"}},"2.0.4-dev.a3fe342.0":{"name":"web3-validator","version":"2.0.4-dev.a3fe342.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.a3fe342.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"1a8e0be232e59a846e249717bb6f3c83361c975b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.a3fe342.0.tgz","fileCount":184,"integrity":"sha512-i3PeSzDn9rYuUbMcnNIoErQI3xopjQGxUd6c8iK+y7oR9Pf5HkSht4Q2FeIHom/gHYBUcjDQ2CQQBDXdBOzVMg==","signatures":[{"sig":"MEUCID2ruAe/PQUcy16dUHd85EEa0M7ZfvcaT1DPmwvtSoLzAiEAqE8VIoMawyDK9q2N64O34MKPS6GtXyrWhtXNf7tFVhg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a3fe342c7bb9e3ee75e95ba5c9a5c99133cf43e5","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.a3fe342.0+a3fe342","web3-errors":"1.1.5-dev.a3fe342.0+a3fe342","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.a3fe342.0_1705327264904_0.5320862926812149","host":"s3://npm-registry-packages"}},"2.0.4-dev.882631c.0":{"name":"web3-validator","version":"2.0.4-dev.882631c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.882631c.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5e78ff01b23b13bbc577dc5393ca6f1a890faf7e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.882631c.0.tgz","fileCount":184,"integrity":"sha512-Ybga0IuRncZAkw0urMqQphmEFMQgjfJWSi4uHakiLZQc2q2q5dUyrvVqyp7M/29W3BWRSH+Li0kIGzItUB823Q==","signatures":[{"sig":"MEQCIFbIyQeWxzzAkqvejI82eRFbbyWUcePEfg8H+8Y9lSRGAiB3g7IqJHr9oiQO3L9EcASCWMFOBp/8J1bdsYWoi3dMXQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"882631c2614459363d6f2bbf105a4ef22a005c48","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.882631c.0+882631c","web3-errors":"1.1.5-dev.882631c.0+882631c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.882631c.0_1705329479237_0.03986532206180904","host":"s3://npm-registry-packages"}},"2.0.4-dev.5161642.0":{"name":"web3-validator","version":"2.0.4-dev.5161642.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4-dev.5161642.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"ebca2ffb8dfdf40d52741de23e0e2308e6380bbe","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4-dev.5161642.0.tgz","fileCount":184,"integrity":"sha512-l89NES5lFBticfzpsvXTaP7vnaFeBa6gmqVVSaBkx5DEnl7At/rQ7/kngwwr31j3jTN3k8R2M5T2eZxxEWGLmg==","signatures":[{"sig":"MEUCIQCnc7bwwB4w4Uzuf0tjFSu/fnMskTZs4bmuwYzV8dE1GgIgAsjMfvqNjbBNjpnmELtG9VbaDiipR+cDOPAqofJ6T68=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"5161642f79fef653920bb46822cc3e747da4ee94","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.5161642.0+5161642","web3-errors":"1.1.5-dev.5161642.0+5161642","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4-dev.5161642.0_1705332018579_0.2660934859919182","host":"s3://npm-registry-packages"}},"2.0.4":{"name":"web3-validator","version":"2.0.4","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.4","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"66f34c94f21a3c94d0dc2a2d30deb8a379825d38","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.4.tgz","fileCount":184,"integrity":"sha512-qRxVePwdW+SByOmTpDZFWHIUAa7PswvxNszrOua6BoGqAhERo5oJZBN+EbWtK/+O+ApNxt5FR3nCPmiZldiOQA==","signatures":[{"sig":"MEYCIQDmZ6In0QqgF4OiFmR+PZ//ztiuje+biM3iMXqbnYUcdQIhAN/BeW2uP4Ohyus2/BA34Leszl3fGf/7hMt1IL4M/0eo","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952524},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ff51bd09717df37369658d383bea86e319778acb","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.18.1+x64 (darwin)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.18.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"^1.3.1","web3-errors":"^1.1.4","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.4_1705512667094_0.13147836860637585","host":"s3://npm-registry-packages"}},"2.0.5-dev.7b97011.0":{"name":"web3-validator","version":"2.0.5-dev.7b97011.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.7b97011.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bc30191b527d11abd28faa18df2243a75df59b56","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.7b97011.0.tgz","fileCount":184,"integrity":"sha512-1IZ3d+2DLV3y+fZBKYqMcwBm7mrDxkEILhtNG+l2hyvnkDAP4Wz92ko9Sx/bQUcSxTpx5VlvcfUJHCDnMe0FAQ==","signatures":[{"sig":"MEYCIQDy95ADg8YVkxq8cHwnDeaf8bg89HprSpFy6gXhZYcOeAIhAO/WzRZm9fMmp9uOMKa94Tm97waXzXrVCeFmAarFniP9","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7b97011a292f934ac33ef5b47a9201bf78507295","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.7b97011.0+7b97011","web3-errors":"1.1.5-dev.7b97011.0+7b97011","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.7b97011.0_1705513340372_0.4139818758655267","host":"s3://npm-registry-packages"}},"2.0.5-dev.727c9fc.0":{"name":"web3-validator","version":"2.0.5-dev.727c9fc.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.727c9fc.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0878cb9b98fe0f117103554ea37deed23507fe5a","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.727c9fc.0.tgz","fileCount":184,"integrity":"sha512-iNbyoIx0cJ7XY+SNmq8GipzOfb9u4xDX6tLuMdsv9fWpYXb2M8sZk6dGDYAIGD2gdNLvuAgNLGKeABVW84V8Xw==","signatures":[{"sig":"MEYCIQDFN7djdBj6gVIrO8jNjtVRN/PLf3qUJDjX01KGuSt9RwIhANdPancvkqPvMS+/duaSBxHr12B99DIe2jtqKhedhRmt","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"727c9fc36191f8d077134b54eb4c86bec45ed5ea","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.727c9fc.0+727c9fc","web3-errors":"1.1.5-dev.727c9fc.0+727c9fc","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.727c9fc.0_1705992495662_0.5174429141786687","host":"s3://npm-registry-packages"}},"2.0.5-dev.b49094b.0":{"name":"web3-validator","version":"2.0.5-dev.b49094b.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.b49094b.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c3adf1268ed02c254259dece49236a37e0c4dae0","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.b49094b.0.tgz","fileCount":184,"integrity":"sha512-HgG1q7G7prccPrurWl1UR15y6ACBuNdD0fUPsqvU/K0h1nRdSjMZO4i/FNpyTTMiDnZCy2nkSQoRXVN4CsdQ/g==","signatures":[{"sig":"MEUCIQDQbP/OAapjl/c4hn+E6WHEhpjA/R7xGnKayHw4kMusaAIgWj6Ae5u2EFv+uQMskzApb6ZyFJx1ywElRyXNWsGc2jM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b49094b953f9c9292891057e83842937cba92b7c","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.b49094b.0+b49094b","web3-errors":"1.1.5-dev.b49094b.0+b49094b","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.b49094b.0_1705996014564_0.9069430360060533","host":"s3://npm-registry-packages"}},"2.0.5-dev.028dc20.0":{"name":"web3-validator","version":"2.0.5-dev.028dc20.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.028dc20.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e738180ce2ab17046b68fc1ee6c02db42dcd3ccd","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.028dc20.0.tgz","fileCount":184,"integrity":"sha512-DuWGU22zMlgl2y5b7h3cY3c09jlOxUP501qFCpfy17QLFsXkj+B98sZHX2BejDsId+iWsy3dNQgD84ZV4bMrww==","signatures":[{"sig":"MEYCIQCR+Afo3OmTKvIBuBRX41DjJj9vMtVn1bkiFMeu6DpJcAIhAPCbLWnp7K+h7UknVWzFfhaxsn4GszWiCuNFpn0OSgVJ","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"028dc201b08317daa4072db22115137383ebe3a4","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.028dc20.0+028dc20","web3-errors":"1.1.5-dev.028dc20.0+028dc20","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.028dc20.0_1706034491381_0.6879865761847928","host":"s3://npm-registry-packages"}},"2.0.5-dev.aac2420.0":{"name":"web3-validator","version":"2.0.5-dev.aac2420.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.aac2420.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0af728abece5aefac11d548bd678bc7f5f156033","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.aac2420.0.tgz","fileCount":184,"integrity":"sha512-hhyfaWk5tR5pAzrkkJ3mzz5Kc4nl7vt/KjLXA8EMqlpz3860ao3iJyhTgLsg/CB7ndgyfhVcwV4EXLh7wbA2rA==","signatures":[{"sig":"MEYCIQDzHV+IEW8y0sVj88NFF/qj6987t+tgSLxcC+7Shn9n+QIhAKMeWL7ybfV154Iu2u5+NERpqbvi2iWoZZ7V+/P6lxTh","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952588},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"aac2420716aad410266129e4fcd3a90d1144c4c4","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.aac2420.0+aac2420","web3-errors":"1.1.5-dev.aac2420.0+aac2420","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.aac2420.0_1706121073356_0.7791661331872097","host":"s3://npm-registry-packages"}},"2.0.5-dev.7d7a9ea.0":{"name":"web3-validator","version":"2.0.5-dev.7d7a9ea.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.7d7a9ea.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0f74532c40006fb5980057c51c8ea04e824c4643","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.7d7a9ea.0.tgz","fileCount":184,"integrity":"sha512-vatdhPDEQuxoV7jvcEb/dt8garHPRelZjXmxNoy7dfuVyh9nTO23D4c4x3e7UHDfMxFBymT2hL2f/E5TgCtr9g==","signatures":[{"sig":"MEUCIAHsgH1K9w6qrl/G8ldA6UoB7dVvT3XEo/RhtggS2sxLAiEAq6/HDIOxqDgvMePsnJtqFzoOLSJDQnv6g+f2hIGt2Sk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7d7a9eac3d2f415782939fc7ba572ecbfd8e5829","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.7d7a9ea.0+7d7a9ea","web3-errors":"1.1.5-dev.7d7a9ea.0+7d7a9ea","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.7d7a9ea.0_1706524433054_0.07951896841676787","host":"s3://npm-registry-packages"}},"2.0.5-dev.a72e99a.0":{"name":"web3-validator","version":"2.0.5-dev.a72e99a.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.a72e99a.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e231021b4ef6fe10e65c016e7695a2a265d5bb5c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.a72e99a.0.tgz","fileCount":184,"integrity":"sha512-+xR+s5smtwU9crB/2cFt2Zn7Aujjo4TDM+ow7hyctU/PIC23Kf4q8sYCNea+OxA/izAe2y90fc3BAQn8wCuAnA==","signatures":[{"sig":"MEYCIQDyy5zqpfo3TuW9QzmAJmKGIgc/sCV1PKzh/kUeBdXCgAIhAOlfkncy8B5Pirq22DnsnG4jUQJseRjvhr4DUHFe03zF","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a72e99a4c3fee0069ca4bf7a8222b02ec5a60426","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.a72e99a.0+a72e99a","web3-errors":"1.1.5-dev.a72e99a.0+a72e99a","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.a72e99a.0_1706563232112_0.2188468019486558","host":"s3://npm-registry-packages"}},"2.0.5-dev.95b37d8.0":{"name":"web3-validator","version":"2.0.5-dev.95b37d8.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.95b37d8.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bd1cd29f761d043f4909afc7803b5605d5407959","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.95b37d8.0.tgz","fileCount":184,"integrity":"sha512-c75Sg3GzvIu0FCOlZgzqyjUrN92Ln2nQwusxgRO451AL1EgAtIgEAFmlDZ1dMPzTMW3yF0dARbiTMWMAHrlvKw==","signatures":[{"sig":"MEUCIDxUv/h/EZncEFfZnr2oyDvoe4OabRBlq/wacLhn403vAiEA25H7Q7INpIGOpaiDqKCPvcsYbEx/zHH+Pv+dYfn8Q3M=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"95b37d8575822e84ca72fcab53047edb2ba8c816","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.95b37d8.0+95b37d8","web3-errors":"1.1.5-dev.95b37d8.0+95b37d8","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.95b37d8.0_1706772632171_0.5965439121326499","host":"s3://npm-registry-packages"}},"2.0.5-dev.42ec398.0":{"name":"web3-validator","version":"2.0.5-dev.42ec398.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.42ec398.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"8167b2aacd4256d4d475dfb56c2b9625b6f06fd7","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.42ec398.0.tgz","fileCount":184,"integrity":"sha512-CswI1/bXi91GzR1i8wnFx/Tv1s+UAZtUoB+rn0JNNl1l/r7DC53IdODGR3WMSx9Mn5aljC5fyewslfvRgmHTrA==","signatures":[{"sig":"MEUCIQDQRuu5i44C4NMz/r7HDyRLW8k4FTaWea5UyT+eUvOUPgIgdTmu0NENknrvLRQgx1fhP4fkBaqagnspCSY5fYr9WcQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"42ec39882dbf0889f0cc62194e7056f3c4517539","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.42ec398.0+42ec398","web3-errors":"1.1.5-dev.42ec398.0+42ec398","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.42ec398.0_1706801548748_0.962649966012612","host":"s3://npm-registry-packages"}},"2.0.5-dev.e5673ca.0":{"name":"web3-validator","version":"2.0.5-dev.e5673ca.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.e5673ca.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"03465970f61e54f988fddb2a4e692f929c475625","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.e5673ca.0.tgz","fileCount":184,"integrity":"sha512-DEQyB348z846tB0TF7ay7CeHvlFeRRkBeyxfbe/f3F5e94yyjy1isIGWX0PPnxAZBkA3oc0RzQl5N0GDsulgDQ==","signatures":[{"sig":"MEUCIHZ2V1slq9tH48NdAXD2/k+dirU4vl2FCskrhifgAheiAiEAikxraGf/Bnjm1GEN0dA2aaQV8bMNeOGgke6OTXIkmBU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e5673ca4e42cebc16591cbe889566e91b39997af","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.e5673ca.0+e5673ca","web3-errors":"1.1.5-dev.e5673ca.0+e5673ca","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.e5673ca.0_1707147025287_0.04069014545305638","host":"s3://npm-registry-packages"}},"2.0.5-dev.a6b685e.0":{"name":"web3-validator","version":"2.0.5-dev.a6b685e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.a6b685e.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c9836042ed18b8a53de7c8e010a0414b939ef976","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.a6b685e.0.tgz","fileCount":184,"integrity":"sha512-eW+tkOxRE1lMmypx2n4dHVauuwQINf5TcabwSzSG2EXIiI6e1iilNinrxULyC91eTzibppyjJsv630SUAuqiUA==","signatures":[{"sig":"MEUCIQCR9S238+Hczu6vSnI/upnV0epaXL4HPfHioJPfAKrVjgIgQ3ORV9u+qc3OPurqNOh2M9Y8L4v9pmxfUBBFBSsPy3g=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a6b685e207301782374016b543a64d6efe74b6eb","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.a6b685e.0+a6b685e","web3-errors":"1.1.5-dev.a6b685e.0+a6b685e","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.a6b685e.0_1707147448115_0.13859699793514468","host":"s3://npm-registry-packages"}},"2.0.5-dev.ed1460c.0":{"name":"web3-validator","version":"2.0.5-dev.ed1460c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.ed1460c.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f6f3a6a866b28735d9588b1b2b49717902de87a2","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.ed1460c.0.tgz","fileCount":184,"integrity":"sha512-TNf+XUPWNy6oXNrKy2F08psoWytJVqaKXaNeKRcbxTCQBtRzAGAkwozWTF1HnI2zHoULxTsK/ng2ui0/SKSU/w==","signatures":[{"sig":"MEQCICJMHZLY+TBRyOWqzk1cymfDK4RKBUWKiVmjGi86L6OTAiBrzqQTL4I1z/Gn64VMB0NKeXV+paoIcKApWSNQLbJV6w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ed1460c087995c14e04da24e2188c9514d6940ec","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.ed1460c.0+ed1460c","web3-errors":"1.1.5-dev.ed1460c.0+ed1460c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.ed1460c.0_1707252377199_0.008612763077939567","host":"s3://npm-registry-packages"}},"2.0.5-dev.998954f.0":{"name":"web3-validator","version":"2.0.5-dev.998954f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.998954f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0cb3c21828c52d4736ee5fed5e24be240c406611","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.998954f.0.tgz","fileCount":184,"integrity":"sha512-sLLYXD6PYFmzOmaXYx+/LIqYO2HcaGLw1n/z1hbaFCihH5MIeumQ61WZT1qwukZB+S0N3sxGWw4YGs6Wq4/ffQ==","signatures":[{"sig":"MEYCIQCMYPOgj7cLn1W9Q1az11JnaxXQP32yIYmAjP8b831luwIhAOv5CC+EFNZTH/zs1hdugJOwmLBZlT9AtJ1DZXU4j2fR","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"998954fff82e2b422eadca86da08072e76c4e2b2","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.998954f.0+998954f","web3-errors":"1.1.5-dev.998954f.0+998954f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.998954f.0_1707318588954_0.322550021741149","host":"s3://npm-registry-packages"}},"2.0.5-dev.0881fe1.0":{"name":"web3-validator","version":"2.0.5-dev.0881fe1.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.0881fe1.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a09424d0bbd479c695d53011c812e1226024e6c3","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.0881fe1.0.tgz","fileCount":184,"integrity":"sha512-P62BxhgpNUCrVbrJTN/bqRWrmfATM8E+wIXWtycLNxmVZbEz6w4Q/zrYBbSNvZPXSfjWUWWD5CK+6gF1TpSbyw==","signatures":[{"sig":"MEQCIA1fVkHBsEQD1fgHdCzBl63DN5s59T7AcktdOcx85OoCAiBV6YME1FvDEFeP1GcDmkXUIaq77gYVInP4J6RPI2tYLw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"0881fe1be31fdf6763b32d8b9ab2ce1f4b0fa83b","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.0881fe1.0+0881fe1","web3-errors":"1.1.5-dev.0881fe1.0+0881fe1","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.0881fe1.0_1707399689956_0.45865048907615247","host":"s3://npm-registry-packages"}},"2.0.5-dev.0a8f9e4.0":{"name":"web3-validator","version":"2.0.5-dev.0a8f9e4.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.0a8f9e4.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d12ce8d45e35c88ea46689630938207c0873978f","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.0a8f9e4.0.tgz","fileCount":184,"integrity":"sha512-YfQVaSF9349qWkCDci74cUn614Td7pcmxgxL1Se7wpsJ/CerFPsRVPeNZwIvjq+F2Ve9P2jm3wJf5c+tSsyhPw==","signatures":[{"sig":"MEUCICWAEphyudevaN8Gwgv4qCCK2H5rOAbe8hvm2U+/tE+cAiEAvnROQnWmhTP3u5GCU4JMFQ+hxg5HaOm5GHIXgrmim6o=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"0a8f9e42f1ad8c5d8bf28ce487c90b425a2f1ab0","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.0a8f9e4.0+0a8f9e4","web3-errors":"1.1.5-dev.0a8f9e4.0+0a8f9e4","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.0a8f9e4.0_1707403242353_0.7114153315012801","host":"s3://npm-registry-packages"}},"2.0.5-dev.9f31612.0":{"name":"web3-validator","version":"2.0.5-dev.9f31612.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.9f31612.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d8f3bc1f930bde9c919606c9d96d1a9b437c2a45","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.9f31612.0.tgz","fileCount":184,"integrity":"sha512-gN3vi89hTxa7lg2wT4+/MhOAaysLesOsko1DXr7Kb7hTr+ouqrfAQOrl1A3qGzBZhnymjd8burgTsWp1Fb63zA==","signatures":[{"sig":"MEQCIGBZHMyx4/9gNPF8EsOM1snbcTYBC9wO9cyIFl75RYPEAiA5egxORvdGN+wRaUQjri0/qrI/OSYhEx9QKaIQLwV1ZQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"9f316124ee25920af74255a4c16eea970509fb6e","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.9f31612.0+9f31612","web3-errors":"1.1.5-dev.9f31612.0+9f31612","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.9f31612.0_1707409619296_0.8872189231161234","host":"s3://npm-registry-packages"}},"2.0.5-dev.6da7379.0":{"name":"web3-validator","version":"2.0.5-dev.6da7379.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.6da7379.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"503c7b5eb414d47e5571d4887ccad00dfdd090b1","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.6da7379.0.tgz","fileCount":184,"integrity":"sha512-HHt7Fb432/rVK9r29SHoax6RqBDB4760dni3Y08Ebyojm1ohC4hcl31wRh+J9YyuJJGaKt0Li+3su4MqAJ6oWg==","signatures":[{"sig":"MEUCIQDHfqW1M4VSOPhWTVVkLgZcztAttiav00g6Jh0J5C/xyAIgFuKJVnBTVTEEuemjnc1IC3Nkx5x38qhy28CbVJXUm0c=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"6da73791549ac6d84f343a21a565af20cca55858","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.6da7379.0+6da7379","web3-errors":"1.1.5-dev.6da7379.0+6da7379","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.6da7379.0_1707482357654_0.5795956657021659","host":"s3://npm-registry-packages"}},"2.0.5-dev.d8b64a8.0":{"name":"web3-validator","version":"2.0.5-dev.d8b64a8.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.d8b64a8.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e547dd53e60792f130f24784dc90fb5ddcd7ccfc","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.d8b64a8.0.tgz","fileCount":184,"integrity":"sha512-rM4Txf5FYxgj4vyQsAQ65OozJXW5CH31dWRCqt+wTelN0n68+TjBDOU9WN3UWQ/vf9d6xf/TbrR5YmrjUgH33w==","signatures":[{"sig":"MEUCIQCbnQqFdiKs3wATJ2+zxhVwru+aVd1S6irZwjBTdW34ggIgPcd1MsGpLi7JeZp0gpqi0VdeWxEWDsp3VinSX6SNakI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"d8b64a831defaf52a302002ce6e6051f32edaaaf","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.3.2-dev.d8b64a8.0+d8b64a8","web3-errors":"1.1.5-dev.d8b64a8.0+d8b64a8","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.d8b64a8.0_1707495216362_0.9880948930918105","host":"s3://npm-registry-packages"}},"2.0.5-dev.9d65c38.0":{"name":"web3-validator","version":"2.0.5-dev.9d65c38.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.9d65c38.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a9c97425de15e1b8fadaab78eeca35215137453c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.9d65c38.0.tgz","fileCount":184,"integrity":"sha512-pPCuv29Hk9DQpVkAcjPCnSkkt3oQpnBAITA5vyuLxFlRNJbqMsYzj1bziO56piffIZDx/ORCM4jHIPCvldoqKQ==","signatures":[{"sig":"MEUCIHQ0V2LliS3zaJxTyBGVL+FQvqdJH6WVKtiZzKWQzP3/AiEA5oihM9hhsG/L2YQNVe9C7ah36WYwfEguK0odUVmNCt4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"9d65c38506e405bc029a0e9f0bbd9b3f51d1ef7b","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.9d65c38.0+9d65c38","web3-errors":"1.1.5-dev.9d65c38.0+9d65c38","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.9d65c38.0_1707746424040_0.14382318904258207","host":"s3://npm-registry-packages"}},"2.0.5-dev.a0d4d2e.0":{"name":"web3-validator","version":"2.0.5-dev.a0d4d2e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.a0d4d2e.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"442efc4e6deff059f877d1e0e5d22d65c5ea9b99","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.a0d4d2e.0.tgz","fileCount":184,"integrity":"sha512-UVLWSXRr9NX78L82soq+uJhdn72MWoiW3qCBuq4Mi0bmL++TCZ732PfDTLPYwiSi2xzcWDCsIp9R9mtpLLKXuA==","signatures":[{"sig":"MEUCIQCltxMNuv8GSUeWp9E3XY27dLgNwFCgJE3cc5MvzlkYOwIgblwiNgJwJNNBOEmjxjCEO5SJ+sggfyUchzCKC5qCLgU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a0d4d2ea10f2269f61f364e1d5451d44b738c2b9","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.a0d4d2e.0+a0d4d2e","web3-errors":"1.1.5-dev.a0d4d2e.0+a0d4d2e","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.a0d4d2e.0_1707747960825_0.48128341388996465","host":"s3://npm-registry-packages"}},"2.0.5-dev.9023511.0":{"name":"web3-validator","version":"2.0.5-dev.9023511.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.9023511.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"1a2bca90af371f2246ab3cae18649d92423ab6cc","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.9023511.0.tgz","fileCount":184,"integrity":"sha512-fHZ9pvzEenWf3zFiSq8TbNLHLxZIvBfX7JuBzcuYDuB9FIXZsGbtTx9BIdMusVpkhPhL7U3+iULtVUXS9/OaOw==","signatures":[{"sig":"MEUCIQCmgFI5qarr986guzO9Ytt0xnq3uT/YLfWkwjmxVH49kgIgI+dd9MlusPqfPUw88jMSPD32l6SRMOuhxZ0yQk0P4Jg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"90235115610d4ab28c8959eb0ad0757f0aaee081","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.9023511.0+9023511","web3-errors":"1.1.5-dev.9023511.0+9023511","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.9023511.0_1707755614875_0.6312065285122239","host":"s3://npm-registry-packages"}},"2.0.5-dev.e774646.0":{"name":"web3-validator","version":"2.0.5-dev.e774646.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.e774646.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"64d2385d4a209f8ccbcaf4183399ee31aa2151ea","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.e774646.0.tgz","fileCount":184,"integrity":"sha512-QOgzy7BslvtS+CAP3Aqm4/qW8WVtIy4Y9jev7INj82wPTtS6JAyD1//CdslLyowpyAmzsXThqXIPHDx7GQy/Jg==","signatures":[{"sig":"MEUCIQDEVjs12BUYIP7HrF8zI5PxaQSJnPj7bX81UyVy8R3p9AIgIDiTTj6ntzgIeM7Cihz6jIC/lE7qrXmnhTkullDJo7I=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e774646b32c2c090e6ba0886e43e27feba3e865e","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.e774646.0+e774646","web3-errors":"1.1.5-dev.e774646.0+e774646","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.e774646.0_1707903950597_0.02500410551614185","host":"s3://npm-registry-packages"}},"2.0.5-dev.f696e47.0":{"name":"web3-validator","version":"2.0.5-dev.f696e47.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.f696e47.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"8115829305f3badf69fdd31f7bd696b5ae9171d2","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.f696e47.0.tgz","fileCount":184,"integrity":"sha512-ajBW8xiaKqTDlzM1KdI73OwzKE/R8q2PcaVuag3mC8HpEc2vWxtG77V1nYAxRRiV+yYOzAjBFQ2xZRi0HGV6VQ==","signatures":[{"sig":"MEUCIEdHaAYbxvkS/DN5EJTS6V3M9yuW7meJLtX49iSJmpl5AiEA5U7vXj5Iulq8tIDODex8D3rq+GllDvheFF4cOU990dY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f696e47b89d6613dc3a254ec5449f3ceeacf3cd8","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.f696e47.0+f696e47","web3-errors":"1.1.5-dev.f696e47.0+f696e47","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.f696e47.0_1708012453601_0.31250014189578623","host":"s3://npm-registry-packages"}},"2.0.5-dev.ec65468.0":{"name":"web3-validator","version":"2.0.5-dev.ec65468.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.ec65468.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5195d099a516e1f982c6c523acdb6ff32eac07f2","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.ec65468.0.tgz","fileCount":184,"integrity":"sha512-CDBIoyBvkl7JiXdMK4smZCNQ85tnl+YIW6xiIQr2EL3KZnB9WFq0FevmObvheZS7dGGHcmsMQhF6bj5pR/JCKw==","signatures":[{"sig":"MEYCIQCV080IaTeGE0bL0uCMv6ls4CHC5U6RAYd+/Qr9HKlLzgIhANaCu9EHOjIK4vn6F+9gYVJQe5nN/NG3kTQ40n09kszP","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ec6546865dfae74af5797a2864b768bf48c9911e","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.ec65468.0+ec65468","web3-errors":"1.1.5-dev.ec65468.0+ec65468","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.ec65468.0_1708103916947_0.6855922264808711","host":"s3://npm-registry-packages"}},"2.0.5-dev.c5cecaf.0":{"name":"web3-validator","version":"2.0.5-dev.c5cecaf.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.c5cecaf.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e332dac54656af5b8c7064922b4bcfbeb57ce2ab","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.c5cecaf.0.tgz","fileCount":184,"integrity":"sha512-yvZ54U0Arqm03w1bqyCcUBH9TGrfUinE8HOIN2RQsIC2v8g32OK0qTbTo9eY9x0J7OQEaKP5WmRDkvS0X2jKVg==","signatures":[{"sig":"MEYCIQDZria7PRR2Kq6F1IJfLrTC58xEGmxvt9jp2c434vzZZAIhAO9tuDXSPpSOXNRvClP1OkfFmIXsvuKFMd8rkS77mlgM","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"c5cecaff543dcdc2946b9759c49e1383bcf8e5bf","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.c5cecaf.0+c5cecaf","web3-errors":"1.1.5-dev.c5cecaf.0+c5cecaf","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.c5cecaf.0_1708346639128_0.6606925907707137","host":"s3://npm-registry-packages"}},"2.0.5-dev.a2d9cb4.0":{"name":"web3-validator","version":"2.0.5-dev.a2d9cb4.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.a2d9cb4.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"9c1765c71de7824919463031648d8de9713b12c0","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.a2d9cb4.0.tgz","fileCount":184,"integrity":"sha512-fLBfz022leQR7kJRD1gfTQIuqv4j6gRERXrp4L9EmRm+H1RA0SEYl0FTl2kR6LjKfqxliRQu5/bkA5Aj+Q2a6Q==","signatures":[{"sig":"MEQCIGq5Y9KBwbzGKd8GPQq+B1OX2mFe7/vOQAKV9DWZ1K/9AiBJUdoRsAl+WB22fAP2CI+C+E/TeJ7U7pNLbY/3WulVRw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a2d9cb4550fdee8af1a26ff2e5c8ab557241bb61","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.a2d9cb4.0+a2d9cb4","web3-errors":"1.1.5-dev.a2d9cb4.0+a2d9cb4","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.a2d9cb4.0_1708346666091_0.5315786849700741","host":"s3://npm-registry-packages"}},"2.0.5-dev.95807a6.0":{"name":"web3-validator","version":"2.0.5-dev.95807a6.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.95807a6.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e57bcce1e0ff432b4a5ff68470f36248e5a42a73","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.95807a6.0.tgz","fileCount":184,"integrity":"sha512-Rq6Hu8nCYS22OqUoQh7iw0mXXqRHBGczF2Fk4dYbODvIJnowYRF2nJYXwxdZpbQmVPx2zp5jFindnPpe4qhrkA==","signatures":[{"sig":"MEYCIQDKBZIcaoY2nSKbX617DwvyYGZhP7R1/Fs+1cgHc1PBIAIhAKzaFmnkzpNPyOtdXOmo65d+TvIoQUhX1m9k1p5oZyf2","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"95807a674e9c6c1c1157fe00d84361fc18d79339","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.95807a6.0+95807a6","web3-errors":"1.1.5-dev.95807a6.0+95807a6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.95807a6.0_1708349012544_0.9534582702604943","host":"s3://npm-registry-packages"}},"2.0.5-dev.afece40.0":{"name":"web3-validator","version":"2.0.5-dev.afece40.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.afece40.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"2daa5009c6f0dec17a81f44e21d317e8cc85258d","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.afece40.0.tgz","fileCount":184,"integrity":"sha512-VdCzES09Ch0ZoWQvOZaooEY9vQlgfgklNA+Au68m2FZX+UbJbfRL8CUNYxBt4GMKzsM++xCGEBJsbJ4gdk21bw==","signatures":[{"sig":"MEUCIQDxKKaWo6JJpqtk7aaLOxtcrF6kOOMi5DmufpLZdlTCbwIgLrHDLM5Q5Mb1I34ssnXZ5P6akasb+KH/il9D5LAyVns=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"afece40cae2afe14605b4793241c13d188beb678","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.afece40.0+afece40","web3-errors":"1.1.5-dev.afece40.0+afece40","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.afece40.0_1709044060600_0.7224462907047913","host":"s3://npm-registry-packages"}},"2.0.5-dev.cf4b93f.0":{"name":"web3-validator","version":"2.0.5-dev.cf4b93f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.cf4b93f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"4586331acbaf3deb5238b2748ca43bb8c7973fa2","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.cf4b93f.0.tgz","fileCount":184,"integrity":"sha512-vPxX+Zk9hpOsMiHJ5u+H0TjhHwfuF+vMkcO5oscfLUCJBkMFtsv7DVJQMnIemhcDEtFMVC+/tXjFchVopbSIbw==","signatures":[{"sig":"MEYCIQCB/8hdautBV1kKRtLkFYmF9i4VqSmkAa0kA2S7sORvKwIhAOmxcIfab3IJapFzJIXUUxmUA+wqTuZuB9Rz4hiVpxt0","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"cf4b93fcdef1ccc1e409c90b04ddfa53ef2206a2","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.cf4b93f.0+cf4b93f","web3-errors":"1.1.5-dev.cf4b93f.0+cf4b93f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.cf4b93f.0_1709044977137_0.48650559398198157","host":"s3://npm-registry-packages"}},"2.0.5-dev.b4c92e1.0":{"name":"web3-validator","version":"2.0.5-dev.b4c92e1.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.b4c92e1.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"343bba5da64c9c89c6b6106e6e0546b399b74113","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.b4c92e1.0.tgz","fileCount":184,"integrity":"sha512-v4EVbDuNzxcHBhLwgebwfnE4DfhrQPmrJBF00o+GV8u+UpBIcrp3cxz6lQeJglwvL1yAXjkLnpMigHDcgxDT2g==","signatures":[{"sig":"MEQCIH8nTNpKV7lc13FnZcTcDJlGpETqUfoxQdLOL3FywC/gAiB+37GJRquJvN9JXLdIDqFlA3mtZM7r12DpqpKUrd/Zng==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b4c92e1453caf63e7f4dcbfbbc3d7acfefcb4744","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.b4c92e1.0+b4c92e1","web3-errors":"1.1.5-dev.b4c92e1.0+b4c92e1","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.b4c92e1.0_1709045891308_0.2610153351036735","host":"s3://npm-registry-packages"}},"2.0.5-dev.86447cd.0":{"name":"web3-validator","version":"2.0.5-dev.86447cd.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.86447cd.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"4fcc1458e50b021e60296fde6752f64cba0830b9","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.86447cd.0.tgz","fileCount":184,"integrity":"sha512-UND3D/fE7RjZEh/mZLrqOLXfwVLwwAqf8UHhXscABSlkjBU45yf5T4MPcixOX9NokaAQ53fS3j4ay9yZsgDybQ==","signatures":[{"sig":"MEQCIFcBqLYHwPEiHThxU4wqThfJ6UiL3VHwcpkgZJYy1cJOAiA8jqWHnSubdsxzCUCU1Ma26ZHX4rJxm2lu8WdwNyAU2w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"86447cdc5b2b04e1d648dfe315b7723c62695690","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.86447cd.0+86447cd","web3-errors":"1.1.5-dev.86447cd.0+86447cd","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.86447cd.0_1709048415997_0.6767276108532203","host":"s3://npm-registry-packages"}},"2.0.5-dev.35cb1b8.0":{"name":"web3-validator","version":"2.0.5-dev.35cb1b8.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.35cb1b8.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0ed056426d445922ecf1e34631a365d0ddcc1c9c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.35cb1b8.0.tgz","fileCount":184,"integrity":"sha512-UWv2fXTVN+d1TttnO9TrBFPwqLtC1iHR7R/QspAo2L0dfwyGwEaQCoLSMd+Y2QsmPXscD/a3xpFPu6j5D6a4GA==","signatures":[{"sig":"MEQCIBzqcKTcJMeZulh8GbXAA0gKuKBVCxQnDzRyCfRzeKlNAiA4KblfT/IKk2miYfI4FBp2IVMhKph0LzVcPSTOXbAR8Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"35cb1b86d3b7ce2597046f1ca819ba2dd3ae61ff","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.35cb1b8.0+35cb1b8","web3-errors":"1.1.5-dev.35cb1b8.0+35cb1b8","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.35cb1b8.0_1709112480432_0.13391098300671134","host":"s3://npm-registry-packages"}},"2.0.5-dev.b25b883.0":{"name":"web3-validator","version":"2.0.5-dev.b25b883.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.b25b883.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bb73d8bb1f42a7a8a4841d46173f581664a019df","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.b25b883.0.tgz","fileCount":184,"integrity":"sha512-tv5tcvD7l2GxuhZE/oC5DnjjjdEtOYeH/kTozulZCqsxQi6ynXBqOGELL9k8QXWMyPRhc2wtsZyb3TwfBdcX5Q==","signatures":[{"sig":"MEUCIQCZiX+KHpBKlzpeb23Sas7teZEw8Afi3PHJ+6GTbibjhwIgDmVIrjjqDtthWvw5qtJyT4a4cMmOdYfv+ZISWVZ0Zrg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b25b88355a5cdfe20ca8c46c54dd0385e4c5adfa","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.b25b883.0+b25b883","web3-errors":"1.1.5-dev.b25b883.0+b25b883","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.b25b883.0_1709137614695_0.08031546909810561","host":"s3://npm-registry-packages"}},"2.0.5-dev.ab1b250.0":{"name":"web3-validator","version":"2.0.5-dev.ab1b250.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.ab1b250.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"89442c5886df175f3ad81c2eb522fda9dee2631b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.ab1b250.0.tgz","fileCount":184,"integrity":"sha512-nrJRm3eantOAQbn0jTyVsSsbEARkiEwmIWX8QxGflGmvHZEP0Lu8GdyPtgJk3b6emWB5JLVDa7Mo9HjDW4h6JA==","signatures":[{"sig":"MEYCIQCo9PrGleOy5F/Lj4R5+LFp4jr0yXu6tqcnjECzbM6OhwIhAOIdZAbRILrCi9u3NlC2TiiutumeYwryrOswgvoJQVHE","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ab1b250624504bff46cfce4bdc87b77c160528ec","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.ab1b250.0+ab1b250","web3-errors":"1.1.5-dev.ab1b250.0+ab1b250","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.ab1b250.0_1709138620387_0.8237249806871572","host":"s3://npm-registry-packages"}},"2.0.5-dev.0e59f28.0":{"name":"web3-validator","version":"2.0.5-dev.0e59f28.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.0e59f28.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"39c0d6b7a3d83336a0e4270c560588b46bc36df8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.0e59f28.0.tgz","fileCount":184,"integrity":"sha512-mlBKAn6Kll9FNaS17UnmjgHTudvhJlvoZI3oZsYvgDtLnTPPROrGKMsZBvBBnRCWkVZbXwQS/FWPvcaLtUfwRw==","signatures":[{"sig":"MEUCIQCtZdb0MGupKjAI7arx8MJPK0MTobI2asq9T8UgDe4bhwIgIAJbUf1kPfnH/o3EioDNouYgXjHVxIWg07NdWy+XtxA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"0e59f28b2fc046836aa1774ffc3e1faec6fddf07","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.0e59f28.0+0e59f28","web3-errors":"1.1.5-dev.0e59f28.0+0e59f28","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.0e59f28.0_1709229325307_0.5567185960039436","host":"s3://npm-registry-packages"}},"2.0.5-dev.bd6cc71.0":{"name":"web3-validator","version":"2.0.5-dev.bd6cc71.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.bd6cc71.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"76a2e90147e2578b83137d25015098442356c3d9","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.bd6cc71.0.tgz","fileCount":184,"integrity":"sha512-5gv9YbTL12BVqAS6Pu+hT6zqAeRcS5UQoMgAOkF5CN1WrQZyKd5wd+lemcKL83BH/2Mq5uyfCwWgx4XvndHYdQ==","signatures":[{"sig":"MEYCIQCg84JXdRuP+0U57bpwsIXCZNfamXX/xIQzvq5YZYoEAgIhAOpNVQz6PujP6HyS1q5jzU2UtDTsa/xR26kp6xSHgSn+","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"bd6cc71cda1b6660bd28f9dd35064b7cd49003bc","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.bd6cc71.0+bd6cc71","web3-errors":"1.1.5-dev.bd6cc71.0+bd6cc71","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.bd6cc71.0_1709327657498_0.5259718707659942","host":"s3://npm-registry-packages"}},"2.0.5-dev.8ed041c.0":{"name":"web3-validator","version":"2.0.5-dev.8ed041c.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.8ed041c.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"6582505265f9199abf6bc064a24801cdb201086e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.8ed041c.0.tgz","fileCount":184,"integrity":"sha512-XnvicU4ixEUih94KBFq/F04tag6I1yrOLa5Q6HieUOst8RBRXaikI9h2tx85RH1H0RduGT8nWnTiPBPvPvTZlA==","signatures":[{"sig":"MEUCIBXSWMfm+T9GGOUjuQf2vsxp2/DUdiH/Bam9jID/p5PnAiEAu3bPXGpc2kRNh3feavZ+rHBrIYcif2god6Zr5tXobQ8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"8ed041c6635d807b3da8960ad49e125e3d1b0e80","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.8ed041c.0+8ed041c","web3-errors":"1.1.5-dev.8ed041c.0+8ed041c","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.8ed041c.0_1709653169068_0.2876024677382072","host":"s3://npm-registry-packages"}},"2.0.5-dev.ca31f6a.0":{"name":"web3-validator","version":"2.0.5-dev.ca31f6a.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.ca31f6a.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f84e0ea53deb4bb702f18ffa2ad12e949cefde93","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.ca31f6a.0.tgz","fileCount":184,"integrity":"sha512-rBAZDZhVUZNU7NTXmCdUNgZbTzqItRGxUT97Lu99RfxYuhJXoL24MRX8eDRx1fP8WMi/Zbizn92w6gSVRyMnzQ==","signatures":[{"sig":"MEUCIQCY9kCIEBH/nK3wUVy128zVYMu57TJaQTntYKgpELzZNwIgMqkC9wfPIAXYSVk3FzBJjEoprhgt+gfQ+jST9Ou8pwo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ca31f6a264a51f2c522e085c2d19c116fe9dcc06","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.ca31f6a.0+ca31f6a","web3-errors":"1.1.5-dev.ca31f6a.0+ca31f6a","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.ca31f6a.0_1709658279240_0.6391145977760659","host":"s3://npm-registry-packages"}},"2.0.5-dev.040d3a3.0":{"name":"web3-validator","version":"2.0.5-dev.040d3a3.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.040d3a3.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e8c09a7b0ac5406e36a30d51c1541710c2dca760","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.040d3a3.0.tgz","fileCount":184,"integrity":"sha512-zj/iub7iboY2D1dWR7ygKQ63tu4YXJHY8DKhYdwRY+JXD7JaA3B1CH266gvy79ON5/4+ftEBEk3fE8EvOGSdmg==","signatures":[{"sig":"MEUCIH26LhtNi9ctJ69On0UqTEotGLA1hmL9G7ZoVQNyUN5NAiEAjYdEHl763BNffEGxmdTB+nY1+DFhNcmwZjyCbFFVzeY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"040d3a35e569f47d35a287346451ded4b08c7bbe","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.040d3a3.0+040d3a3","web3-errors":"1.1.5-dev.040d3a3.0+040d3a3","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.040d3a3.0_1709737478831_0.5139371114751543","host":"s3://npm-registry-packages"}},"2.0.5-dev.edf3164.0":{"name":"web3-validator","version":"2.0.5-dev.edf3164.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.edf3164.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b2dc93a61e7136cfd92432324e5cfa855fee569e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.edf3164.0.tgz","fileCount":184,"integrity":"sha512-csyUiwlAIW0ZE4fQK1pHMxYeTuvo2MUa7wtpSEu10AfhS0Sxg9RCL2rgX7oJh2GOVf19bWmrB/eHY+SZacwKBA==","signatures":[{"sig":"MEQCIClVeMAq8Dt/gkn/uEeucmzETcODVkytX9EFEb6idygTAiArKbseodY1Fe8FozQ7pamUCiZeL00/02mubpETDmX75w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"edf3164b89dae889a315d87553b4522bf95aaf49","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.edf3164.0+edf3164","web3-errors":"1.1.5-dev.edf3164.0+edf3164","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.edf3164.0_1709801640429_0.9459946511627608","host":"s3://npm-registry-packages"}},"2.0.5-dev.cf60f71.0":{"name":"web3-validator","version":"2.0.5-dev.cf60f71.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.cf60f71.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"bb86f44b6545d0ea79c1ed6b26e6b4283f0a63e4","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.cf60f71.0.tgz","fileCount":184,"integrity":"sha512-kYaoxbg04CtAFjoOa0kYQ5WSYMx6/99tGIbaQZY0b1m4xgIeEmK159S8etk7IlbnXIBHVNuimb0FgcnIN94k1g==","signatures":[{"sig":"MEYCIQD86ndRBMknNV3Em8Q4d849Ida/a7mcsJLzcJFwrCpm/AIhAPkLHKit7rbdw1qbwLvRzhzLNp/BM0P1Gva/A0OsYOfw","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"cf60f713170781305f8094b18b4248aea1b1437b","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.4.1-dev.cf60f71.0+cf60f71","web3-errors":"1.1.5-dev.cf60f71.0+cf60f71","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.cf60f71.0_1709813228800_0.8464271538678672","host":"s3://npm-registry-packages"}},"2.0.5-dev.e383ae3.0":{"name":"web3-validator","version":"2.0.5-dev.e383ae3.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.e383ae3.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d97f759a8b1e1357341701f7f64e16ceb8c2f55f","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.e383ae3.0.tgz","fileCount":184,"integrity":"sha512-iusa3IeWPt0fc7ithKFST9HHIJJmdOX1dDBfol9TxJ+UcrwLy6GYb734YnYLFiHcywkRyKxBvM6Ol7fn/h0jkQ==","signatures":[{"sig":"MEUCIQDASKu65V2hj6+936AAeNIoZDvIzgQuZMGC3XOoCMcz+AIgNu1zSGb+jLxcWLUq28rewHzpDWCctKMEsiHm5g7n8IE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e383ae38c83119a645f0d94a74416d8c60de2d95","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.e383ae3.0+e383ae3","web3-errors":"1.1.5-dev.e383ae3.0+e383ae3","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.e383ae3.0_1709912439118_0.894257849288822","host":"s3://npm-registry-packages"}},"2.0.5-dev.d254316.0":{"name":"web3-validator","version":"2.0.5-dev.d254316.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.d254316.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"fba797d26116bc0d55d34df04b74a4c508045ea3","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.d254316.0.tgz","fileCount":184,"integrity":"sha512-ZQIJJlPXnaJtljinT9zP/61SDBJXcgmGuD4K/OTQwYxsYNJTntjr0zl3cU9RblJ9elleOYrVbJNNsM5vUksczw==","signatures":[{"sig":"MEYCIQCjkMPuDndLupZYw+ehoQbRjDE8k4YLy8sShpwcB3tzcQIhAN6hV/rLWfl/6tCNykc1gsDJnGXckxR7fiMB4Lb1NUOq","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"d2543161b96dcd08038d66f86e8ad0057dcaba7e","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.d254316.0+d254316","web3-errors":"1.1.5-dev.d254316.0+d254316","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.d254316.0_1710184436164_0.17656452106613263","host":"s3://npm-registry-packages"}},"2.0.5-dev.6187f30.0":{"name":"web3-validator","version":"2.0.5-dev.6187f30.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.6187f30.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a7e6b8fd2bdf8ec6e15d7ac06c87aab2d280dcb5","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.6187f30.0.tgz","fileCount":184,"integrity":"sha512-DvOCx9wHWs0DQFJNyYCUExTnRr5s9D9xbEM2k/XgaABkzcXQpHfwBZI3APiZnug13tsKZtqRfZNlWHtvnGjnXA==","signatures":[{"sig":"MEQCIC0fXx7UiBqTqrqesVxqBy0RjhkNBYkuUMIWspCfIgIdAiAjOY/N8jT904ubTEJ+jT8qQuDxAYk8xLaD5jlkcKvffg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"6187f308480f8c6b526995b3e89aa0fc73a017d3","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.6187f30.0+6187f30","web3-errors":"1.1.5-dev.6187f30.0+6187f30","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.6187f30.0_1710238506638_0.5605567553537598","host":"s3://npm-registry-packages"}},"2.0.5-dev.a1f9dc4.0":{"name":"web3-validator","version":"2.0.5-dev.a1f9dc4.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.a1f9dc4.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"9457d1576c9fc13897370ad89589566e3b2a1099","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.a1f9dc4.0.tgz","fileCount":184,"integrity":"sha512-9MMTakgCGXZrYwkB3xA8VRSBqA8OhXqnYJpv5L6M1ghr9MK/2HAR4FZ/lyJXqkQBEnkEuzekcNQ5IuICqxNqMg==","signatures":[{"sig":"MEQCIBqglQ4xN5sL+Fc6ggAMvceoBvj27bZkJb7o+5BHzCxVAiBUKZzPGuKnHW5hUTQhHSKiDhGGVwA2Pm6kAYrElKa6iw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a1f9dc4a793d9e151cb63f0229bd9c32f772a58a","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.a1f9dc4.0+a1f9dc4","web3-errors":"1.1.5-dev.a1f9dc4.0+a1f9dc4","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.a1f9dc4.0_1710238640516_0.5048584797658158","host":"s3://npm-registry-packages"}},"2.0.5-dev.9657b86.0":{"name":"web3-validator","version":"2.0.5-dev.9657b86.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.9657b86.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f2674b830e5fa8358002af022fb2d51586579734","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.9657b86.0.tgz","fileCount":184,"integrity":"sha512-0i3skBfKTK6BZssW/eK7sm41kEkZbIeo/E6MnzUeF+SaMjsX4zh26UPJ/TM7P4AZZcesNGDNb7FHK7g2ub319A==","signatures":[{"sig":"MEUCID580zn/+yxG+Oia3TzkVi+A1BBQF4rl0F/fsV0H+xNvAiEAiBO4YSfRfG6MagSC2WEHDgMFTVCKnyenD1q99hdGxwo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"9657b865ee3dbbd9cf041361084899bfc16f805d","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.9657b86.0+9657b86","web3-errors":"1.1.5-dev.9657b86.0+9657b86","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.9657b86.0_1710239323769_0.577340523235151","host":"s3://npm-registry-packages"}},"2.0.5-dev.43e70c1.0":{"name":"web3-validator","version":"2.0.5-dev.43e70c1.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.43e70c1.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"08efd830e62b591b0ffd45870aaa2a3510f530d4","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.43e70c1.0.tgz","fileCount":184,"integrity":"sha512-7VCt2z4BN4oQ1qRYbK0BKRTqiJt8IBM2REoCTY9U/OFjbGdtR1VmOxVbdc2pSuTeXA+zw8sXD5HJpTZql7765A==","signatures":[{"sig":"MEYCIQDWDOBWhuG54IuHMsclbZcUDQ2WbAX75/Zlmg5WRmud/AIhAPZqopez04Mpp/YOOWkrEWjIfWNCKRrsx8gurnQCAal8","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"43e70c179e0047be13d7b2142d4e11e30a374780","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.43e70c1.0+43e70c1","web3-errors":"1.1.5-dev.43e70c1.0+43e70c1","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.43e70c1.0_1710244044185_0.8463346003767525","host":"s3://npm-registry-packages"}},"2.0.5-dev.6d0a0ae.0":{"name":"web3-validator","version":"2.0.5-dev.6d0a0ae.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.6d0a0ae.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7d60ce539151273cc7218d224a1ed1052a7b12d6","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.6d0a0ae.0.tgz","fileCount":184,"integrity":"sha512-p+vFOhE/pCpPo7S0KVlcGumpSHVLRI8BZGqfWwgu0o3TduaqGHLTmZNGf/cNpqDeFMnrlhmnN/u7GMGFPKG/eQ==","signatures":[{"sig":"MEUCIQCx/mmIKU0Mrrvj5S6iB+k/gF7JECwWGXBg6cGf+sEZVAIgKfJYi2KFKDPUZC0xw2NaXS7ampBYPr6l0d4txaY+KN4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"6d0a0ae77f9c95de58e2b0177f604491011e4b23","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.6d0a0ae.0+6d0a0ae","web3-errors":"1.1.5-dev.6d0a0ae.0+6d0a0ae","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.6d0a0ae.0_1710248080950_0.6572318035447917","host":"s3://npm-registry-packages"}},"2.0.5-dev.383af39.0":{"name":"web3-validator","version":"2.0.5-dev.383af39.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.383af39.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"72efeacc2381ebf4688cef9dd5bcada3eed20517","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.383af39.0.tgz","fileCount":184,"integrity":"sha512-BnSaiFt7mr8cHET6IOHLz+ppyqWdUk1pN6XhEUIh5hk7Qsb5Xjbgv69+aXWzsXaIGo54/A5xeNX3iPXr+QyBwA==","signatures":[{"sig":"MEQCIFu27dlF1UklPkCEHRVCh5XxfBoH6X8/tmF2+zunXdPKAiBOd3N/4A9svKRfI8/w+6MlSoSuV5VP6D7AtCrGCh0DNA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"383af3940fbc801a958496a49e3c977b007b9e6f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.383af39.0+383af39","web3-errors":"1.1.5-dev.383af39.0+383af39","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.383af39.0_1710248350526_0.7704127736065691","host":"s3://npm-registry-packages"}},"2.0.5-dev.16a2c27.0":{"name":"web3-validator","version":"2.0.5-dev.16a2c27.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.16a2c27.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"12a3ec4933dae08da232ea04deeda53ad931fc2f","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.16a2c27.0.tgz","fileCount":184,"integrity":"sha512-nJTqodmqyXNKCo703xI4ej9yadJksOVkHvh48xE3+jRORetPimuqfU60MX1rOBA3pXhaNNN5ZA8kOHXY6WkiTQ==","signatures":[{"sig":"MEUCICjg7bgU0vVE6CsAW/dU9vfG+N7oAcLt5nY/oJ3DFK6vAiEAm1K3n+dimoktaoViVegwEOLJTJ0GqhY4wZBxVWEYbBQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"16a2c27ba0eeb70d25a6e4e3fdb8bf5c2630753f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.16a2c27.0+16a2c27","web3-errors":"1.1.5-dev.16a2c27.0+16a2c27","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.16a2c27.0_1710427262162_0.8020352460122788","host":"s3://npm-registry-packages"}},"2.0.5-dev.2373e94.0":{"name":"web3-validator","version":"2.0.5-dev.2373e94.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.2373e94.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d15f1361d08cc97122ebcf534f3c1aaeefd2f98c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.2373e94.0.tgz","fileCount":184,"integrity":"sha512-TWMgJeaRVv7Q3GOM6OqKj193O//bKfpt0+Y11DbqlowL8B0UVGkyDyvb/TBBE8Hr8z5jZ/XM5l3HHLgheM6R6w==","signatures":[{"sig":"MEQCIHF2Zwcd+QnIi0AvAqSjYjVLpHUn0eAt6yozH4w3tbtcAiBcfnQowEKLVaefEQ1vmZh09geWtb/a/1MAQMg7TqkRIw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"2373e94757f68af90e67892be3f9a32309cf1bdb","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.2373e94.0+2373e94","web3-errors":"1.1.5-dev.2373e94.0+2373e94","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.2373e94.0_1710493252907_0.0054148223961845154","host":"s3://npm-registry-packages"}},"2.0.5-dev.f943944.0":{"name":"web3-validator","version":"2.0.5-dev.f943944.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.f943944.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a90f89ab69d7b0c466844dd047c53d37da3e8cdf","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.f943944.0.tgz","fileCount":184,"integrity":"sha512-I+NWdZ4zh0SMAgKUyFKxyTdljppVsd5XimWOmuVDwxma0KnWv+aJ8uGFXDOQm/8Umdsi11oRceiD+7E+eaDsWQ==","signatures":[{"sig":"MEUCIEBOo9w5wbvQGbDsnsLqqh6SSNPcl49FKFgMiTYmC4c2AiEAzMo/4R+WvwevegFboFmQZN50z0pdPuxM//b+oRhvw1s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":952584},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f943944b51d977f72d4db959be0e72adbcb68c12","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.f943944.0+f943944","web3-errors":"1.1.5-dev.f943944.0+f943944","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.f943944.0_1710944167587_0.5378363797028785","host":"s3://npm-registry-packages"}},"2.0.5-dev.1f81ff0.0":{"name":"web3-validator","version":"2.0.5-dev.1f81ff0.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.1f81ff0.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"98d1be3a3c0cc0df2ccbbb0032bdec16f3491314","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.1f81ff0.0.tgz","fileCount":184,"integrity":"sha512-HnIHokiE+mJgig622sqyR8BpqYpQbZ3J0rMISNPsi4QPfFKZCYfpahq7rKYLslfUQCDY8IodWTwwzmDCjTNKUg==","signatures":[{"sig":"MEUCIEYNGsAK4qfLbwk0eSwQQkubwlCW9pcScpscOUcqy6A8AiEAtwXTGP6GYfk5Ei+TBGXYSimztvmlZd3JlV6whzqollc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"1f81ff097cf548a327fb72537dbabf2126e616d0","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.1f81ff0.0+1f81ff0","web3-errors":"1.1.5-dev.1f81ff0.0+1f81ff0","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.1f81ff0.0_1710946005751_0.1648253304369176","host":"s3://npm-registry-packages"}},"2.0.5-dev.a83e9d5.0":{"name":"web3-validator","version":"2.0.5-dev.a83e9d5.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.a83e9d5.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f203e6e02598baa868f712c4f9161466b10cb5fb","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.a83e9d5.0.tgz","fileCount":184,"integrity":"sha512-OsWXhoD4/uIcsDNsTu9KXiI7Fnv+kl7YdiJgREw/mGK+M/QamW2yZCkrdFtNwN8EbA+z5rn0o+mXVqacS/5eeg==","signatures":[{"sig":"MEUCIFigXUMyP/FIVpYMn4WtEd/dwQNw/okIhh07StpT8cjkAiEAs253zrjD/Vnkn5rHkh9+SKlFjy9b+2482/3Ba4g7nqg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a83e9d57ffe318331e820d307afe6f179a759225","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.a83e9d5.0+a83e9d5","web3-errors":"1.1.5-dev.a83e9d5.0+a83e9d5","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.a83e9d5.0_1711375836183_0.003213867995163655","host":"s3://npm-registry-packages"}},"2.0.5-dev.c4e039a.0":{"name":"web3-validator","version":"2.0.5-dev.c4e039a.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5-dev.c4e039a.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"dc730fb9794221ed90fe60ff3714eaf11e6045ba","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5-dev.c4e039a.0.tgz","fileCount":184,"integrity":"sha512-9I56s4Y3hcpOJR+dh+/b6PSNhXo27H9iEQZ0n5w3KF0viQFWDmb4I2QaNpI3eHPWkDeWUler+64we9R25i1GbQ==","signatures":[{"sig":"MEQCIE0Ye0MUXEFjF7vzj/Xqib72DhjGt/U5bom/E6ralaa3AiB2ej+LT33Z7vPcnFYspY418iC8H1EfiP34G3gloNSRmQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"c4e039a1cc4bcf47846fac919e648426a052ff91","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.c4e039a.0+c4e039a","web3-errors":"1.1.5-dev.c4e039a.0+c4e039a","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5-dev.c4e039a.0_1711393209778_0.7917244387940616","host":"s3://npm-registry-packages"}},"2.0.5":{"name":"web3-validator","version":"2.0.5","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.5","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"de1984bdb34f292251b86400dba7169700db0849","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.5.tgz","fileCount":181,"integrity":"sha512-2gLOSW8XqEN5pw5jVUm20EB7A8SbQiekpAtiI0JBmCIV0a2rp97v8FgWY5E3UEqnw5WFfEqvcDVW92EyynDTyQ==","signatures":[{"sig":"MEUCIQC2oJu4SVOk70INq0FkCM/rKVlz6w/OFwvv6E/UyfvkBwIgWvizaeeRYuNudbRLBAlv14b0KwtEi1+0BWFAjN/A6vQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":304235},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7379a3bb3c274eff76c64b2447e95c34282e04fd","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.18.1+x64 (darwin)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.18.1","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"^1.5.0","web3-errors":"^1.1.4","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.5_1711475708096_0.0310922165922618","host":"s3://npm-registry-packages"}},"2.0.6-dev.a173a8f.0":{"name":"web3-validator","version":"2.0.6-dev.a173a8f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.a173a8f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"3f77d49c27c1a85ea38cfb4141b91a8661824c60","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.a173a8f.0.tgz","fileCount":184,"integrity":"sha512-1QFjSWW8WPWLf73x0DD7lUP6RNGqQwUFBh2nSARGg1SzebL3v2eqf1Uw0bFlqLkSFyHrhWtG3eBjJfKrvjCVMw==","signatures":[{"sig":"MEUCIDLlbcGDEEXli0gi/7CwRA9nvQB/jQ5Eq8uWcmwFahwMAiEAnc7Ti4lDVF8Oq8WNYS6bt2EHdIgqQj596l7v2TT5ufU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"a173a8f43fc4961fd52a42aeca5854e6d023b9fd","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.a173a8f.0+a173a8f","web3-errors":"1.1.5-dev.a173a8f.0+a173a8f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.a173a8f.0_1711476042534_0.1558751864711232","host":"s3://npm-registry-packages"}},"2.0.6-dev.526c6f5.0":{"name":"web3-validator","version":"2.0.6-dev.526c6f5.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.526c6f5.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0bc6ffbc67cc046eab2fbff49add84b4f4de7672","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.526c6f5.0.tgz","fileCount":184,"integrity":"sha512-gtSeqPlO/qbAG+cikQBu5e0fdmF1jJozeE89uR3bgCm/Q/pPy0s3PBx6oFQ5BTIkaD90pBHRglVUAumZsE1y7A==","signatures":[{"sig":"MEUCIHbcjZ5K+IOYvRSgFCQuykMl+AQfhATUY0kbcB9FUuVtAiEAwQ3WS4XCWr9gt3LU9ScaCwKx4VsyBh7EFisn9sPeyo8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"526c6f518f6a23438907b119aadbc868b06fbcd6","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.526c6f5.0+526c6f5","web3-errors":"1.1.5-dev.526c6f5.0+526c6f5","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.526c6f5.0_1711506386054_0.5524444429514832","host":"s3://npm-registry-packages"}},"2.0.6-dev.5341c3a.0":{"name":"web3-validator","version":"2.0.6-dev.5341c3a.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.5341c3a.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d33ece31e3cfec102c74e4c70a2ed07647023798","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.5341c3a.0.tgz","fileCount":184,"integrity":"sha512-SpnZ2rRnqnYo7k5DdRzEEmx99SDXt7Z8XfxUFiMBXEz5YaFdlKksMAsLjRyed8vaSwwVzZIfscIH458h6AX8wQ==","signatures":[{"sig":"MEQCICy5hg2jORRUu+P5xIxLedW8hCdU3KP3F2+1+vZnU/PvAiAita9wgQie0jS66d66pPkkfHGO4xIbVTfoiOeS83EsJw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"5341c3ab30aee24f678fc155d3e41483e3f5e68f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.5341c3a.0+5341c3a","web3-errors":"1.1.5-dev.5341c3a.0+5341c3a","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.5341c3a.0_1711682891924_0.6746689555841343","host":"s3://npm-registry-packages"}},"2.0.6-dev.67d8a74.0":{"name":"web3-validator","version":"2.0.6-dev.67d8a74.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.67d8a74.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"664528622a6240b5020f49113f1d9437a7ff479f","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.67d8a74.0.tgz","fileCount":184,"integrity":"sha512-e7FQ/bY34fmm7l5pb5Xyn76ApSLd3fJ67f7wcSJRS23Sk7ul2JyWx/uXlKaYzyXi5kyGqbfyPohUAw7uULDFNw==","signatures":[{"sig":"MEUCIBzlSLAMyhXA2UbeY8DetvctM9ZJBp9IuK8MZchvoLT5AiEA85sn2yvXJwifSHUYTH6dd9EjOb2nHVerlCA8EoSNlA0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"67d8a74386047de866456badb5ae3dae7cd4a9e6","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.67d8a74.0+67d8a74","web3-errors":"1.1.5-dev.67d8a74.0+67d8a74","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.67d8a74.0_1712241697047_0.8721558494531683","host":"s3://npm-registry-packages"}},"2.0.6-dev.5a579fa.0":{"name":"web3-validator","version":"2.0.6-dev.5a579fa.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.5a579fa.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"3bd2e5f1eba8e6ee8c0fe2581bf6f2a9a9ec44cf","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.5a579fa.0.tgz","fileCount":184,"integrity":"sha512-F5Bna+wQtMIVWrRbfkjrgaLwacHcVNu7MGMYhX4skPQs/bdq5GMg9E8h6sUL0nw1H4HqxUKlI8kqamQEJWsSaw==","signatures":[{"sig":"MEYCIQDcn1g/uyyfifjTP8qkEhbJ3VsED5Jzk4PgsqTRg3UVtgIhAJAaddTNsWejCYsB2RTo0NNcoeULEOjRzWfcBtD6J/OH","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"5a579fa3e46ad0c44bdead69876491f51852d82a","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.5a579fa.0+5a579fa","web3-errors":"1.1.5-dev.5a579fa.0+5a579fa","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.5a579fa.0_1712333653944_0.9413273126617896","host":"s3://npm-registry-packages"}},"2.0.6-dev.ce59737.0":{"name":"web3-validator","version":"2.0.6-dev.ce59737.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.ce59737.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"9f6992619d968195d28f7b025eb0021824809499","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.ce59737.0.tgz","fileCount":184,"integrity":"sha512-EGvHKlpKFDZKmJBuDEqe59OIiu9XHk2xnCv+vDvtoLEhR93OlcxLd/Vuf3zFEHyah81aZzBNe/a0mQ2AuESBvw==","signatures":[{"sig":"MEUCIBSQHiDf3z0qagxNdJsdofV6aPg8atUtAncP3tkBlAqVAiEAzQxZxp/3lx1NQeywMlsuuMaPijtEYe76bfGUpmRLf5I=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ce5973719a598352831d871b4de167c363c4517f","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.ce59737.0+ce59737","web3-errors":"1.1.5-dev.ce59737.0+ce59737","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.ce59737.0_1712489874841_0.6028211736897764","host":"s3://npm-registry-packages"}},"2.0.6-dev.bfb4f6f.0":{"name":"web3-validator","version":"2.0.6-dev.bfb4f6f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.bfb4f6f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"fd1589471b4e2e256d2ebccffee6532cbb71b550","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.bfb4f6f.0.tgz","fileCount":184,"integrity":"sha512-S6K8kF0cLE6Us+gtchVxytWvEkMhFUDtvLwRLUe4KNhylRngXR0N4OYXWFZoI9cRe/gfjW560trBuXS6GDgSEA==","signatures":[{"sig":"MEUCIQCB4U+uIaAHRyh4zJwvVd+7ZZ2mHHuAsWQAE7BlOk1f4QIgXdNwXlyTOHxzeZZhQfre8s/Tz3uK2WJk2+3EsyEsshc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955044},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"bfb4f6f1563ae42384370103eccc83d49080f3be","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.bfb4f6f.0+bfb4f6f","web3-errors":"1.1.5-dev.bfb4f6f.0+bfb4f6f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.bfb4f6f.0_1712583572370_0.9302994524753345","host":"s3://npm-registry-packages"}},"2.0.6-dev.1c03666.0":{"name":"web3-validator","version":"2.0.6-dev.1c03666.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.1c03666.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e1e3de207474a5b0f6ab0f8668acc2581a86673e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.1c03666.0.tgz","fileCount":184,"integrity":"sha512-FbLkvU8H2YIMdDEoVWllYevrsa03xh8yzhQKTmkJTT4CbeZCBn3Ckx5xsrtrIkWE0CjSxOnW0n6r/xq5F1wGVg==","signatures":[{"sig":"MEUCIQC/FrF2kYLGwnGH8SY9AjS0U01TFmco1DzhAdJRFp4L3QIgRQeppIiD22MJ0vUzQmhaNoGTkipnO26Hr2ExCkkhtXc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955675},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"1c036667a5815731eb470fb56da8da5365bdd6db","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.1c03666.0+1c03666","web3-errors":"1.1.5-dev.1c03666.0+1c03666","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.1c03666.0_1713187556156_0.14895368422944166","host":"s3://npm-registry-packages"}},"2.0.6-dev.578ebb6.0":{"name":"web3-validator","version":"2.0.6-dev.578ebb6.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.578ebb6.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"24a917c05a34b33eb5a3862a5c74211b23c92193","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.578ebb6.0.tgz","fileCount":184,"integrity":"sha512-dgfQYsjnZTZUw+HMTImCBGP6S2XqZEnbOvcZgllMDCUdJCFZ2K7LIh+mgJcI1YhogLAvyefythfgKyaiYTyhNQ==","signatures":[{"sig":"MEUCIQDoPgmHMh1axFhu1zF0Qww97jdvI5Qzd5jJuVYc2Cu0zQIgFupFlEj5Gy33deiGuT5NqNokervAWZjHKjzm1khpwMc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955675},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"578ebb69f0c16a5fc742c214d11b79e3d777ea04","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.5.1-dev.578ebb6.0+578ebb6","web3-errors":"1.1.5-dev.578ebb6.0+578ebb6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.578ebb6.0_1713197858844_0.03450291334283073","host":"s3://npm-registry-packages"}},"2.0.6-dev.e29deea.0":{"name":"web3-validator","version":"2.0.6-dev.e29deea.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.e29deea.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d6e9f3d5277afa2ebf302fa95961edf21ac7a691","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.e29deea.0.tgz","fileCount":184,"integrity":"sha512-ZOV5GW8ZA6qwXUDnBlG48womFhe/kLjyL/KKPz0TP1fe8klUZbaguste7SfAF1jWaZ0dqF1gp+Ak4nBWPRWyLg==","signatures":[{"sig":"MEQCH2ccLoWQr0lRfY95p3zgwdYLKq/9U+PnqbeGAAitMoMCIQDPcoa/Bwk2i5Mbuh/p+vOeIGlg//JuwQXI1kuQepPPMw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955675},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e29deeac2bb9705d70c839cd825bc34a93cde1b6","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.e29deea.0+e29deea","web3-errors":"1.1.5-dev.e29deea.0+e29deea","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.e29deea.0_1713413811976_0.8690364221837936","host":"s3://npm-registry-packages"}},"2.0.6-dev.1ab7a6b.0":{"name":"web3-validator","version":"2.0.6-dev.1ab7a6b.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.1ab7a6b.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"45c5483adc2aae4a101c469f63632fe83ee39206","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.1ab7a6b.0.tgz","fileCount":184,"integrity":"sha512-FVS4yYAe6js6EbcYzgN0nLKbSKAmFhfOgMNJLaChv4hMnlIWw18B+PzFG4BY/RPWTdWO6gK2ZV866VvCpLFREA==","signatures":[{"sig":"MEUCIBh6VbU0xXENPggIQSsBJl28HtPgIuSgM5Nu+fVLMVrhAiEAxUhGeDsJiE46ag1BHLGWMy9lwFW+6hzHLVJgIZqNuXw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955675},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"1ab7a6b8aa46d5984d41fd69c78103fcf1f0973b","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.1ab7a6b.0+1ab7a6b","web3-errors":"1.1.5-dev.1ab7a6b.0+1ab7a6b","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.1ab7a6b.0_1713440720267_0.3626476336050162","host":"s3://npm-registry-packages"}},"2.0.6-dev.93296c2.0":{"name":"web3-validator","version":"2.0.6-dev.93296c2.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.93296c2.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a3abfd21291840f5b7c04eed81a773bfb9a871f8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.93296c2.0.tgz","fileCount":184,"integrity":"sha512-uE7nyaPRTSdMOeYcBbl2Z3qIXbG0jBtDijVdu46p8usVinooPiRuGy5IgR6mHil/aL8sO3Z8oQJPhfSxJ7O9kQ==","signatures":[{"sig":"MEUCIF8g7S/b3vGXsgX0Tg0npahp2DkdX/CQ+dyv/iiipVLwAiEAztWaJBcwJwGEDqi+rrtaeMFD9oDdpxEYmpWiVySsEeU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955690},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"93296c2e0ec299c506591d790236e5dd96291757","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.93296c2.0+93296c2","web3-errors":"1.1.5-dev.93296c2.0+93296c2","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.93296c2.0_1713452575886_0.6820534810058629","host":"s3://npm-registry-packages"}},"2.0.6-dev.dd172c7.0":{"name":"web3-validator","version":"2.0.6-dev.dd172c7.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.dd172c7.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"c83aaa947fde07da1efbaf3cfe0d111b3a3542f7","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.dd172c7.0.tgz","fileCount":184,"integrity":"sha512-954U0qsQT0KoSjyBjB58ag9Ytmzxtj3IeMbUrk8/jVdIwzeXf2oTjMyGkWtSllHIi2mkptWB4fkoOtowR2At0A==","signatures":[{"sig":"MEUCIEOahx+kC/JEzzxNuHo3ghNl56x8w1Wu/tkXqFeciYO+AiEA0qpGeMU/7AZC/E/Xd0gzNMyIeMpGerfXvBfzPTs6we0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955690},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"dd172c78daa518778aa2ac07aa2cc2a8bf0aa9e2","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.dd172c7.0+dd172c7","web3-errors":"1.1.5-dev.dd172c7.0+dd172c7","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.dd172c7.0_1713468909806_0.05999341476543152","host":"s3://npm-registry-packages"}},"2.0.6-dev.d4e937d.0":{"name":"web3-validator","version":"2.0.6-dev.d4e937d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.d4e937d.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"382af0d028ed043fca80680cf5db67deba774d9b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.d4e937d.0.tgz","fileCount":184,"integrity":"sha512-KVdKnqRmbS9OnvZtsWpBGjGTks1Zjen58Ue5XVryjulMCJESjWuPOfmss1hAVTdw0cd6pR8vnqx37clvp/EsIw==","signatures":[{"sig":"MEQCIAn3zgfwJkG9szB8qBRBmLYorLnFps6St89t7ZyqZfQ1AiAbGVEb+1W0tLXP4jDH5WGUMgVct5sAro4ykBes8MDNRw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955690},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"d4e937d82748f4b1f2e6e6747a64124c7c34d057","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.d4e937d.0+d4e937d","web3-errors":"1.1.5-dev.d4e937d.0+d4e937d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.d4e937d.0_1713501214146_0.7903414230712997","host":"s3://npm-registry-packages"}},"2.0.6-dev.53e2466.0":{"name":"web3-validator","version":"2.0.6-dev.53e2466.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.53e2466.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e3e8d8768e659751814374efb9fac2020e3e5cbb","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.53e2466.0.tgz","fileCount":184,"integrity":"sha512-3cVkfv/LZNQT9/6Wx6lMad2xAxYPIeoF5n78mNvJuo/+SzSj2T1ZARDtYGpaj+Ww4dTnOSwSEisqDHl7TXs/tg==","signatures":[{"sig":"MEQCIAq3Jblbb6oS3TiRrfSPQECS1TbXdV+pEL9gW/TQdeAmAiB0UE5yfhCy8AQXHKO1hqsM5rU0d11sYxmR/tQM2/Av9Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955873},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"53e24664e4c660826eb10207b480848e677a73e6","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.53e2466.0+53e2466","web3-errors":"1.1.5-dev.53e2466.0+53e2466","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.53e2466.0_1713804875518_0.5282607003802238","host":"s3://npm-registry-packages"}},"2.0.6-dev.7be0060.0":{"name":"web3-validator","version":"2.0.6-dev.7be0060.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.7be0060.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"7f6bd9bbebbafe29e3e382572bf793d1317934bb","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.7be0060.0.tgz","fileCount":184,"integrity":"sha512-/eM3Ukbv6cSxaQtxTZSDtWmt+OkNDDyP6v25E3EyqFQVW1oV/aCoxeYjhr7XJGY6sobrs7CIH9K9xlrJo783Gg==","signatures":[{"sig":"MEUCIQD0mmuTxQECqyaOWQOqqGbuZN14PgHLDYLtAUumhD0ojQIgEI0jAF32NZefAhP81k0rV+8utgFdx0fouKyWg4RKJbo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955873},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7be0060ff457119bdbb642afcafa3bbe651fd31a","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.7be0060.0+7be0060","web3-errors":"1.1.5-dev.7be0060.0+7be0060","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.7be0060.0_1713862207088_0.289680152123976","host":"s3://npm-registry-packages"}},"2.0.6-dev.5fd9dbb.0":{"name":"web3-validator","version":"2.0.6-dev.5fd9dbb.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.5fd9dbb.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"8d0648a99e2978eb1a325e8ffd7d4d4b8bf8b689","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.5fd9dbb.0.tgz","fileCount":184,"integrity":"sha512-5BnEVy5ROsUG2Gain5HdTDau9Jn43zDEpFDkeW6eg8CdmpeaTfEyXw72yw4yMMlBOm42pddoc8BDSNS8stA0hw==","signatures":[{"sig":"MEYCIQD78nkr9WTg8faNIZJ5s7hpyLRg04YNzzRMGsfzaS0LrwIhAP+fc+xJK+5w5pyG2LEwsxdBZJEgvk+fnCEG07CLCJIf","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955873},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"5fd9dbb2eda58b22c1d83033e6c2d2a263b3b9e6","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.5fd9dbb.0+5fd9dbb","web3-errors":"1.1.5-dev.5fd9dbb.0+5fd9dbb","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.5fd9dbb.0_1713881830383_0.08185920782359069","host":"s3://npm-registry-packages"}},"2.0.6-dev.ed2781f.0":{"name":"web3-validator","version":"2.0.6-dev.ed2781f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.ed2781f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"39917ccd06f24f688fc5fb7cd6caa8dae895a562","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.ed2781f.0.tgz","fileCount":184,"integrity":"sha512-YoTsYdaVSe+3bKAG+JVbJeqyVU8/UxiIa5V+d3d9HFeIXIx9tHyejrBFfarBGkXSMXCCsNDxYKcOSzs7ymhdJg==","signatures":[{"sig":"MEUCIQDJp2GC7DhIZkIJ8r/LZIKHqnh5Y1swIIXcGL/se0qmoAIgOESUakvcQhNe1gifuyEjOkff0v6lE4kHBIgNpwATrVY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955873},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ed2781f3756162ac2ece03a1b5b026f3b4e24401","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.ed2781f.0+ed2781f","web3-errors":"1.1.5-dev.ed2781f.0+ed2781f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.ed2781f.0_1714050965460_0.46782262424071974","host":"s3://npm-registry-packages"}},"2.0.6-dev.419c8d3.0":{"name":"web3-validator","version":"2.0.6-dev.419c8d3.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.419c8d3.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f9acaf438918b6075edc491780acbc8b1463d04b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.419c8d3.0.tgz","fileCount":184,"integrity":"sha512-bkDGpgcyHAQdJdsJsMd5VuVv0sTDUTr6d+reh/Fo0G1lmkE+tlp5gibz7AVtjHWu4wf7Z9v6SGPU4jx5YSOxOA==","signatures":[{"sig":"MEQCIG6utEBHe0JzaxBGrSFbjw442k+mNtLQA6qxLA6lrPTIAiAmEDnjAFvrVPpTahz0rjjM7IjjcDUTjgLCt5sy/lr4Qg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955873},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"419c8d3eb8e5a66669da2dd6e145faceb5143c5c","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.419c8d3.0+419c8d3","web3-errors":"1.1.5-dev.419c8d3.0+419c8d3","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.419c8d3.0_1714059411848_0.0930564111926997","host":"s3://npm-registry-packages"}},"2.0.6-dev.de3e8f8.0":{"name":"web3-validator","version":"2.0.6-dev.de3e8f8.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.de3e8f8.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e4f47ec742b5ddaedc741e1daab34c9dcbc863f2","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.de3e8f8.0.tgz","fileCount":184,"integrity":"sha512-1CcObk7cRJFjYEYJP//StZQ1yOGacri4f+Vn4weo9W1mxNp7m+Xv1ys/RmrEkD7E1wpNGhuxlyILfSIYfQ6Ckg==","signatures":[{"sig":"MEUCIQDXwRaemPfWWKxVefdn70Iz1/KuphWGO30NdfX/GozYDgIgSw7r/vNCL5kSrLs+jqFqRRjmkp6YZYGKwFmqeVx6JgQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955873},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"de3e8f881cc12ca6bbeddaf992c18c6c4eb1ede0","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.de3e8f8.0+de3e8f8","web3-errors":"1.1.5-dev.de3e8f8.0+de3e8f8","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.de3e8f8.0_1714159529214_0.20818453702203388","host":"s3://npm-registry-packages"}},"2.0.6-dev.ebbbf1e.0":{"name":"web3-validator","version":"2.0.6-dev.ebbbf1e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.ebbbf1e.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"085bdc7c50e0bd6b1f702b4bff5aaca85d375086","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.ebbbf1e.0.tgz","fileCount":184,"integrity":"sha512-7fnJDIOdllKExb9gvDe6hq2DLkwUNO5JG+Xmega0XKmROWcwx1BbgAuWhVNWhTU5VCWGNSafpzJ2q1hRVCBKTQ==","signatures":[{"sig":"MEUCIQD6Ji3yT8u2ESqbhMq5/aWMk/BTY5LfWKwB/SCRBZDOGwIgZMkd0IXdGPu5sjtc5/e9S7UkIZfAlsdHKyAMnUywPVI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955873},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ebbbf1e8bb2562708f89de431fc630ea7d665624","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.ebbbf1e.0+ebbbf1e","web3-errors":"1.1.5-dev.ebbbf1e.0+ebbbf1e","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.ebbbf1e.0_1714467035909_0.6919320851370114","host":"s3://npm-registry-packages"}},"2.0.6-dev.7a470c9.0":{"name":"web3-validator","version":"2.0.6-dev.7a470c9.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.7a470c9.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"8d4396bf083f4e6b97c62511dc439430a1f99140","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.7a470c9.0.tgz","fileCount":184,"integrity":"sha512-7pl9lnFNvZvQmq4eXAPTDOB8+kkT/H7iPJHdgl4xztnWQ5nRTqrEDH9zzd6yDgH1K8RLYo83L1KpDmJmMh0mUA==","signatures":[{"sig":"MEYCIQDHYKO708No3tcUlmTvYniTZ0Vt5yKqS3J3GV0YfJh25gIhALPITY9pBnDvAIlOfIZx9JELW4l4T0YXfzr+krY3U5jS","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955873},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7a470c9469c43d607d9120f993518514bc228038","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.7a470c9.0+7a470c9","web3-errors":"1.1.5-dev.7a470c9.0+7a470c9","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.7a470c9.0_1714605125286_0.11234064469761096","host":"s3://npm-registry-packages"}},"2.0.6-dev.b413ebd.0":{"name":"web3-validator","version":"2.0.6-dev.b413ebd.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.b413ebd.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0bc4305916e22eb832f941953d84e53e8cb2c269","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.b413ebd.0.tgz","fileCount":184,"integrity":"sha512-RjnLVd/45BWj3BM4Pj4LkkcFcF8gONPkhQpWbQ9r2mSv15Ze0QwGCkVzrkVDKeKCxFfaaJ+HI/bTPjx+88Jskg==","signatures":[{"sig":"MEYCIQDOTkTDaxGNbIEenCQ/37izn795TpVTyFXVXJPBEK06sgIhAPw1me73v72ClURK9ujJF8lJ1zjeib1xaR4b3K7CcZIG","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955873},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b413ebd1c4a256ca9c5c391cd290fe253a7df4ca","scripts":{"lint":"eslint --ext .js,.ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.b413ebd.0+b413ebd","web3-errors":"1.1.5-dev.b413ebd.0+b413ebd","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.b413ebd.0_1714636811940_0.10700451411429945","host":"s3://npm-registry-packages"}},"2.0.6-dev.88b7e2e.0":{"name":"web3-validator","version":"2.0.6-dev.88b7e2e.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.88b7e2e.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f1c0b9e50c860bea253f705a9ba3236ac93c8d45","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.88b7e2e.0.tgz","fileCount":184,"integrity":"sha512-KfbvlS+bh/Nx0wi46gH1GhTQPhnxKUzs5PEASJ/YnnUi8nsYFWB4uGeVH53dw9L1Lz38SPJd63uC6102cDzOBg==","signatures":[{"sig":"MEUCIHC0FpHHg6DYI07Qc9eDsEtHzAku1bGln5UAXdd0FClkAiEAwR0feS0TDv/d/0AIR+6cPh/I8D8m9ydJVAmw+xcMwRg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955902},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"88b7e2e22960898d69f7d35d1030edb37dc9d763","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.88b7e2e.0+88b7e2e","web3-errors":"1.1.5-dev.88b7e2e.0+88b7e2e","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.88b7e2e.0_1714657512486_0.36500071677467716","host":"s3://npm-registry-packages"}},"2.0.6-dev.c62ef79.0":{"name":"web3-validator","version":"2.0.6-dev.c62ef79.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.c62ef79.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"af583affec89f08b9fd5f15b27040323256cb1d1","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.c62ef79.0.tgz","fileCount":184,"integrity":"sha512-79GMS19AqGvoDKSSGpWyixdUktLbVnjxgRDqK8bBXERxLOGa0F00COOCGzccTvVDB1AdSS9auVmkFohowJav5Q==","signatures":[{"sig":"MEUCIBOuNzJ3KOcdafLbsRrq0RAwLvrBaPnjRAvGqp+vlH/HAiEAzHD3a1+/aWResbcNvgFZBFEwNobiop1mXkmkypZDEP4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955902},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"c62ef79b79b9d86bd59dd68e2773842e49eaedca","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.c62ef79.0+c62ef79","web3-errors":"1.1.5-dev.c62ef79.0+c62ef79","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.c62ef79.0_1714990706376_0.7926397696720588","host":"s3://npm-registry-packages"}},"2.0.6-dev.5d2f2aa.0":{"name":"web3-validator","version":"2.0.6-dev.5d2f2aa.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.5d2f2aa.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"2f759bd0d434d1e6c9c19ae9d04d1483827c96c6","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.5d2f2aa.0.tgz","fileCount":184,"integrity":"sha512-6BdqJaD3Oz0l6ZojJLjPFn8Plt1EwVy+XrFTts/rPygB/JdxdXYFAztnNGzqC6bfV11FPimhmDGPOClYEjCdWA==","signatures":[{"sig":"MEUCIFPHpCfyQgvH/G7942dzOIy1DU7WAj14B6/euLQuVy6cAiEA5dUZmkKWzHjZ8FzBIfvaTtvKpCVkA8Et96yXkS4d72M=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955902},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"5d2f2aa2cc628e0d73507687449737dfa419e2e4","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.5d2f2aa.0+5d2f2aa","web3-errors":"1.1.5-dev.5d2f2aa.0+5d2f2aa","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.5d2f2aa.0_1715027807969_0.3012529767689558","host":"s3://npm-registry-packages"}},"2.0.6-dev.f216540.0":{"name":"web3-validator","version":"2.0.6-dev.f216540.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.f216540.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"9e22f04bc227c766df3573473ef8406bc6d7782b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.f216540.0.tgz","fileCount":184,"integrity":"sha512-63a4N2nQX8GGqd46JU48cj4qUXv3KPzWx6Uo7Fkwu+l5C+mSnVkSlAeOnlu5cWkrrsjsMowOqOhPXaOAV9TnQg==","signatures":[{"sig":"MEUCIBZwz43ROeU/ilTI2QQYMVZjMyqF+/xka4spoK3d0PFFAiEA/n8z0FKrwNH9iAgnI4S53Ju9nD1zZk+ybmYmnqdUolg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955902},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f216540e4fd8af19bfc1ec86afbc26076a6769f4","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.f216540.0+f216540","web3-errors":"1.1.5-dev.f216540.0+f216540","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.f216540.0_1715027869763_0.27060658225096534","host":"s3://npm-registry-packages"}},"2.0.6-dev.f44dc5b.0":{"name":"web3-validator","version":"2.0.6-dev.f44dc5b.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.f44dc5b.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"cdc6a4f397214b94a5b0bf96dcbd49d5c7e19353","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.f44dc5b.0.tgz","fileCount":184,"integrity":"sha512-f0b8qPh0pESpv55Phc/XzoD2Ka4JyB5DlRy0g7U0F6YAJ4F5RkgytET+SHKK9ZbAPEIokRNd75319E/o7KS8JQ==","signatures":[{"sig":"MEUCIQCsTq5lgManuu8c5usMFVQcJnS+o2upT7orzNyVMDWyfAIgJ5Ozgakii+jWBOblSm1IpEQJyCUVwugFpngugaKez2U=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955902},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f44dc5b6ad00648bff4abfc4339386ed6076275a","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.f44dc5b.0+f44dc5b","web3-errors":"1.1.5-dev.f44dc5b.0+f44dc5b","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.f44dc5b.0_1715261919041_0.13211744147599713","host":"s3://npm-registry-packages"}},"2.0.6-dev.12c2515.0":{"name":"web3-validator","version":"2.0.6-dev.12c2515.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.12c2515.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"577fc83a4b0746f2163c4bbc2209a93edbf8895f","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.12c2515.0.tgz","fileCount":184,"integrity":"sha512-tVKWVLye7MHFfMHtCVh7ZESjq1dlxuah/ByIV+khPwOtjs918n9gCE9NKxC9/xnNUqo1P+JB3QRvTr1GIi4TlA==","signatures":[{"sig":"MEYCIQDeEZsmRVWzVCqDojG9Hlpe3yN4JWjAunbrldwV9MKvFQIhAMemP91ggbi4TsGH3jlVgYaf82BvqhWpK3ylYwIOeCj2","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955902},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","browser":"./dist/web3-validator.min.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"12c251589198129781d24d2327d67ead9f20b3e8","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.12c2515.0+12c2515","web3-errors":"1.1.5-dev.12c2515.0+12c2515","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.12c2515.0_1715609491686_0.8138380331064201","host":"s3://npm-registry-packages"}},"2.0.6-dev.408125.0":{"name":"web3-validator","version":"2.0.6-dev.408125.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.408125.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"3a73e3e3223d5c00b2dd3382ae29b5949d638ba8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.408125.0.tgz","fileCount":184,"integrity":"sha512-vCculpWH6+jUXxUOC9hUoT48GGIV3o4b6oI2sOQkIxfpBcSqj5iL7QA6pJBBuguuZcp0JX49vR2ibydZtoN38A==","signatures":[{"sig":"MEUCIF7LmS8dCrAcaZRWckyJta0ABjqVOefHLio1NzGl3WU2AiEAiUmWXKx/XnhXHCe8jEqLQSijFeDTGhIlCWmaBbZQXVo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955858},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"040812570a6ef68b7123c323a34ea79466154455","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.0408125.0+0408125","web3-errors":"1.1.5-dev.0408125.0+0408125","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.408125.0_1715641745670_0.8449020134063339","host":"s3://npm-registry-packages"}},"2.0.6-dev.866469d.0":{"name":"web3-validator","version":"2.0.6-dev.866469d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.866469d.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"aa5f50ece9cebec1caa1d80ab0afd33ae891e0db","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.866469d.0.tgz","fileCount":184,"integrity":"sha512-jaF0scBV++o2QjV4HvLtUCeH/nbCqaahTPv200lb2b+r/IJrUO+k6A5f1tqV0Js4IaItKZyrUbU1fszHzN8r/g==","signatures":[{"sig":"MEQCIDGxWKct7NCUYTJU6KHkJx4D+oLcFiF4rNOt0AnmukKNAiAgqX35xBoa6mbMcRbmYx3u/YDWW5VzCRKcgrBGhbGjbw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955858},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"866469dc143d71baa128eae09c0d60b51cfdc28e","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.866469d.0+866469d","web3-errors":"1.1.5-dev.866469d.0+866469d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.866469d.0_1715686518877_0.33943589060349244","host":"s3://npm-registry-packages"}},"2.0.6-dev.2f73aa5.0":{"name":"web3-validator","version":"2.0.6-dev.2f73aa5.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.2f73aa5.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"1b14cc48d69b9e22b2d2ea90eb1839999b02c99e","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.2f73aa5.0.tgz","fileCount":184,"integrity":"sha512-zR+Avk3weF9Gz7yRz2R5LjbMqAvfLlXBF5mgaErwt0hbA+Ai9A7bshg+5uagf07h0QzCNnXCpz+650q4lrlriA==","signatures":[{"sig":"MEQCIAnWGSo7uKLElTKfyRmHuy6ixzAhmltNxF5vbXCeAkk1AiBmFRhV0E9rLgelUXAMy/eMhp4X4QPPIFkWPgtRepCENQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955858},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"2f73aa5c1de205f30a3961388be27c47c7a28dc5","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.2f73aa5.0+2f73aa5","web3-errors":"1.1.5-dev.2f73aa5.0+2f73aa5","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.2f73aa5.0_1715869320686_0.6497939242737745","host":"s3://npm-registry-packages"}},"2.0.6-dev.32b6b29.0":{"name":"web3-validator","version":"2.0.6-dev.32b6b29.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.32b6b29.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f17b6540259d69a95e9ee7a39adfafacd207a258","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.32b6b29.0.tgz","fileCount":184,"integrity":"sha512-yTZk0wOVCJGvHDr8uVbxeWqULskI38el89s8M+18adCcIJ5GYj7odyzhmnbAl7ZkZLpSHEvFlV6TWSuLsJdrZw==","signatures":[{"sig":"MEYCIQC3/89xFCCifPJt9sLHE1qX8F7Bb2CtiIkn+Ha9XDSxbgIhAIJi2B5gJfbRsCFx4sopbflj0n1cd8VzEQstOvWmIJCi","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955858},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"32b6b296fffc7084f7688a136c6a0eaf6e369012","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.32b6b29.0+32b6b29","web3-errors":"1.1.5-dev.32b6b29.0+32b6b29","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.32b6b29.0_1716297237024_0.004510554268726041","host":"s3://npm-registry-packages"}},"2.0.6-dev.553f270.0":{"name":"web3-validator","version":"2.0.6-dev.553f270.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.553f270.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d8f733f086fe2e90f56e33c628b85bc8f2abaa04","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.553f270.0.tgz","fileCount":184,"integrity":"sha512-5rEiDfiZEK/axVXTCfxHxkLo/AGhr4NTBKNjTJEzw5MoPrLApcjD85ZRYyzxIX3fJ+eLHU18fPg55ch1m2JNlQ==","signatures":[{"sig":"MEQCIEqZKR4dfYG7nBmxBrux13Qs6kggeKTrC1mIAnryPfDmAiB+93HS7qyjf3ipRoXmQ3+L8m0+xzgEBmQ3NNMU9+rotQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":955858},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"553f270e49c35b68adec64454db8d32a03646de7","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.553f270.0+553f270","web3-errors":"1.1.5-dev.553f270.0+553f270","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.553f270.0_1716323299634_0.7915922643967381","host":"s3://npm-registry-packages"}},"2.0.6-dev.3904a46.0":{"name":"web3-validator","version":"2.0.6-dev.3904a46.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.3904a46.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"51644cdb041b36d21c0e045c62998728da56b13c","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.3904a46.0.tgz","fileCount":184,"integrity":"sha512-GwQTgGV8s3M6WYFT7SI6RVeGmg4DBbzsutRMOuXjUhqCP63Z61Hn7hHCQtyPzNM9/FCIirv285YyMAt7LQT9Aw==","signatures":[{"sig":"MEQCIDgsCD0WpwqSDX5bC1GcRD6Axz9Xv6IWwbXeYbMiWu9NAiBhEFBX31wtWg2hqFJIq00eyTs/uNhm/v6lFeEPyMyVlQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":956713},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"3904a4644e4e06c7192b5f39be8f7df63d0f7e4a","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.3904a46.0+3904a46","web3-errors":"1.1.5-dev.3904a46.0+3904a46","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.3904a46.0_1716349111129_0.8389580621075876","host":"s3://npm-registry-packages"}},"2.0.6-dev.ac2e180.0":{"name":"web3-validator","version":"2.0.6-dev.ac2e180.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.ac2e180.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"cb1b4bdd6cb0974fd7628109340726e35f278c8b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.ac2e180.0.tgz","fileCount":184,"integrity":"sha512-aKl1KhIFcjrK5CYDxqmZhGXo/QrzUXujg5LDtWBboDR7ukK/VDVUJUZtyGKJHADA2OvclRTuLVzUPmkb9FXF1A==","signatures":[{"sig":"MEQCIBhcZQ95bDi6HI9Qa5XuodqSlS6m1TcXAwgsZ/sD87eSAiAqXmTjxclua1jQ90WYVGl88qHKFH/DTnsN3lB058riIA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"ac2e180c3db5e734c40f994edc39382542afc289","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.ac2e180.0+ac2e180","web3-errors":"1.1.5-dev.ac2e180.0+ac2e180","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.ac2e180.0_1716392217388_0.7169628572306554","host":"s3://npm-registry-packages"}},"2.0.6-dev.e0fc158.0":{"name":"web3-validator","version":"2.0.6-dev.e0fc158.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.e0fc158.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"d56e8f576210691077e5a9d44f885e8333c3bae3","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.e0fc158.0.tgz","fileCount":184,"integrity":"sha512-8Om8ajfN4Ylqi6viiF+GYG7iQM1Ns7vO1Hvk4t5wgx1iRkOnyFRUE/SYWa6Ba/Ch2uun6u43F3IxvbqxOzjPrQ==","signatures":[{"sig":"MEQCIDbBtEyDP7CHyC5io4nYHgHj9UbtkAH6jRHkiDZT0voLAiBSWPm8ly2CPo6r7DjoVLQAwVhmRAtx/3LpU1o80TG8vg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"e0fc158e7c18ab97b66e415653faad46491823c0","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.e0fc158.0+e0fc158","web3-errors":"1.1.5-dev.e0fc158.0+e0fc158","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.e0fc158.0_1716393608072_0.24061188207462236","host":"s3://npm-registry-packages"}},"2.0.6-dev.f4e55bd.0":{"name":"web3-validator","version":"2.0.6-dev.f4e55bd.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6-dev.f4e55bd.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"0d233822646088721f7b0d4f29b752605060c6e4","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6-dev.f4e55bd.0.tgz","fileCount":184,"integrity":"sha512-A2aoDh4NCYYqCD2imZXmIhfmfFmaWb8LAqdtgUXDGAPdnKiETF9on2uoEu08BPERv8iL2Ki7MqLCqpvSedCGmA==","signatures":[{"sig":"MEQCID/Y2HKxXcjSxOIVJ81fRGQEz5+LvU+Lzm4Q9mCyR8WmAiA1Ejq0amg+imFKf+fzCzKVFKX536XVZFOT2FO8hubHcw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f4e55bd30441b8e69c822d5ff1c6041291fd5a09","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.f4e55bd.0+f4e55bd","web3-errors":"1.1.5-dev.f4e55bd.0+f4e55bd","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6-dev.f4e55bd.0_1716395277693_0.11609923000109035","host":"s3://npm-registry-packages"}},"2.0.7-dev.fd2982d.0":{"name":"web3-validator","version":"2.0.7-dev.fd2982d.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.7-dev.fd2982d.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"f643ed6baf6bec602f9ae6e86fcdad0fb57ddcc1","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.fd2982d.0.tgz","fileCount":184,"integrity":"sha512-PO0EeW8F3TBIBcK+nfpxIIJoXUVmJZpsLKKtaLnoZLw/Btm+z9VXg6UiyJH/iU0zJQItbjUF0vaCVubKV49esw==","signatures":[{"sig":"MEYCIQDIXgOFv0FT5y0EkFIQ5JAX6SSIty0CGaaUMZw9cq7VBQIhAPcqy3vyeDWrOERY4r1UuGW4/UBw0TNS30OGfIY0IYb8","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"fd2982d1afacd6bf89084324b478ec04af18052e","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.fd2982d.0+fd2982d","web3-errors":"1.2.1-dev.fd2982d.0+fd2982d","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.7-dev.fd2982d.0_1716476383352_0.44266434466525295","host":"s3://npm-registry-packages"}},"2.0.6":{"name":"web3-validator","version":"2.0.6","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.6","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"a0cdaa39e1d1708ece5fae155b034e29d6a19248","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.6.tgz","fileCount":184,"integrity":"sha512-qn9id0/l1bWmvH4XfnG/JtGKKwut2Vokl6YXP5Kfg424npysmtRLe9DgiNBM9Op7QL/aSiaA0TVXibuIuWcizg==","signatures":[{"sig":"MEUCIQCRvVdnqa5Br6Prhw2noaPml2e0h3euBiUm6n8zoQ+TUwIgZb5TQyqC71HMlCuHkT3xk6MrBeAExoyV2Mb07w5wCEI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957213},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"506799287d70f866a5ff65df611a8be7161fae51","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v18.18.2+x64 (darwin)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"18.18.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"^1.6.0","web3-errors":"^1.2.0","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.6_1716476514933_0.6668718794915587","host":"s3://npm-registry-packages"}},"2.0.7-dev.7537f03.0":{"name":"web3-validator","version":"2.0.7-dev.7537f03.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.7-dev.7537f03.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"b07d0de8488bab86df402dba57397d3d5209de3b","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.7537f03.0.tgz","fileCount":184,"integrity":"sha512-LVm91eJaJFAXnauq8OEJxcguwJz/rRljGJnP1wtSFB6aIxX0wwocCvv3mw6tflmIh0w8l7HdV/Om56bR8x5Hew==","signatures":[{"sig":"MEUCIEmbiBQMXk/clvu0UMKxGhf8WDSzXFujJb/2kfnUSzpeAiEA1hkUS8MQpbppAU/H+h4Y3CuhM9PTgRESn4XyJr6mx6s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"7537f03db3a2932a4f5c6f13ada1c3d6ca0217cd","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.7537f03.0+7537f03","web3-errors":"1.2.1-dev.7537f03.0+7537f03","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.7-dev.7537f03.0_1716478526574_0.8791021596210873","host":"s3://npm-registry-packages"}},"2.0.7-dev.692987a.0":{"name":"web3-validator","version":"2.0.7-dev.692987a.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.7-dev.692987a.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"30d462d2d2ae1b7a26fecf7fa10487ddf49019c8","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.692987a.0.tgz","fileCount":184,"integrity":"sha512-pMlbRranUQptmayjvny4NYY4EjLPQoogqUbN/LR5Q+pujacf4ghhXh4vO2M9CFHQ+OQRk8PMAwU2t9C3ory2zw==","signatures":[{"sig":"MEQCIBDku4NPzCPorwXfpAA0DbKPVVpv/ss8DeAjHtMfTQn3AiAHR/3SAH5mAlAGE6EhahOE+VLTOUCJN4pRfNibxpjmfA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"692987a78dc1690bcd3917c4ff3b3264e6a35274","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.692987a.0+692987a","web3-errors":"1.2.1-dev.692987a.0+692987a","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.7-dev.692987a.0_1716558403096_0.1922641897459556","host":"s3://npm-registry-packages"}},"2.0.7-dev.962b99f.0":{"name":"web3-validator","version":"2.0.7-dev.962b99f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.7-dev.962b99f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5c07e9bca0b36cee5d6f12450c2213c5d3844be3","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.962b99f.0.tgz","fileCount":184,"integrity":"sha512-MnwatjKGFf8UwLNpMvhBBFkyf+DkzWtZeEX0dZMg9XicMUD3zEAhiYKGzWn3DAenQI2VpZLtfpr6pGiOxYitxg==","signatures":[{"sig":"MEQCICC/mLW/JxfGij+thN/fVKqbQWSCkQW7i7ilgXxcwnx0AiAUYRdPpxiflGrV1F/88f40uBlNJjChBBhmbt7vVeyP8g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"962b99fe54ede0d573dff69a7d1667b081ef3fd0","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.962b99f.0+962b99f","web3-errors":"1.2.1-dev.962b99f.0+962b99f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.7-dev.962b99f.0_1716565258445_0.8800602570562992","host":"s3://npm-registry-packages"}},"2.0.7-dev.22c07ad.0":{"name":"web3-validator","version":"2.0.7-dev.22c07ad.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.7-dev.22c07ad.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"5e5d9362c8f7d76f34c359a0d78eff45c153b547","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.22c07ad.0.tgz","fileCount":184,"integrity":"sha512-zYVAVEVzacfrhsgIqtJ7HOkmuXb42aH0Cyi/7ewGO0c5WAwmkAtWBq2Ujq/dISz6xPeAoTkerWDQoVXFtHmM9w==","signatures":[{"sig":"MEUCIQD1dJaHDtnvn2Wez2AChtDImTToCpXyC7j/85GX1z0HrwIgXSOGV4iAHG9jBWpfr6jJg+aH0f204aH48JDJj7iA/j8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"22c07ad7b00745f1b046e31580a343eca3b59c76","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.22c07ad.0+22c07ad","web3-errors":"1.2.1-dev.22c07ad.0+22c07ad","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.7-dev.22c07ad.0_1716811317516_0.4604079923931983","host":"s3://npm-registry-packages"}},"2.0.7-dev.683be62.0":{"name":"web3-validator","version":"2.0.7-dev.683be62.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.7-dev.683be62.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"e5f83c30fa7c52a341041542993f4fb997774f7a","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.683be62.0.tgz","fileCount":184,"integrity":"sha512-4jPXpsr4Tzm1sGelqXMg0qbhZxByxu/m+bJJN7LrISVPV7CMVoUvACWXU/Xv/ZqPlQQYi0kTlkzm4U3kqMbWlA==","signatures":[{"sig":"MEYCIQCKLX0088/o3Ih1QzJT4KG7sA0PGaPpJh039TxkZSOVzgIhAN3+O4ZIWaQX4d3LFZKH1AoIqPsmlpiT8h73+zwxuuU/","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"683be62b176e87230c125c7aa52dd25edee80ae7","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.683be62.0+683be62","web3-errors":"1.2.1-dev.683be62.0+683be62","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.7-dev.683be62.0_1716900769734_0.15407206408376628","host":"s3://npm-registry-packages"}},"2.0.7-dev.7084665.0":{"name":"web3-validator","version":"2.0.7-dev.7084665.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.7-dev.7084665.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"43ac245d3c7140dcc8085916aa7542323b11f691","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.7084665.0.tgz","fileCount":184,"integrity":"sha512-dRU9lO3TKbiz7PePniA5xbJMmzzHAKvmGzl0GXft3E3U2C/ld2eQwfUayr1rr8PMif+cS6oooKdScNwAB9mbcw==","signatures":[{"sig":"MEQCIBQMtPpg4mXLCcRS4sICWtBVeM1lCv3yjJKVrWGh/NDtAiA3osJ1LfRrJF3pcasm1KCjnafsKmaCIriKlghm3kOIGg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"70846654d00797a0eb1f23b33710e85a6cf5aacc","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.7084665.0+7084665","web3-errors":"1.2.1-dev.7084665.0+7084665","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.7-dev.7084665.0_1716994676655_0.30619484347752546","host":"s3://npm-registry-packages"}},"2.0.7-dev.f687df6.0":{"name":"web3-validator","version":"2.0.7-dev.f687df6.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.7-dev.f687df6.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"23c06effd835692cdd835198edd7179e19e56448","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.f687df6.0.tgz","fileCount":184,"integrity":"sha512-xCsX0Wr20lGPP4z66VeQpQoFDrMKh/QwU+eQ1p8BFpynYM4pPIq+PP8+X5mCzG/qbF6Q6crarBcszXH9DbCpkw==","signatures":[{"sig":"MEUCIQCcuRAwPuECPp7WEzr6hXnqxriGd8wrnd7ZEHhq1R1kVwIgMndufabGgDzh8NhJPdyQtJ6qO7Hny/e+NO9ZnJesVUc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"f687df68be35de271e911f39cddf70abe58ec1f8","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.f687df6.0+f687df6","web3-errors":"1.2.1-dev.f687df6.0+f687df6","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.7-dev.f687df6.0_1717013412680_0.5691969590814279","host":"s3://npm-registry-packages"}},"2.0.7-dev.b63af9f.0":{"name":"web3-validator","version":"2.0.7-dev.b63af9f.0","author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","_id":"web3-validator@2.0.7-dev.b63af9f.0","maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"dist":{"shasum":"67ad07449efe551ab82bcf239f8e62fafa9169ba","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.b63af9f.0.tgz","fileCount":184,"integrity":"sha512-jlg7txw+KEyT300bO1v0hz6tdIOCKzGYSHgMVvPtA01ZtrsxqeveBO2mTm+5jf9fYqUIwMWXirsWfumINdtO3w==","signatures":[{"sig":"MEYCIQDYRA8YOptD/7UqvU2Ps7AIZmHS4ep114o1IaW3/6PCGAIhANWzVkkh3Q3BcpPLmDCksgx/b9cNnqv7yLS9p4Ftgt0f","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":957277},"main":"./lib/commonjs/index.js","types":"./lib/commonjs/index.d.ts","module":"./lib/esm/index.js","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","engines":{"npm":">=6.12.0","node":">=14"},"exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"gitHead":"b63af9f10c57b9b0dfc920f664ea3123b9ed1c06","scripts":{"lint":"eslint --cache --cache-strategy content --ext .ts .","test":"jest --config=./test/unit/jest.config.js","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","clean":"rimraf dist && rimraf lib","format":"prettier --write '**/*'","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","lint:fix":"eslint --fix --ext .js,.ts .","prebuild":"yarn clean","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:web":"npx webpack","test:unit":"jest --config=./test/unit/jest.config.js","test:watch":"npm test -- --watch","build:check":"node -e \"require('./lib')\"","build:types":"tsc --build tsconfig.types.json","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text"},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"JSON-Schema compatible validator for web3","directories":{},"_nodeVersion":"16.20.2","dependencies":{"zod":"^3.21.4","util":"^0.12.5","web3-types":"1.6.1-dev.b63af9f.0+b63af9f","web3-errors":"1.2.1-dev.b63af9f.0+b63af9f","ethereum-cryptography":"^2.0.0"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","eslint":"^8.20.0","ts-jest":"^29.1.1","prettier":"^2.7.1","typescript":"^4.7.4","@types/jest":"^28.1.6","jest-extended":"^3.0.1","eslint-plugin-import":"^2.26.0","eslint-config-prettier":"^8.5.0","eslint-config-base-web3":"0.1.0","@typescript-eslint/parser":"^5.30.7","@typescript-eslint/eslint-plugin":"^5.30.7"},"_npmOperationalInternal":{"tmp":"tmp/web3-validator_2.0.7-dev.b63af9f.0_1717075079106_0.039315092471310153","host":"s3://npm-registry-packages"}},"2.0.7-dev.9086b98.0":{"name":"web3-validator","version":"2.0.7-dev.9086b98.0","description":"JSON-Schema compatible validator for web3","main":"./lib/commonjs/index.js","module":"./lib/esm/index.js","exports":{".":{"types":"./lib/types/index.d.ts","import":"./lib/esm/index.js","require":"./lib/commonjs/index.js"}},"repository":{"type":"git","url":"git+https://github.com/ChainSafe/web3.js.git"},"author":{"name":"ChainSafe Systems"},"license":"LGPL-3.0","engines":{"node":">=14","npm":">=6.12.0"},"scripts":{"clean":"rimraf dist && rimraf lib","prebuild":"yarn clean","build":"concurrently --kill-others-on-fail \"yarn:build:*(!check|web)\"","build:cjs":"tsc --build tsconfig.cjs.json && echo '{\"type\": \"commonjs\"}' > ./lib/commonjs/package.json","build:esm":"tsc --build tsconfig.esm.json && echo '{\"type\": \"module\"}' > ./lib/esm/package.json","build:types":"tsc --build tsconfig.types.json","build:web":"npx webpack","build:check":"node -e \"require('./lib')\"","lint":"eslint --cache --cache-strategy content --ext .ts .","lint:fix":"eslint --fix --ext .js,.ts .","format":"prettier --write '**/*'","test":"jest --config=./test/unit/jest.config.js","test:coverage:unit":"jest --config=./test/unit/jest.config.js --coverage=true --coverage-reporters=text","test:coverage:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests --coverage=true --coverage-reporters=text","test:ci":"jest --coverage=true --coverage-reporters=json --verbose","test:watch":"npm test -- --watch","test:unit":"jest --config=./test/unit/jest.config.js","test:integration":"jest --config=./test/integration/jest.config.js --passWithNoTests"},"dependencies":{"ethereum-cryptography":"^2.0.0","util":"^0.12.5","web3-errors":"1.2.1-dev.9086b98.0+9086b98","web3-types":"1.6.1-dev.9086b98.0+9086b98","zod":"^3.21.4"},"devDependencies":{"@types/jest":"^28.1.6","@typescript-eslint/eslint-plugin":"^5.30.7","@typescript-eslint/parser":"^5.30.7","eslint":"^8.20.0","eslint-config-base-web3":"0.1.0","eslint-config-prettier":"^8.5.0","eslint-plugin-import":"^2.26.0","jest":"^29.7.0","jest-extended":"^3.0.1","prettier":"^2.7.1","ts-jest":"^29.1.1","typescript":"^4.7.4"},"gitHead":"9086b98f25ef7ab9de0e699c00f462dca3e66f37","types":"./lib/commonjs/index.d.ts","readme":"<p align=\"center\">\n  <img src=\"assets/logo/web3js.jpg\" width=\"500\" alt=\"web3.js\" />\n</p>\n\n# web3-validator\n\n![ES Version](https://img.shields.io/badge/ES-2020-yellow)\n![Node Version](https://img.shields.io/badge/node-14.x-green)\n[![NPM Package][npm-image]][npm-url]\n[![Downloads][downloads-image]][npm-url]\n\nThis is a sub-package of [web3.js][repo].\n\n`web3-validator` contains functions for validating objects.\n\n## Installation\n\nYou can install the package either using [NPM](https://www.npmjs.com/package/web3-validator) or using [Yarn](https://yarnpkg.com/package/web3-validator)\n\n### Using NPM\n\n```bash\nnpm install web3-validator\n```\n\n### Using Yarn\n\n```bash\nyarn add web3-validator\n```\n\n## Getting Started\n\n-   :writing_hand: If you have questions [submit an issue](https://github.com/ChainSafe/web3.js/issues/new) or join us on [Discord](https://discord.gg/yjyvFRP)\n    ![Discord](https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord)\n\n### Usage\n\nYou can use the validator by importing as and using to validate;\n\n```ts\nimport { validator } from 'web3-validator';\n\n// To validate and throw\nvalidator.validate(['uint8', 'string'], [val1, val2]);\n\n// To validate and return error\nconst errors = validator.validate(['uint8', 'string'], [val1, val2], { silent: true });\n```\n\nTo see more examples of schema you can use to validate check [following file](./test/fixtures/abi_to_json_schema.ts).\n\nFollowing eth types are supported to validate.\n\n| Type  | Input As                        | Description                                                                                                                                               |\n| ----- | ------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| uint  | `number`, `string`, `HexString` | Unsigned integer, all ethereum compatible variants are also supported e.g. `uint8`, `uint256`. You can also use array specifiers as `uint[]` or `uint[2]` |\n| int   | `number`, `string`, `HexString` | Signed integer, all ethereum compatible variants are also supported e.g. `int8`, `int256`. You can also use array specifiers as `int[]` or `int[2]`       |\n| bytes | `HexString`, `Uint8Array`       | Raw bytes. You can also use fixed length bytes as `bytes[2]`                                                                                              |\n\n| string | `string` | String values |\n| address | `string`, `HexString` | Ethereum network compatible address |\n| bloom | `string`, `HexString` | Check if a given string is a Eth bloom |\n| tuple | `array` | You can specify any tuple as nested arrays. e.g. `['uint', 'string']`. For a custom tuple or array tuple you can use syntax e.g. `['tuple[3]', ['uint', 'string']]` |\n\nFor the ethereum compatible data values should be passed as arrays e.g. for schema `['uint', 'string']` value should be passed as `[2, 'my-string']`.\n\nYou can also pass full ABI schema for the validation. e.g.\n\n```json\n[{ \"name\": \"owner\", \"type\": \"address\" }]\n```\n\nThe implementation of the validator is extension of [JSON-Schema-Draft07](https://json-schema.org/draft-07/json-schema-release-notes.html) with a custom keyword `eth`. So you can use JSON-Schema compatible schema to validate any object based data as well.\n\n## Prerequisites\n\n-   :gear: [NodeJS](https://nodejs.org/) (LTS/Fermium)\n-   :toolbox: [Yarn](https://yarnpkg.com/)/[Lerna](https://lerna.js.org/)\n\n## Package.json Scripts\n\n| Script           | Description                                        |\n| ---------------- | -------------------------------------------------- |\n| clean            | Uses `rimraf` to remove `dist/`                    |\n| build            | Uses `tsc` to build package and dependent packages |\n| lint             | Uses `eslint` to lint package                      |\n| lint:fix         | Uses `eslint` to check and fix any warnings        |\n| format           | Uses `prettier` to format the code                 |\n| test             | Uses `jest` to run unit tests                      |\n| test:integration | Uses `jest` to run tests under `/test/integration` |\n| test:unit        | Uses `jest` to run tests under `/test/unit`        |\n\n[docs]: https://docs.web3js.org/\n[repo]: https://github.com/web3/web3.js/tree/4.x/packages/web3-validator\n[npm-image]: https://img.shields.io/github/package-json/v/web3/web3.js/4.x?filename=packages%2Fweb3-validator%2Fpackage.json\n[npm-url]: https://npmjs.org/package/web3-validator\n[downloads-image]: https://img.shields.io/npm/dm/web3-validator?label=npm%20downloads\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"homepage":"https://github.com/ChainSafe/web3.js#readme","_id":"web3-validator@2.0.7-dev.9086b98.0","_nodeVersion":"16.20.2","_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","dist":{"integrity":"sha512-gUwuV0CGCOL77fs+2JK3DERUK1dWWYzvNRoW53DolAdukGZG8M8DY3Pp557fSM2DC3kxxOPgJ2AMBldbvsvpqQ==","shasum":"5b0a2ee21a83f55944b51e9d6b6993d8bb1d18bd","tarball":"https://registry.npmjs.org/web3-validator/-/web3-validator-2.0.7-dev.9086b98.0.tgz","fileCount":184,"unpackedSize":957277,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA+cqNui1VkQFNB2lgkncNRsHyofRzV3ooBiJdhMysRVAiEApOCYI6Bi/l1PlEtoub8YlpQrUXmfHSQGKUeIAHFTInk="}]},"_npmUser":{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},"directories":{},"maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/web3-validator_2.0.7-dev.9086b98.0_1717075553810_0.3243285736914865"},"_hasShrinkwrap":false}},"time":{"created":"2022-08-24T20:53:42.624Z","modified":"2024-05-30T13:25:54.273Z","0.1.0-alpha.0":"2022-08-24T20:53:42.959Z","0.1.1-alpha.0":"2022-08-25T20:14:52.287Z","0.1.1-alpha.1":"2022-11-03T16:56:53.081Z","0.1.1-alpha.2":"2022-12-08T19:24:53.418Z","0.1.1-alpha.3":"2023-01-05T00:20:33.760Z","0.1.1-alpha.4":"2023-01-12T01:33:45.189Z","0.1.1-alpha.5":"2023-01-14T02:09:18.444Z","1.0.0-rc.0":"2023-03-10T16:43:48.799Z","1.0.0-rc.1":"2023-04-20T11:19:23.869Z","1.0.0-rc.2":"2023-06-05T12:36:14.603Z","1.0.0":"2023-06-07T14:08:05.403Z","1.0.1-dev.af57eae.0":"2023-06-09T08:46:11.669Z","1.0.1-dev.f8a2533.0":"2023-06-10T15:25:07.810Z","1.0.1-dev.2130d22.0":"2023-06-15T10:32:12.784Z","1.0.1-dev.ab0f4cb.0":"2023-06-20T09:07:42.320Z","1.0.1-dev.023f02d.0":"2023-06-20T09:09:02.337Z","1.0.1-dev.a2a232f.0":"2023-06-21T03:08:59.077Z","1.0.1-dev.51a59f9.0":"2023-06-21T16:03:31.599Z","1.0.1-dev.3f49e18.0":"2023-06-24T01:09:04.906Z","1.0.1-dev.e8d579c.0":"2023-06-24T01:11:13.825Z","1.0.1-dev.60b8ba9.0":"2023-06-27T02:05:36.379Z","1.0.1":"2023-06-27T12:00:34.277Z","1.0.2-dev.a26a888.0":"2023-06-27T12:17:33.338Z","1.0.2-dev.d12dc7e.0":"2023-06-27T19:16:40.975Z","1.0.2-dev.602dada.0":"2023-07-03T10:42:55.415Z","1.0.2":"2023-07-11T14:44:30.649Z","1.0.3-dev.ebd0c57.0":"2023-07-11T14:59:37.581Z","1.0.3-dev.51bc03d.0":"2023-07-12T18:57:15.139Z","1.0.3-dev.e143157.0":"2023-07-14T15:08:43.546Z","1.0.3-dev.8958413.0":"2023-07-14T15:55:26.582Z","1.0.3-dev.ad377d1.0":"2023-07-14T16:01:48.342Z","1.0.3-dev.b93934a.0":"2023-07-17T22:35:39.920Z","1.0.3-dev.1361787.0":"2023-07-18T09:49:53.589Z","1.0.3-dev.7d0a91d.0":"2023-07-19T01:44:32.944Z","1.0.3-dev.933ef51.0":"2023-07-20T00:34:30.486Z","1.0.3-dev.f5b4d7d.0":"2023-07-20T14:45:03.569Z","1.0.3-dev.6da17e1.0":"2023-07-24T08:30:33.364Z","1.0.3-dev.ed2770c.0":"2023-07-24T17:24:01.536Z","1.0.3-dev.0ee9bb4.0":"2023-07-25T15:28:58.767Z","1.0.3-dev.4310419.0":"2023-08-01T08:25:05.571Z","1.0.3-dev.b771112.0":"2023-08-01T10:06:42.168Z","1.0.3-dev.0e5c53c.0":"2023-08-02T10:50:00.967Z","1.0.3-dev.51d087e.0":"2023-08-03T15:09:14.860Z","2.0.0-rc.0":"2023-08-09T15:14:14.514Z","2.0.0":"2023-08-15T08:12:25.303Z","2.0.1-dev.c41d356.0":"2023-08-15T08:31:43.705Z","2.0.1-dev.f4fd498.0":"2023-08-15T08:32:58.428Z","2.0.1-dev.a4cae6f.0":"2023-08-15T08:35:49.020Z","2.0.1-dev.622174c.0":"2023-08-15T15:58:19.929Z","2.0.1-dev.7a38fee.0":"2023-08-17T15:28:26.978Z","2.0.1-dev.d41a49e.0":"2023-08-17T20:05:41.258Z","2.0.1-dev.ec6e117.0":"2023-08-17T20:08:47.601Z","2.0.1-dev.86f0cdb.0":"2023-08-18T11:16:44.154Z","2.0.1-dev.1cdc86c.0":"2023-08-18T23:25:13.046Z","2.0.1":"2023-08-21T16:27:06.482Z","2.0.2-dev.9ad39bd.0":"2023-08-21T16:42:48.790Z","2.0.2-dev.a325689.0":"2023-08-21T17:08:39.784Z","2.0.2-dev.3ab3b39.0":"2023-09-12T08:57:27.326Z","2.0.2-dev.da3e2f5.0":"2023-09-12T12:21:37.480Z","2.0.2-dev.054033f.0":"2023-09-15T14:29:53.166Z","2.0.2-dev.e4ba45c.0":"2023-09-15T15:01:19.591Z","2.0.2-dev.8010a6d.0":"2023-09-18T16:02:17.470Z","2.0.2":"2023-09-19T14:00:13.796Z","2.0.3-dev.54c5ed0.0":"2023-09-19T14:15:24.841Z","2.0.3-dev.2b445bf.0":"2023-09-19T14:57:06.314Z","2.0.3-dev.66ddb7e.0":"2023-09-21T11:08:21.417Z","2.0.3-dev.171b413.0":"2023-09-21T15:12:49.664Z","2.0.3-dev.d036166.0":"2023-09-22T01:42:28.371Z","2.0.3-dev.80adabe.0":"2023-09-23T14:12:55.613Z","2.0.3-dev.b8fa712.0":"2023-09-27T07:53:02.531Z","2.0.3-dev.c490c18.0":"2023-09-28T11:32:01.321Z","2.0.3-dev.3060994.0":"2023-09-28T18:08:12.685Z","2.0.3-dev.4b445ae.0":"2023-09-29T21:37:44.520Z","2.0.3-dev.bfcbea8.0":"2023-10-02T14:44:51.473Z","2.0.3-dev.90d78c1.0":"2023-10-02T15:11:05.112Z","2.0.3-dev.9b03f9d.0":"2023-10-04T09:26:58.484Z","2.0.3-dev.80986bb.0":"2023-10-04T14:20:18.916Z","2.0.3-dev.0e78235.0":"2023-10-05T14:01:28.448Z","2.0.3-dev.ae98628.0":"2023-10-09T16:53:16.781Z","2.0.3-dev.4879326.0":"2023-10-09T19:25:12.449Z","2.0.3-dev.9a5fd87.0":"2023-10-10T13:47:41.183Z","2.0.3-dev.b38f00d.0":"2023-10-12T15:05:13.646Z","2.0.3-dev.6e43d1b.0":"2023-10-12T18:13:09.940Z","2.0.3-dev.e760667.0":"2023-10-13T02:01:08.174Z","2.0.3-dev.42502b6.0":"2023-10-16T11:02:17.690Z","2.0.3-dev.10d1f12.0":"2023-10-16T17:21:27.289Z","2.0.3-dev.70d1957.0":"2023-10-17T01:10:49.434Z","2.0.3-dev.226b3ba.0":"2023-10-17T10:26:12.915Z","2.0.3-dev.09f4c8b.0":"2023-10-17T17:13:05.792Z","2.0.3":"2023-10-18T13:44:28.983Z","2.0.4-dev.bd3b9a0.0":"2023-10-18T14:03:27.015Z","2.0.4-dev.7bee9bc.0":"2023-10-18T16:47:03.847Z","2.0.4-dev.6791e60.0":"2023-10-23T13:38:34.939Z","2.0.4-dev.90b8581.0":"2023-10-23T14:36:06.938Z","2.0.4-dev.a0d6730.0":"2023-10-23T14:46:32.373Z","2.0.4-dev.f860b04.0":"2023-10-23T15:14:23.413Z","2.0.4-dev.8c643c2.0":"2023-10-25T16:33:13.808Z","2.0.4-dev.41f39c0.0":"2023-10-26T19:31:50.574Z","2.0.4-dev.116b7bb.0":"2023-10-31T11:34:28.041Z","2.0.4-dev.f6c7fca.0":"2023-10-31T13:36:28.705Z","2.0.4-dev.b05345b.0":"2023-11-01T15:30:08.712Z","2.0.4-dev.f9bcac9.0":"2023-11-02T10:03:18.997Z","2.0.4-dev.72e9bbd.0":"2023-11-03T12:39:18.324Z","2.0.4-dev.11f20b2.0":"2023-11-06T17:16:19.131Z","2.0.4-dev.41dbf2a.0":"2023-11-06T17:24:23.859Z","2.0.4-dev.332c18c.0":"2023-11-06T17:53:58.901Z","2.0.4-dev.4778a0c.0":"2023-11-06T22:02:47.626Z","2.0.4-dev.09c8ad0.0":"2023-11-07T11:15:40.235Z","2.0.4-dev.8e3e676.0":"2023-11-10T09:13:13.537Z","2.0.4-dev.2c132c5.0":"2023-11-16T10:34:53.851Z","2.0.4-dev.0dec262.0":"2023-11-17T08:58:08.728Z","2.0.4-dev.bcd0706.0":"2023-11-20T13:29:19.155Z","2.0.4-dev.b9da5a5.0":"2023-11-20T13:40:05.305Z","2.0.4-dev.6cc86b3.0":"2023-11-20T14:50:15.634Z","2.0.4-dev.ef6f04e.0":"2023-11-20T17:11:39.611Z","2.0.4-dev.be86e25.0":"2023-11-20T17:23:09.186Z","2.0.4-dev.d8b8e18.0":"2023-11-20T18:11:56.091Z","2.0.4-dev.2c60685.0":"2023-11-20T18:32:31.369Z","2.0.4-dev.af91519.0":"2023-11-20T20:03:54.810Z","2.0.4-dev.2785782.0":"2023-11-20T21:38:52.631Z","2.0.4-dev.f8d8774.0":"2023-11-23T12:57:58.523Z","2.0.4-dev.20cc5da.0":"2023-11-23T17:01:02.917Z","2.0.4-dev.3bda14d.0":"2023-11-27T17:18:50.365Z","2.0.4-dev.e6d8c14.0":"2023-11-28T15:04:50.542Z","2.0.4-dev.b3ccd5c.0":"2023-11-28T20:19:58.315Z","2.0.4-dev.7461c8e.0":"2023-12-01T14:27:37.339Z","2.0.4-dev.119dfa5.0":"2023-12-04T13:58:29.027Z","2.0.4-dev.5aa8b7f.0":"2023-12-04T22:25:42.175Z","2.0.4-dev.5afcb54.0":"2023-12-05T03:16:31.390Z","2.0.4-dev.cdd99e7.0":"2023-12-05T03:53:53.234Z","2.0.4-dev.b819ee4.0":"2023-12-05T10:43:17.796Z","2.0.4-dev.f1c6916.0":"2023-12-05T15:26:40.973Z","2.0.4-dev.43b11b8.0":"2023-12-11T18:36:26.952Z","2.0.4-dev.80c2e1d.0":"2023-12-12T12:42:56.543Z","2.0.4-dev.b35eca1.0":"2023-12-12T13:30:45.915Z","2.0.4-dev.c858390.0":"2023-12-12T13:33:45.598Z","2.0.4-dev.a4f2f8c.0":"2023-12-12T14:12:47.926Z","2.0.4-dev.59fc438.0":"2023-12-13T15:32:11.692Z","2.0.4-dev.e1080d9.0":"2023-12-13T17:25:46.987Z","2.0.4-dev.e442fd2.0":"2023-12-14T05:41:23.631Z","2.0.4-dev.f7d9349.0":"2023-12-14T16:09:12.771Z","2.0.4-dev.fa4c72b.0":"2023-12-15T16:25:54.600Z","2.0.4-dev.c097b9a.0":"2023-12-15T16:41:12.596Z","2.0.4-dev.6b2dbe3.0":"2023-12-16T03:56:04.728Z","2.0.4-dev.6c075db.0":"2024-01-03T11:52:39.729Z","2.0.4-dev.f9468a8.0":"2024-01-04T11:10:32.537Z","2.0.4-dev.0c67cc6.0":"2024-01-04T14:15:19.128Z","2.0.4-dev.df594c9.0":"2024-01-05T09:58:05.463Z","2.0.4-dev.23d69ba.0":"2024-01-05T17:07:23.821Z","2.0.4-dev.65a9862.0":"2024-01-07T20:48:58.555Z","2.0.4-dev.2a40b66.0":"2024-01-08T09:13:01.156Z","2.0.4-dev.b188714.0":"2024-01-08T11:05:14.434Z","2.0.4-dev.7c33cc0.0":"2024-01-08T14:31:41.632Z","2.0.4-dev.cc7ff1f.0":"2024-01-08T19:50:06.462Z","2.0.4-dev.762c298.0":"2024-01-09T09:04:12.671Z","2.0.4-dev.3cfe56f.0":"2024-01-09T11:50:07.705Z","2.0.4-dev.1eb07d1.0":"2024-01-09T19:28:37.934Z","2.0.4-dev.a3fe342.0":"2024-01-15T14:01:05.102Z","2.0.4-dev.882631c.0":"2024-01-15T14:37:59.409Z","2.0.4-dev.5161642.0":"2024-01-15T15:20:18.778Z","2.0.4":"2024-01-17T17:31:07.335Z","2.0.5-dev.7b97011.0":"2024-01-17T17:42:20.561Z","2.0.5-dev.727c9fc.0":"2024-01-23T06:48:15.829Z","2.0.5-dev.b49094b.0":"2024-01-23T07:46:54.768Z","2.0.5-dev.028dc20.0":"2024-01-23T18:28:11.629Z","2.0.5-dev.aac2420.0":"2024-01-24T18:31:13.611Z","2.0.5-dev.7d7a9ea.0":"2024-01-29T10:33:53.244Z","2.0.5-dev.a72e99a.0":"2024-01-29T21:20:32.360Z","2.0.5-dev.95b37d8.0":"2024-02-01T07:30:32.380Z","2.0.5-dev.42ec398.0":"2024-02-01T15:32:28.973Z","2.0.5-dev.e5673ca.0":"2024-02-05T15:30:25.515Z","2.0.5-dev.a6b685e.0":"2024-02-05T15:37:28.308Z","2.0.5-dev.ed1460c.0":"2024-02-06T20:46:17.381Z","2.0.5-dev.998954f.0":"2024-02-07T15:09:49.153Z","2.0.5-dev.0881fe1.0":"2024-02-08T13:41:30.301Z","2.0.5-dev.0a8f9e4.0":"2024-02-08T14:40:42.617Z","2.0.5-dev.9f31612.0":"2024-02-08T16:26:59.538Z","2.0.5-dev.6da7379.0":"2024-02-09T12:39:17.858Z","2.0.5-dev.d8b64a8.0":"2024-02-09T16:13:36.647Z","2.0.5-dev.9d65c38.0":"2024-02-12T14:00:24.266Z","2.0.5-dev.a0d4d2e.0":"2024-02-12T14:26:01.090Z","2.0.5-dev.9023511.0":"2024-02-12T16:33:35.117Z","2.0.5-dev.e774646.0":"2024-02-14T09:45:50.810Z","2.0.5-dev.f696e47.0":"2024-02-15T15:54:13.853Z","2.0.5-dev.ec65468.0":"2024-02-16T17:18:37.200Z","2.0.5-dev.c5cecaf.0":"2024-02-19T12:43:59.383Z","2.0.5-dev.a2d9cb4.0":"2024-02-19T12:44:26.400Z","2.0.5-dev.95807a6.0":"2024-02-19T13:23:32.868Z","2.0.5-dev.afece40.0":"2024-02-27T14:27:40.898Z","2.0.5-dev.cf4b93f.0":"2024-02-27T14:42:57.339Z","2.0.5-dev.b4c92e1.0":"2024-02-27T14:58:11.541Z","2.0.5-dev.86447cd.0":"2024-02-27T15:40:16.143Z","2.0.5-dev.35cb1b8.0":"2024-02-28T09:28:00.685Z","2.0.5-dev.b25b883.0":"2024-02-28T16:26:54.960Z","2.0.5-dev.ab1b250.0":"2024-02-28T16:43:40.592Z","2.0.5-dev.0e59f28.0":"2024-02-29T17:55:25.579Z","2.0.5-dev.bd6cc71.0":"2024-03-01T21:14:17.882Z","2.0.5-dev.8ed041c.0":"2024-03-05T15:39:29.313Z","2.0.5-dev.ca31f6a.0":"2024-03-05T17:04:39.470Z","2.0.5-dev.040d3a3.0":"2024-03-06T15:04:39.098Z","2.0.5-dev.edf3164.0":"2024-03-07T08:54:00.661Z","2.0.5-dev.cf60f71.0":"2024-03-07T12:07:09.008Z","2.0.5-dev.e383ae3.0":"2024-03-08T15:40:39.307Z","2.0.5-dev.d254316.0":"2024-03-11T19:13:56.331Z","2.0.5-dev.6187f30.0":"2024-03-12T10:15:06.810Z","2.0.5-dev.a1f9dc4.0":"2024-03-12T10:17:20.771Z","2.0.5-dev.9657b86.0":"2024-03-12T10:28:43.993Z","2.0.5-dev.43e70c1.0":"2024-03-12T11:47:24.437Z","2.0.5-dev.6d0a0ae.0":"2024-03-12T12:54:41.263Z","2.0.5-dev.383af39.0":"2024-03-12T12:59:10.708Z","2.0.5-dev.16a2c27.0":"2024-03-14T14:41:02.303Z","2.0.5-dev.2373e94.0":"2024-03-15T09:00:53.142Z","2.0.5-dev.f943944.0":"2024-03-20T14:16:07.888Z","2.0.5-dev.1f81ff0.0":"2024-03-20T14:46:46.028Z","2.0.5-dev.a83e9d5.0":"2024-03-25T14:10:36.401Z","2.0.5-dev.c4e039a.0":"2024-03-25T19:00:10.005Z","2.0.5":"2024-03-26T17:55:08.291Z","2.0.6-dev.a173a8f.0":"2024-03-26T18:00:42.739Z","2.0.6-dev.526c6f5.0":"2024-03-27T02:26:26.312Z","2.0.6-dev.5341c3a.0":"2024-03-29T03:28:12.160Z","2.0.6-dev.67d8a74.0":"2024-04-04T14:41:37.271Z","2.0.6-dev.5a579fa.0":"2024-04-05T16:14:14.263Z","2.0.6-dev.ce59737.0":"2024-04-07T11:37:55.096Z","2.0.6-dev.bfb4f6f.0":"2024-04-08T13:39:32.586Z","2.0.6-dev.1c03666.0":"2024-04-15T13:25:56.392Z","2.0.6-dev.578ebb6.0":"2024-04-15T16:17:39.091Z","2.0.6-dev.e29deea.0":"2024-04-18T04:16:52.192Z","2.0.6-dev.1ab7a6b.0":"2024-04-18T11:45:20.431Z","2.0.6-dev.93296c2.0":"2024-04-18T15:02:56.158Z","2.0.6-dev.dd172c7.0":"2024-04-18T19:35:10.009Z","2.0.6-dev.d4e937d.0":"2024-04-19T04:33:34.374Z","2.0.6-dev.53e2466.0":"2024-04-22T16:54:35.813Z","2.0.6-dev.7be0060.0":"2024-04-23T08:50:07.498Z","2.0.6-dev.5fd9dbb.0":"2024-04-23T14:17:10.579Z","2.0.6-dev.ed2781f.0":"2024-04-25T13:16:05.710Z","2.0.6-dev.419c8d3.0":"2024-04-25T15:36:52.097Z","2.0.6-dev.de3e8f8.0":"2024-04-26T19:25:29.473Z","2.0.6-dev.ebbbf1e.0":"2024-04-30T08:50:36.136Z","2.0.6-dev.7a470c9.0":"2024-05-01T23:12:05.491Z","2.0.6-dev.b413ebd.0":"2024-05-02T08:00:12.203Z","2.0.6-dev.88b7e2e.0":"2024-05-02T13:45:12.705Z","2.0.6-dev.c62ef79.0":"2024-05-06T10:18:26.566Z","2.0.6-dev.5d2f2aa.0":"2024-05-06T20:36:48.261Z","2.0.6-dev.f216540.0":"2024-05-06T20:37:50.109Z","2.0.6-dev.f44dc5b.0":"2024-05-09T13:38:39.263Z","2.0.6-dev.12c2515.0":"2024-05-13T14:11:31.875Z","2.0.6-dev.408125.0":"2024-05-13T23:09:05.987Z","2.0.6-dev.866469d.0":"2024-05-14T11:35:19.252Z","2.0.6-dev.2f73aa5.0":"2024-05-16T14:22:00.878Z","2.0.6-dev.32b6b29.0":"2024-05-21T13:13:57.264Z","2.0.6-dev.553f270.0":"2024-05-21T20:28:19.818Z","2.0.6-dev.3904a46.0":"2024-05-22T03:38:31.391Z","2.0.6-dev.ac2e180.0":"2024-05-22T15:36:57.727Z","2.0.6-dev.e0fc158.0":"2024-05-22T16:00:08.307Z","2.0.6-dev.f4e55bd.0":"2024-05-22T16:27:58.075Z","2.0.7-dev.fd2982d.0":"2024-05-23T14:59:43.667Z","2.0.6":"2024-05-23T15:01:55.112Z","2.0.7-dev.7537f03.0":"2024-05-23T15:35:26.870Z","2.0.7-dev.692987a.0":"2024-05-24T13:46:43.288Z","2.0.7-dev.962b99f.0":"2024-05-24T15:40:58.652Z","2.0.7-dev.22c07ad.0":"2024-05-27T12:01:57.688Z","2.0.7-dev.683be62.0":"2024-05-28T12:52:49.967Z","2.0.7-dev.7084665.0":"2024-05-29T14:57:56.942Z","2.0.7-dev.f687df6.0":"2024-05-29T20:10:13.050Z","2.0.7-dev.b63af9f.0":"2024-05-30T13:17:59.305Z","2.0.7-dev.9086b98.0":"2024-05-30T13:25:54.083Z"},"maintainers":[{"name":"luu-alex","email":"alex.luu@mail.utoronto.ca"},{"name":"mpetrunic","email":"marin.petrunic@gmail.com"},{"name":"jdevcs","email":"junaid@chainsafe.io"},{"name":"gregthegreek","email":"gregorymarkou@gmail.com"},{"name":"spacesailor","email":"signup@wyatt.email"}],"author":{"name":"ChainSafe Systems"},"repository":{"url":"git+https://github.com/ChainSafe/web3.js.git","type":"git"},"license":"LGPL-3.0","homepage":"https://github.com/ChainSafe/web3.js#readme","bugs":{"url":"https://github.com/ChainSafe/web3.js/issues"},"readme":"","readmeFilename":""}